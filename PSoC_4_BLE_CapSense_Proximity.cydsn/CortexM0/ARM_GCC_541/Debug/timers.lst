ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"timers.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	x,2,2
  20              		.bss
  21              		.align	2
  22              	xActiveTimerList1:
  23 0000 00000000 		.space	20
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.align	2
  25              	xActiveTimerList2:
  26 0014 00000000 		.space	20
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.align	2
  28              	pxCurrentTimerList:
  29 0028 00000000 		.space	4
  30              		.align	2
  31              	pxOverflowTimerList:
  32 002c 00000000 		.space	4
  33              		.align	2
  34              	xTimerQueue:
  35 0030 00000000 		.space	4
  36              		.align	2
  37              	xTimerTaskHandle:
  38 0034 00000000 		.space	4
  39              		.section	.rodata
  40              		.align	2
  41              	.LC1:
  42 0000 546D7220 		.ascii	"Tmr Svc\000"
  42      53766300 
  43              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
  44              		.align	2
  45              		.global	xTimerCreateTimerTask
  46              		.code	16
  47              		.thumb_func
  48              		.type	xTimerCreateTimerTask, %function
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 2


  49              	xTimerCreateTimerTask:
  50              	.LFB0:
  51              		.file 1 "..\\FreeRTOS\\Source\\timers.c"
   1:..\FreeRTOS\Source/timers.c **** /*
   2:..\FreeRTOS\Source/timers.c ****  * FreeRTOS Kernel V10.4.3
   3:..\FreeRTOS\Source/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source/timers.c ****  *
   5:..\FreeRTOS\Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source/timers.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source/timers.c ****  *
  12:..\FreeRTOS\Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source/timers.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source/timers.c ****  *
  15:..\FreeRTOS\Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source/timers.c ****  *
  22:..\FreeRTOS\Source/timers.c ****  * https://www.FreeRTOS.org
  23:..\FreeRTOS\Source/timers.c ****  * https://github.com/FreeRTOS
  24:..\FreeRTOS\Source/timers.c ****  *
  25:..\FreeRTOS\Source/timers.c ****  */
  26:..\FreeRTOS\Source/timers.c **** 
  27:..\FreeRTOS\Source/timers.c **** /* Standard includes. */
  28:..\FreeRTOS\Source/timers.c **** #include <stdlib.h>
  29:..\FreeRTOS\Source/timers.c **** 
  30:..\FreeRTOS\Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:..\FreeRTOS\Source/timers.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  32:..\FreeRTOS\Source/timers.c ****  * task.h is included from an application file. */
  33:..\FreeRTOS\Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:..\FreeRTOS\Source/timers.c **** 
  35:..\FreeRTOS\Source/timers.c **** #include "FreeRTOS.h"
  36:..\FreeRTOS\Source/timers.c **** #include "task.h"
  37:..\FreeRTOS\Source/timers.c **** #include "queue.h"
  38:..\FreeRTOS\Source/timers.c **** #include "timers.h"
  39:..\FreeRTOS\Source/timers.c **** 
  40:..\FreeRTOS\Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  41:..\FreeRTOS\Source/timers.c ****     #error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function availabl
  42:..\FreeRTOS\Source/timers.c **** #endif
  43:..\FreeRTOS\Source/timers.c **** 
  44:..\FreeRTOS\Source/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:..\FreeRTOS\Source/timers.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:..\FreeRTOS\Source/timers.c ****  * for the header files above, but not in this file, in order to generate the
  47:..\FreeRTOS\Source/timers.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:..\FreeRTOS\Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  49:..\FreeRTOS\Source/timers.c **** 
  50:..\FreeRTOS\Source/timers.c **** 
  51:..\FreeRTOS\Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  52:..\FreeRTOS\Source/timers.c ****  * to include software timer functionality.  This #if is closed at the very bottom
  53:..\FreeRTOS\Source/timers.c ****  * of this file.  If you want to include software timer functionality then ensure
  54:..\FreeRTOS\Source/timers.c ****  * configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 3


  55:..\FreeRTOS\Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  56:..\FreeRTOS\Source/timers.c **** 
  57:..\FreeRTOS\Source/timers.c **** /* Misc definitions. */
  58:..\FreeRTOS\Source/timers.c ****     #define tmrNO_DELAY    ( TickType_t ) 0U
  59:..\FreeRTOS\Source/timers.c **** 
  60:..\FreeRTOS\Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  61:..\FreeRTOS\Source/timers.c ****  * defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  62:..\FreeRTOS\Source/timers.c ****     #ifndef configTIMER_SERVICE_TASK_NAME
  63:..\FreeRTOS\Source/timers.c ****         #define configTIMER_SERVICE_TASK_NAME    "Tmr Svc"
  64:..\FreeRTOS\Source/timers.c ****     #endif
  65:..\FreeRTOS\Source/timers.c **** 
  66:..\FreeRTOS\Source/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  67:..\FreeRTOS\Source/timers.c ****     #define tmrSTATUS_IS_ACTIVE                  ( ( uint8_t ) 0x01 )
  68:..\FreeRTOS\Source/timers.c ****     #define tmrSTATUS_IS_STATICALLY_ALLOCATED    ( ( uint8_t ) 0x02 )
  69:..\FreeRTOS\Source/timers.c ****     #define tmrSTATUS_IS_AUTORELOAD              ( ( uint8_t ) 0x04 )
  70:..\FreeRTOS\Source/timers.c **** 
  71:..\FreeRTOS\Source/timers.c **** /* The definition of the timers themselves. */
  72:..\FreeRTOS\Source/timers.c ****     typedef struct tmrTimerControl                  /* The old naming convention is used to prevent
  73:..\FreeRTOS\Source/timers.c ****     {
  74:..\FreeRTOS\Source/timers.c ****         const char * pcTimerName;                   /*<< Text name.  This is not used by the kernel
  75:..\FreeRTOS\Source/timers.c ****         ListItem_t xTimerListItem;                  /*<< Standard linked list item as used by all k
  76:..\FreeRTOS\Source/timers.c ****         TickType_t xTimerPeriodInTicks;             /*<< How quickly and often the timer expires. *
  77:..\FreeRTOS\Source/timers.c ****         void * pvTimerID;                           /*<< An ID to identify the timer.  This allows 
  78:..\FreeRTOS\Source/timers.c ****         TimerCallbackFunction_t pxCallbackFunction; /*<< The function that will be called when the 
  79:..\FreeRTOS\Source/timers.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
  80:..\FreeRTOS\Source/timers.c ****             UBaseType_t uxTimerNumber;              /*<< An ID assigned by trace tools such as Free
  81:..\FreeRTOS\Source/timers.c ****         #endif
  82:..\FreeRTOS\Source/timers.c ****         uint8_t ucStatus;                           /*<< Holds bits to say if the timer was statica
  83:..\FreeRTOS\Source/timers.c ****     } xTIMER;
  84:..\FreeRTOS\Source/timers.c **** 
  85:..\FreeRTOS\Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:..\FreeRTOS\Source/timers.c ****  * name below to enable the use of older kernel aware debuggers. */
  87:..\FreeRTOS\Source/timers.c ****     typedef xTIMER Timer_t;
  88:..\FreeRTOS\Source/timers.c **** 
  89:..\FreeRTOS\Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:..\FreeRTOS\Source/timers.c ****  * Two types of message can be queued - messages that manipulate a software timer,
  91:..\FreeRTOS\Source/timers.c ****  * and messages that request the execution of a non-timer related callback.  The
  92:..\FreeRTOS\Source/timers.c ****  * two message types are defined in two separate structures, xTimerParametersType
  93:..\FreeRTOS\Source/timers.c ****  * and xCallbackParametersType respectively. */
  94:..\FreeRTOS\Source/timers.c ****     typedef struct tmrTimerParameters
  95:..\FreeRTOS\Source/timers.c ****     {
  96:..\FreeRTOS\Source/timers.c ****         TickType_t xMessageValue; /*<< An optional value used by a subset of commands, for example,
  97:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer;        /*<< The timer to which the command will be applied. */
  98:..\FreeRTOS\Source/timers.c ****     } TimerParameter_t;
  99:..\FreeRTOS\Source/timers.c **** 
 100:..\FreeRTOS\Source/timers.c **** 
 101:..\FreeRTOS\Source/timers.c ****     typedef struct tmrCallbackParameters
 102:..\FreeRTOS\Source/timers.c ****     {
 103:..\FreeRTOS\Source/timers.c ****         PendedFunction_t pxCallbackFunction; /* << The callback function to execute. */
 104:..\FreeRTOS\Source/timers.c ****         void * pvParameter1;                 /* << The value that will be used as the callback func
 105:..\FreeRTOS\Source/timers.c ****         uint32_t ulParameter2;               /* << The value that will be used as the callback func
 106:..\FreeRTOS\Source/timers.c ****     } CallbackParameters_t;
 107:..\FreeRTOS\Source/timers.c **** 
 108:..\FreeRTOS\Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:..\FreeRTOS\Source/timers.c ****  * that is used to determine which message type is valid. */
 110:..\FreeRTOS\Source/timers.c ****     typedef struct tmrTimerQueueMessage
 111:..\FreeRTOS\Source/timers.c ****     {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 4


 112:..\FreeRTOS\Source/timers.c ****         BaseType_t xMessageID; /*<< The command being sent to the timer service task. */
 113:..\FreeRTOS\Source/timers.c ****         union
 114:..\FreeRTOS\Source/timers.c ****         {
 115:..\FreeRTOS\Source/timers.c ****             TimerParameter_t xTimerParameters;
 116:..\FreeRTOS\Source/timers.c **** 
 117:..\FreeRTOS\Source/timers.c ****             /* Don't include xCallbackParameters if it is not going to be used as
 118:..\FreeRTOS\Source/timers.c ****              * it makes the structure (and therefore the timer queue) larger. */
 119:..\FreeRTOS\Source/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:..\FreeRTOS\Source/timers.c ****                 CallbackParameters_t xCallbackParameters;
 121:..\FreeRTOS\Source/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 122:..\FreeRTOS\Source/timers.c ****         } u;
 123:..\FreeRTOS\Source/timers.c ****     } DaemonTaskMessage_t;
 124:..\FreeRTOS\Source/timers.c **** 
 125:..\FreeRTOS\Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:..\FreeRTOS\Source/timers.c ****  * which static variables must be declared volatile. */
 127:..\FreeRTOS\Source/timers.c **** 
 128:..\FreeRTOS\Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:..\FreeRTOS\Source/timers.c ****  * time order, with the nearest expiry time at the front of the list.  Only the
 130:..\FreeRTOS\Source/timers.c ****  * timer service task is allowed to access these lists.
 131:..\FreeRTOS\Source/timers.c ****  * xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 132:..\FreeRTOS\Source/timers.c ****  * breaks some kernel aware debuggers, and debuggers that reply on removing the
 133:..\FreeRTOS\Source/timers.c ****  * static qualifier. */
 134:..\FreeRTOS\Source/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList1;
 135:..\FreeRTOS\Source/timers.c ****     PRIVILEGED_DATA static List_t xActiveTimerList2;
 136:..\FreeRTOS\Source/timers.c ****     PRIVILEGED_DATA static List_t * pxCurrentTimerList;
 137:..\FreeRTOS\Source/timers.c ****     PRIVILEGED_DATA static List_t * pxOverflowTimerList;
 138:..\FreeRTOS\Source/timers.c **** 
 139:..\FreeRTOS\Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 140:..\FreeRTOS\Source/timers.c ****     PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 141:..\FreeRTOS\Source/timers.c ****     PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 142:..\FreeRTOS\Source/timers.c **** 
 143:..\FreeRTOS\Source/timers.c **** /*lint -restore */
 144:..\FreeRTOS\Source/timers.c **** 
 145:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 146:..\FreeRTOS\Source/timers.c **** 
 147:..\FreeRTOS\Source/timers.c **** /*
 148:..\FreeRTOS\Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 149:..\FreeRTOS\Source/timers.c ****  * been initialised already.
 150:..\FreeRTOS\Source/timers.c ****  */
 151:..\FreeRTOS\Source/timers.c ****     static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 152:..\FreeRTOS\Source/timers.c **** 
 153:..\FreeRTOS\Source/timers.c **** /*
 154:..\FreeRTOS\Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 155:..\FreeRTOS\Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 156:..\FreeRTOS\Source/timers.c ****  * xTimerQueue queue.
 157:..\FreeRTOS\Source/timers.c ****  */
 158:..\FreeRTOS\Source/timers.c ****     static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 159:..\FreeRTOS\Source/timers.c **** 
 160:..\FreeRTOS\Source/timers.c **** /*
 161:..\FreeRTOS\Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 162:..\FreeRTOS\Source/timers.c ****  * received on the timer queue.
 163:..\FreeRTOS\Source/timers.c ****  */
 164:..\FreeRTOS\Source/timers.c ****     static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 165:..\FreeRTOS\Source/timers.c **** 
 166:..\FreeRTOS\Source/timers.c **** /*
 167:..\FreeRTOS\Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 168:..\FreeRTOS\Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 5


 169:..\FreeRTOS\Source/timers.c ****  */
 170:..\FreeRTOS\Source/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 171:..\FreeRTOS\Source/timers.c ****                                                   const TickType_t xNextExpiryTime,
 172:..\FreeRTOS\Source/timers.c ****                                                   const TickType_t xTimeNow,
 173:..\FreeRTOS\Source/timers.c ****                                                   const TickType_t xCommandTime ) PRIVILEGED_FUNCTI
 174:..\FreeRTOS\Source/timers.c **** 
 175:..\FreeRTOS\Source/timers.c **** /*
 176:..\FreeRTOS\Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 177:..\FreeRTOS\Source/timers.c ****  * auto-reload timer, then call its callback.
 178:..\FreeRTOS\Source/timers.c ****  */
 179:..\FreeRTOS\Source/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 180:..\FreeRTOS\Source/timers.c ****                                         const TickType_t xTimeNow ) PRIVILEGED_FUNCTION;
 181:..\FreeRTOS\Source/timers.c **** 
 182:..\FreeRTOS\Source/timers.c **** /*
 183:..\FreeRTOS\Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 184:..\FreeRTOS\Source/timers.c ****  * current timer list does not still reference some timers.
 185:..\FreeRTOS\Source/timers.c ****  */
 186:..\FreeRTOS\Source/timers.c ****     static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 187:..\FreeRTOS\Source/timers.c **** 
 188:..\FreeRTOS\Source/timers.c **** /*
 189:..\FreeRTOS\Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 190:..\FreeRTOS\Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 191:..\FreeRTOS\Source/timers.c ****  */
 192:..\FreeRTOS\Source/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FU
 193:..\FreeRTOS\Source/timers.c **** 
 194:..\FreeRTOS\Source/timers.c **** /*
 195:..\FreeRTOS\Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 196:..\FreeRTOS\Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 197:..\FreeRTOS\Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 198:..\FreeRTOS\Source/timers.c ****  * to pdTRUE.
 199:..\FreeRTOS\Source/timers.c ****  */
 200:..\FreeRTOS\Source/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION
 201:..\FreeRTOS\Source/timers.c **** 
 202:..\FreeRTOS\Source/timers.c **** /*
 203:..\FreeRTOS\Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 204:..\FreeRTOS\Source/timers.c ****  * until either a timer does expire or a command is received.
 205:..\FreeRTOS\Source/timers.c ****  */
 206:..\FreeRTOS\Source/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 207:..\FreeRTOS\Source/timers.c ****                                             BaseType_t xListWasEmpty ) PRIVILEGED_FUNCTION;
 208:..\FreeRTOS\Source/timers.c **** 
 209:..\FreeRTOS\Source/timers.c **** /*
 210:..\FreeRTOS\Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 211:..\FreeRTOS\Source/timers.c ****  * dynamically to fill in the structure's members.
 212:..\FreeRTOS\Source/timers.c ****  */
 213:..\FreeRTOS\Source/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 214:..\FreeRTOS\Source/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 215:..\FreeRTOS\Source/timers.c ****                                        const UBaseType_t uxAutoReload,
 216:..\FreeRTOS\Source/timers.c ****                                        void * const pvTimerID,
 217:..\FreeRTOS\Source/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 218:..\FreeRTOS\Source/timers.c ****                                        Timer_t * pxNewTimer ) PRIVILEGED_FUNCTION;
 219:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 220:..\FreeRTOS\Source/timers.c **** 
 221:..\FreeRTOS\Source/timers.c ****     BaseType_t xTimerCreateTimerTask( void )
 222:..\FreeRTOS\Source/timers.c ****     {
  52              		.loc 1 222 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 6


  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 90B5     		push	{r4, r7, lr}
  57              		.cfi_def_cfa_offset 12
  58              		.cfi_offset 4, -12
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 89B0     		sub	sp, sp, #36
  62              		.cfi_def_cfa_offset 48
  63 0004 04AF     		add	r7, sp, #16
  64              		.cfi_def_cfa 7, 32
 223:..\FreeRTOS\Source/timers.c ****         BaseType_t xReturn = pdFAIL;
  65              		.loc 1 223 0
  66 0006 0023     		movs	r3, #0
  67 0008 FB60     		str	r3, [r7, #12]
 224:..\FreeRTOS\Source/timers.c **** 
 225:..\FreeRTOS\Source/timers.c ****         /* This function is called when the scheduler is started if
 226:..\FreeRTOS\Source/timers.c ****          * configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 227:..\FreeRTOS\Source/timers.c ****          * timer service task has been created/initialised.  If timers have already
 228:..\FreeRTOS\Source/timers.c ****          * been created then the initialisation will already have been performed. */
 229:..\FreeRTOS\Source/timers.c ****         prvCheckForValidListAndQueue();
  68              		.loc 1 229 0
  69 000a FFF7FEFF 		bl	prvCheckForValidListAndQueue
 230:..\FreeRTOS\Source/timers.c **** 
 231:..\FreeRTOS\Source/timers.c ****         if( xTimerQueue != NULL )
  70              		.loc 1 231 0
  71 000e 184B     		ldr	r3, .L7
  72 0010 1B68     		ldr	r3, [r3]
  73 0012 002B     		cmp	r3, #0
  74 0014 20D0     		beq	.L2
  75              	.LBB2:
 232:..\FreeRTOS\Source/timers.c ****         {
 233:..\FreeRTOS\Source/timers.c ****             #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 234:..\FreeRTOS\Source/timers.c ****                 {
 235:..\FreeRTOS\Source/timers.c ****                     StaticTask_t * pxTimerTaskTCBBuffer = NULL;
  76              		.loc 1 235 0
  77 0016 0023     		movs	r3, #0
  78 0018 BB60     		str	r3, [r7, #8]
 236:..\FreeRTOS\Source/timers.c ****                     StackType_t * pxTimerTaskStackBuffer = NULL;
  79              		.loc 1 236 0
  80 001a 0023     		movs	r3, #0
  81 001c 7B60     		str	r3, [r7, #4]
 237:..\FreeRTOS\Source/timers.c ****                     uint32_t ulTimerTaskStackSize;
 238:..\FreeRTOS\Source/timers.c **** 
 239:..\FreeRTOS\Source/timers.c ****                     vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer,
  82              		.loc 1 239 0
  83 001e 3A00     		movs	r2, r7
  84 0020 391D     		adds	r1, r7, #4
  85 0022 0823     		movs	r3, #8
  86 0024 FB18     		adds	r3, r7, r3
  87 0026 1800     		movs	r0, r3
  88 0028 FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 240:..\FreeRTOS\Source/timers.c ****                     xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
  89              		.loc 1 240 0
  90 002c 3C68     		ldr	r4, [r7]
  91 002e 7B68     		ldr	r3, [r7, #4]
  92 0030 BA68     		ldr	r2, [r7, #8]
  93 0032 1049     		ldr	r1, .L7+4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 7


  94 0034 1048     		ldr	r0, .L7+8
  95 0036 0292     		str	r2, [sp, #8]
  96 0038 0193     		str	r3, [sp, #4]
  97 003a 0323     		movs	r3, #3
  98 003c 0093     		str	r3, [sp]
  99 003e 0023     		movs	r3, #0
 100 0040 2200     		movs	r2, r4
 101 0042 FFF7FEFF 		bl	xTaskCreateStatic
 102 0046 0200     		movs	r2, r0
 103 0048 0C4B     		ldr	r3, .L7+12
 104 004a 1A60     		str	r2, [r3]
 241:..\FreeRTOS\Source/timers.c ****                                                           configTIMER_SERVICE_TASK_NAME,
 242:..\FreeRTOS\Source/timers.c ****                                                           ulTimerTaskStackSize,
 243:..\FreeRTOS\Source/timers.c ****                                                           NULL,
 244:..\FreeRTOS\Source/timers.c ****                                                           ( ( UBaseType_t ) configTIMER_TASK_PRIORI
 245:..\FreeRTOS\Source/timers.c ****                                                           pxTimerTaskStackBuffer,
 246:..\FreeRTOS\Source/timers.c ****                                                           pxTimerTaskTCBBuffer );
 247:..\FreeRTOS\Source/timers.c **** 
 248:..\FreeRTOS\Source/timers.c ****                     if( xTimerTaskHandle != NULL )
 105              		.loc 1 248 0
 106 004c 0B4B     		ldr	r3, .L7+12
 107 004e 1B68     		ldr	r3, [r3]
 108 0050 002B     		cmp	r3, #0
 109 0052 01D0     		beq	.L2
 249:..\FreeRTOS\Source/timers.c ****                     {
 250:..\FreeRTOS\Source/timers.c ****                         xReturn = pdPASS;
 110              		.loc 1 250 0
 111 0054 0123     		movs	r3, #1
 112 0056 FB60     		str	r3, [r7, #12]
 113              	.L2:
 114              	.LBE2:
 251:..\FreeRTOS\Source/timers.c ****                     }
 252:..\FreeRTOS\Source/timers.c ****                 }
 253:..\FreeRTOS\Source/timers.c ****             #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 254:..\FreeRTOS\Source/timers.c ****                 {
 255:..\FreeRTOS\Source/timers.c ****                     xReturn = xTaskCreate( prvTimerTask,
 256:..\FreeRTOS\Source/timers.c ****                                            configTIMER_SERVICE_TASK_NAME,
 257:..\FreeRTOS\Source/timers.c ****                                            configTIMER_TASK_STACK_DEPTH,
 258:..\FreeRTOS\Source/timers.c ****                                            NULL,
 259:..\FreeRTOS\Source/timers.c ****                                            ( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIV
 260:..\FreeRTOS\Source/timers.c ****                                            &xTimerTaskHandle );
 261:..\FreeRTOS\Source/timers.c ****                 }
 262:..\FreeRTOS\Source/timers.c ****             #endif /* configSUPPORT_STATIC_ALLOCATION */
 263:..\FreeRTOS\Source/timers.c ****         }
 264:..\FreeRTOS\Source/timers.c ****         else
 265:..\FreeRTOS\Source/timers.c ****         {
 266:..\FreeRTOS\Source/timers.c ****             mtCOVERAGE_TEST_MARKER();
 267:..\FreeRTOS\Source/timers.c ****         }
 268:..\FreeRTOS\Source/timers.c **** 
 269:..\FreeRTOS\Source/timers.c ****         configASSERT( xReturn );
 115              		.loc 1 269 0
 116 0058 094B     		ldr	r3, .L7+16
 117 005a 1B88     		ldrh	r3, [r3]
 118 005c 002B     		cmp	r3, #0
 119 005e 01D1     		bne	.L4
 120              		.loc 1 269 0 is_stmt 0 discriminator 1
 121              		.syntax divided
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 8


 122              	@ 269 "..\FreeRTOS\Source\timers.c" 1
 123 0060 72B6     		 cpsid i 
 124              	@ 0 "" 2
 125              		.thumb
 126              		.syntax unified
 127              	.L5:
 128 0062 FEE7     		b	.L5
 129              	.L4:
 270:..\FreeRTOS\Source/timers.c ****         return xReturn;
 130              		.loc 1 270 0 is_stmt 1
 131 0064 FB68     		ldr	r3, [r7, #12]
 271:..\FreeRTOS\Source/timers.c ****     }
 132              		.loc 1 271 0
 133 0066 1800     		movs	r0, r3
 134 0068 BD46     		mov	sp, r7
 135 006a 05B0     		add	sp, sp, #20
 136              		@ sp needed
 137 006c 90BD     		pop	{r4, r7, pc}
 138              	.L8:
 139 006e C046     		.align	2
 140              	.L7:
 141 0070 30000000 		.word	xTimerQueue
 142 0074 00000000 		.word	.LC1
 143 0078 00000000 		.word	prvTimerTask
 144 007c 34000000 		.word	xTimerTaskHandle
 145 0080 00000000 		.word	x
 146              		.cfi_endproc
 147              	.LFE0:
 148              		.size	xTimerCreateTimerTask, .-xTimerCreateTimerTask
 149              		.section	.text.xTimerCreate,"ax",%progbits
 150              		.align	2
 151              		.global	xTimerCreate
 152              		.code	16
 153              		.thumb_func
 154              		.type	xTimerCreate, %function
 155              	xTimerCreate:
 156              	.LFB1:
 272:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 273:..\FreeRTOS\Source/timers.c **** 
 274:..\FreeRTOS\Source/timers.c ****     #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 275:..\FreeRTOS\Source/timers.c **** 
 276:..\FreeRTOS\Source/timers.c ****         TimerHandle_t xTimerCreate( const char * const pcTimerName, /*lint !e971 Unqualified char t
 277:..\FreeRTOS\Source/timers.c ****                                     const TickType_t xTimerPeriodInTicks,
 278:..\FreeRTOS\Source/timers.c ****                                     const UBaseType_t uxAutoReload,
 279:..\FreeRTOS\Source/timers.c ****                                     void * const pvTimerID,
 280:..\FreeRTOS\Source/timers.c ****                                     TimerCallbackFunction_t pxCallbackFunction )
 281:..\FreeRTOS\Source/timers.c ****         {
 157              		.loc 1 281 0
 158              		.cfi_startproc
 159              		@ args = 4, pretend = 0, frame = 24
 160              		@ frame_needed = 1, uses_anonymous_args = 0
 161 0000 90B5     		push	{r4, r7, lr}
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 9


 167              		.cfi_def_cfa_offset 48
 168 0004 02AF     		add	r7, sp, #8
 169              		.cfi_def_cfa 7, 40
 170 0006 F860     		str	r0, [r7, #12]
 171 0008 B960     		str	r1, [r7, #8]
 172 000a 7A60     		str	r2, [r7, #4]
 173 000c 3B60     		str	r3, [r7]
 282:..\FreeRTOS\Source/timers.c ****             Timer_t * pxNewTimer;
 283:..\FreeRTOS\Source/timers.c **** 
 284:..\FreeRTOS\Source/timers.c ****             pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All 
 174              		.loc 1 284 0
 175 000e 2820     		movs	r0, #40
 176 0010 FFF7FEFF 		bl	pvPortMalloc
 177 0014 0300     		movs	r3, r0
 178 0016 7B61     		str	r3, [r7, #20]
 285:..\FreeRTOS\Source/timers.c **** 
 286:..\FreeRTOS\Source/timers.c ****             if( pxNewTimer != NULL )
 179              		.loc 1 286 0
 180 0018 7B69     		ldr	r3, [r7, #20]
 181 001a 002B     		cmp	r3, #0
 182 001c 0ED0     		beq	.L10
 287:..\FreeRTOS\Source/timers.c ****             {
 288:..\FreeRTOS\Source/timers.c ****                 /* Status is thus far zero as the timer is not created statically
 289:..\FreeRTOS\Source/timers.c ****                  * and has not been started.  The auto-reload bit may get set in
 290:..\FreeRTOS\Source/timers.c ****                  * prvInitialiseNewTimer. */
 291:..\FreeRTOS\Source/timers.c ****                 pxNewTimer->ucStatus = 0x00;
 183              		.loc 1 291 0
 184 001e 7B69     		ldr	r3, [r7, #20]
 185 0020 2422     		movs	r2, #36
 186 0022 0021     		movs	r1, #0
 187 0024 9954     		strb	r1, [r3, r2]
 292:..\FreeRTOS\Source/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 188              		.loc 1 292 0
 189 0026 3C68     		ldr	r4, [r7]
 190 0028 7A68     		ldr	r2, [r7, #4]
 191 002a B968     		ldr	r1, [r7, #8]
 192 002c F868     		ldr	r0, [r7, #12]
 193 002e 7B69     		ldr	r3, [r7, #20]
 194 0030 0193     		str	r3, [sp, #4]
 195 0032 BB6A     		ldr	r3, [r7, #40]
 196 0034 0093     		str	r3, [sp]
 197 0036 2300     		movs	r3, r4
 198 0038 FFF7FEFF 		bl	prvInitialiseNewTimer
 199              	.L10:
 293:..\FreeRTOS\Source/timers.c ****             }
 294:..\FreeRTOS\Source/timers.c **** 
 295:..\FreeRTOS\Source/timers.c ****             return pxNewTimer;
 200              		.loc 1 295 0
 201 003c 7B69     		ldr	r3, [r7, #20]
 296:..\FreeRTOS\Source/timers.c ****         }
 202              		.loc 1 296 0
 203 003e 1800     		movs	r0, r3
 204 0040 BD46     		mov	sp, r7
 205 0042 07B0     		add	sp, sp, #28
 206              		@ sp needed
 207 0044 90BD     		pop	{r4, r7, pc}
 208              		.cfi_endproc
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 10


 209              	.LFE1:
 210              		.size	xTimerCreate, .-xTimerCreate
 211 0046 C046     		.section	.text.xTimerCreateStatic,"ax",%progbits
 212              		.align	2
 213              		.global	xTimerCreateStatic
 214              		.code	16
 215              		.thumb_func
 216              		.type	xTimerCreateStatic, %function
 217              	xTimerCreateStatic:
 218              	.LFB2:
 297:..\FreeRTOS\Source/timers.c **** 
 298:..\FreeRTOS\Source/timers.c ****     #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 299:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 300:..\FreeRTOS\Source/timers.c **** 
 301:..\FreeRTOS\Source/timers.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:..\FreeRTOS\Source/timers.c **** 
 303:..\FreeRTOS\Source/timers.c ****         TimerHandle_t xTimerCreateStatic( const char * const pcTimerName, /*lint !e971 Unqualified 
 304:..\FreeRTOS\Source/timers.c ****                                           const TickType_t xTimerPeriodInTicks,
 305:..\FreeRTOS\Source/timers.c ****                                           const UBaseType_t uxAutoReload,
 306:..\FreeRTOS\Source/timers.c ****                                           void * const pvTimerID,
 307:..\FreeRTOS\Source/timers.c ****                                           TimerCallbackFunction_t pxCallbackFunction,
 308:..\FreeRTOS\Source/timers.c ****                                           StaticTimer_t * pxTimerBuffer )
 309:..\FreeRTOS\Source/timers.c ****         {
 219              		.loc 1 309 0
 220              		.cfi_startproc
 221              		@ args = 8, pretend = 0, frame = 24
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 90B5     		push	{r4, r7, lr}
 224              		.cfi_def_cfa_offset 12
 225              		.cfi_offset 4, -12
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 89B0     		sub	sp, sp, #36
 229              		.cfi_def_cfa_offset 48
 230 0004 02AF     		add	r7, sp, #8
 231              		.cfi_def_cfa 7, 40
 232 0006 F860     		str	r0, [r7, #12]
 233 0008 B960     		str	r1, [r7, #8]
 234 000a 7A60     		str	r2, [r7, #4]
 235 000c 3B60     		str	r3, [r7]
 236              	.LBB3:
 310:..\FreeRTOS\Source/timers.c ****             Timer_t * pxNewTimer;
 311:..\FreeRTOS\Source/timers.c **** 
 312:..\FreeRTOS\Source/timers.c ****             #if ( configASSERT_DEFINED == 1 )
 313:..\FreeRTOS\Source/timers.c ****                 {
 314:..\FreeRTOS\Source/timers.c ****                     /* Sanity check that the size of the structure used to declare a
 315:..\FreeRTOS\Source/timers.c ****                      * variable of type StaticTimer_t equals the size of the real timer
 316:..\FreeRTOS\Source/timers.c ****                      * structure. */
 317:..\FreeRTOS\Source/timers.c ****                     volatile size_t xSize = sizeof( StaticTimer_t );
 237              		.loc 1 317 0
 238 000e 2823     		movs	r3, #40
 239 0010 3B61     		str	r3, [r7, #16]
 318:..\FreeRTOS\Source/timers.c ****                     configASSERT( xSize == sizeof( Timer_t ) );
 240              		.loc 1 318 0
 241 0012 134B     		ldr	r3, .L19
 242 0014 1B88     		ldrh	r3, [r3]
 243 0016 002B     		cmp	r3, #0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 11


 244 0018 01D1     		bne	.L13
 245              		.loc 1 318 0 is_stmt 0 discriminator 1
 246              		.syntax divided
 247              	@ 318 "..\FreeRTOS\Source\timers.c" 1
 248 001a 72B6     		 cpsid i 
 249              	@ 0 "" 2
 250              		.thumb
 251              		.syntax unified
 252              	.L14:
 253 001c FEE7     		b	.L14
 254              	.L13:
 255              		.loc 1 318 0 discriminator 2
 256 001e 3B69     		ldr	r3, [r7, #16]
 319:..\FreeRTOS\Source/timers.c ****                     ( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 257              		.loc 1 319 0 is_stmt 1 discriminator 2
 258 0020 3B69     		ldr	r3, [r7, #16]
 259              	.LBE3:
 320:..\FreeRTOS\Source/timers.c ****                 }
 321:..\FreeRTOS\Source/timers.c ****             #endif /* configASSERT_DEFINED */
 322:..\FreeRTOS\Source/timers.c **** 
 323:..\FreeRTOS\Source/timers.c ****             /* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 324:..\FreeRTOS\Source/timers.c ****             configASSERT( pxTimerBuffer );
 260              		.loc 1 324 0 discriminator 2
 261 0022 0F4B     		ldr	r3, .L19
 262 0024 1B88     		ldrh	r3, [r3]
 263 0026 002B     		cmp	r3, #0
 264 0028 01D1     		bne	.L15
 265              		.loc 1 324 0 is_stmt 0 discriminator 1
 266              		.syntax divided
 267              	@ 324 "..\FreeRTOS\Source\timers.c" 1
 268 002a 72B6     		 cpsid i 
 269              	@ 0 "" 2
 270              		.thumb
 271              		.syntax unified
 272              	.L16:
 273              		.loc 1 324 0 discriminator 2
 274 002c FEE7     		b	.L16
 275              	.L15:
 325:..\FreeRTOS\Source/timers.c ****             pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointe
 276              		.loc 1 325 0 is_stmt 1
 277 002e FB6A     		ldr	r3, [r7, #44]
 278 0030 7B61     		str	r3, [r7, #20]
 326:..\FreeRTOS\Source/timers.c **** 
 327:..\FreeRTOS\Source/timers.c ****             if( pxNewTimer != NULL )
 279              		.loc 1 327 0
 280 0032 7B69     		ldr	r3, [r7, #20]
 281 0034 002B     		cmp	r3, #0
 282 0036 0ED0     		beq	.L17
 328:..\FreeRTOS\Source/timers.c ****             {
 329:..\FreeRTOS\Source/timers.c ****                 /* Timers can be created statically or dynamically so note this
 330:..\FreeRTOS\Source/timers.c ****                  * timer was created statically in case it is later deleted.  The
 331:..\FreeRTOS\Source/timers.c ****                  * auto-reload bit may get set in prvInitialiseNewTimer(). */
 332:..\FreeRTOS\Source/timers.c ****                 pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 283              		.loc 1 332 0
 284 0038 7B69     		ldr	r3, [r7, #20]
 285 003a 2422     		movs	r2, #36
 286 003c 0221     		movs	r1, #2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 12


 287 003e 9954     		strb	r1, [r3, r2]
 333:..\FreeRTOS\Source/timers.c **** 
 334:..\FreeRTOS\Source/timers.c ****                 prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, p
 288              		.loc 1 334 0
 289 0040 3C68     		ldr	r4, [r7]
 290 0042 7A68     		ldr	r2, [r7, #4]
 291 0044 B968     		ldr	r1, [r7, #8]
 292 0046 F868     		ldr	r0, [r7, #12]
 293 0048 7B69     		ldr	r3, [r7, #20]
 294 004a 0193     		str	r3, [sp, #4]
 295 004c BB6A     		ldr	r3, [r7, #40]
 296 004e 0093     		str	r3, [sp]
 297 0050 2300     		movs	r3, r4
 298 0052 FFF7FEFF 		bl	prvInitialiseNewTimer
 299              	.L17:
 335:..\FreeRTOS\Source/timers.c ****             }
 336:..\FreeRTOS\Source/timers.c **** 
 337:..\FreeRTOS\Source/timers.c ****             return pxNewTimer;
 300              		.loc 1 337 0
 301 0056 7B69     		ldr	r3, [r7, #20]
 338:..\FreeRTOS\Source/timers.c ****         }
 302              		.loc 1 338 0
 303 0058 1800     		movs	r0, r3
 304 005a BD46     		mov	sp, r7
 305 005c 07B0     		add	sp, sp, #28
 306              		@ sp needed
 307 005e 90BD     		pop	{r4, r7, pc}
 308              	.L20:
 309              		.align	2
 310              	.L19:
 311 0060 00000000 		.word	x
 312              		.cfi_endproc
 313              	.LFE2:
 314              		.size	xTimerCreateStatic, .-xTimerCreateStatic
 315              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 316              		.align	2
 317              		.code	16
 318              		.thumb_func
 319              		.type	prvInitialiseNewTimer, %function
 320              	prvInitialiseNewTimer:
 321              	.LFB3:
 339:..\FreeRTOS\Source/timers.c **** 
 340:..\FreeRTOS\Source/timers.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
 341:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 342:..\FreeRTOS\Source/timers.c **** 
 343:..\FreeRTOS\Source/timers.c ****     static void prvInitialiseNewTimer( const char * const pcTimerName, /*lint !e971 Unqualified cha
 344:..\FreeRTOS\Source/timers.c ****                                        const TickType_t xTimerPeriodInTicks,
 345:..\FreeRTOS\Source/timers.c ****                                        const UBaseType_t uxAutoReload,
 346:..\FreeRTOS\Source/timers.c ****                                        void * const pvTimerID,
 347:..\FreeRTOS\Source/timers.c ****                                        TimerCallbackFunction_t pxCallbackFunction,
 348:..\FreeRTOS\Source/timers.c ****                                        Timer_t * pxNewTimer )
 349:..\FreeRTOS\Source/timers.c ****     {
 322              		.loc 1 349 0
 323              		.cfi_startproc
 324              		@ args = 8, pretend = 0, frame = 16
 325              		@ frame_needed = 1, uses_anonymous_args = 0
 326 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 13


 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 84B0     		sub	sp, sp, #16
 331              		.cfi_def_cfa_offset 24
 332 0004 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 334 0006 F860     		str	r0, [r7, #12]
 335 0008 B960     		str	r1, [r7, #8]
 336 000a 7A60     		str	r2, [r7, #4]
 337 000c 3B60     		str	r3, [r7]
 350:..\FreeRTOS\Source/timers.c ****         /* 0 is not a valid value for xTimerPeriodInTicks. */
 351:..\FreeRTOS\Source/timers.c ****         configASSERT( ( xTimerPeriodInTicks > 0 ) );
 338              		.loc 1 351 0
 339 000e 164B     		ldr	r3, .L26
 340 0010 1B88     		ldrh	r3, [r3]
 341 0012 002B     		cmp	r3, #0
 342 0014 01D1     		bne	.L22
 343              		.loc 1 351 0 is_stmt 0 discriminator 1
 344              		.syntax divided
 345              	@ 351 "..\FreeRTOS\Source\timers.c" 1
 346 0016 72B6     		 cpsid i 
 347              	@ 0 "" 2
 348              		.thumb
 349              		.syntax unified
 350              	.L23:
 351 0018 FEE7     		b	.L23
 352              	.L22:
 352:..\FreeRTOS\Source/timers.c **** 
 353:..\FreeRTOS\Source/timers.c ****         if( pxNewTimer != NULL )
 353              		.loc 1 353 0 is_stmt 1
 354 001a FB69     		ldr	r3, [r7, #28]
 355 001c 002B     		cmp	r3, #0
 356 001e 1ED0     		beq	.L25
 354:..\FreeRTOS\Source/timers.c ****         {
 355:..\FreeRTOS\Source/timers.c ****             /* Ensure the infrastructure used by the timer service task has been
 356:..\FreeRTOS\Source/timers.c ****              * created/initialised. */
 357:..\FreeRTOS\Source/timers.c ****             prvCheckForValidListAndQueue();
 357              		.loc 1 357 0
 358 0020 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 358:..\FreeRTOS\Source/timers.c **** 
 359:..\FreeRTOS\Source/timers.c ****             /* Initialise the timer structure members using the function
 360:..\FreeRTOS\Source/timers.c ****              * parameters. */
 361:..\FreeRTOS\Source/timers.c ****             pxNewTimer->pcTimerName = pcTimerName;
 359              		.loc 1 361 0
 360 0024 FB69     		ldr	r3, [r7, #28]
 361 0026 FA68     		ldr	r2, [r7, #12]
 362 0028 1A60     		str	r2, [r3]
 362:..\FreeRTOS\Source/timers.c ****             pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 363              		.loc 1 362 0
 364 002a FB69     		ldr	r3, [r7, #28]
 365 002c BA68     		ldr	r2, [r7, #8]
 366 002e 9A61     		str	r2, [r3, #24]
 363:..\FreeRTOS\Source/timers.c ****             pxNewTimer->pvTimerID = pvTimerID;
 367              		.loc 1 363 0
 368 0030 FB69     		ldr	r3, [r7, #28]
 369 0032 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 14


 370 0034 DA61     		str	r2, [r3, #28]
 364:..\FreeRTOS\Source/timers.c ****             pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371              		.loc 1 364 0
 372 0036 FB69     		ldr	r3, [r7, #28]
 373 0038 BA69     		ldr	r2, [r7, #24]
 374 003a 1A62     		str	r2, [r3, #32]
 365:..\FreeRTOS\Source/timers.c ****             vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 375              		.loc 1 365 0
 376 003c FB69     		ldr	r3, [r7, #28]
 377 003e 0433     		adds	r3, r3, #4
 378 0040 1800     		movs	r0, r3
 379 0042 FFF7FEFF 		bl	vListInitialiseItem
 366:..\FreeRTOS\Source/timers.c **** 
 367:..\FreeRTOS\Source/timers.c ****             if( uxAutoReload != pdFALSE )
 380              		.loc 1 367 0
 381 0046 7B68     		ldr	r3, [r7, #4]
 382 0048 002B     		cmp	r3, #0
 383 004a 08D0     		beq	.L25
 368:..\FreeRTOS\Source/timers.c ****             {
 369:..\FreeRTOS\Source/timers.c ****                 pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 384              		.loc 1 369 0
 385 004c FB69     		ldr	r3, [r7, #28]
 386 004e 2422     		movs	r2, #36
 387 0050 9B5C     		ldrb	r3, [r3, r2]
 388 0052 0422     		movs	r2, #4
 389 0054 1343     		orrs	r3, r2
 390 0056 D9B2     		uxtb	r1, r3
 391 0058 FB69     		ldr	r3, [r7, #28]
 392 005a 2422     		movs	r2, #36
 393 005c 9954     		strb	r1, [r3, r2]
 394              	.L25:
 370:..\FreeRTOS\Source/timers.c ****             }
 371:..\FreeRTOS\Source/timers.c **** 
 372:..\FreeRTOS\Source/timers.c ****             traceTIMER_CREATE( pxNewTimer );
 373:..\FreeRTOS\Source/timers.c ****         }
 374:..\FreeRTOS\Source/timers.c ****     }
 395              		.loc 1 374 0
 396 005e C046     		nop
 397 0060 BD46     		mov	sp, r7
 398 0062 04B0     		add	sp, sp, #16
 399              		@ sp needed
 400 0064 80BD     		pop	{r7, pc}
 401              	.L27:
 402 0066 C046     		.align	2
 403              	.L26:
 404 0068 00000000 		.word	x
 405              		.cfi_endproc
 406              	.LFE3:
 407              		.size	prvInitialiseNewTimer, .-prvInitialiseNewTimer
 408              		.section	.text.xTimerGenericCommand,"ax",%progbits
 409              		.align	2
 410              		.global	xTimerGenericCommand
 411              		.code	16
 412              		.thumb_func
 413              		.type	xTimerGenericCommand, %function
 414              	xTimerGenericCommand:
 415              	.LFB4:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 15


 375:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 376:..\FreeRTOS\Source/timers.c **** 
 377:..\FreeRTOS\Source/timers.c ****     BaseType_t xTimerGenericCommand( TimerHandle_t xTimer,
 378:..\FreeRTOS\Source/timers.c ****                                      const BaseType_t xCommandID,
 379:..\FreeRTOS\Source/timers.c ****                                      const TickType_t xOptionalValue,
 380:..\FreeRTOS\Source/timers.c ****                                      BaseType_t * const pxHigherPriorityTaskWoken,
 381:..\FreeRTOS\Source/timers.c ****                                      const TickType_t xTicksToWait )
 382:..\FreeRTOS\Source/timers.c ****     {
 416              		.loc 1 382 0
 417              		.cfi_startproc
 418              		@ args = 4, pretend = 0, frame = 32
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 88B0     		sub	sp, sp, #32
 425              		.cfi_def_cfa_offset 40
 426 0004 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 428 0006 F860     		str	r0, [r7, #12]
 429 0008 B960     		str	r1, [r7, #8]
 430 000a 7A60     		str	r2, [r7, #4]
 431 000c 3B60     		str	r3, [r7]
 383:..\FreeRTOS\Source/timers.c ****         BaseType_t xReturn = pdFAIL;
 432              		.loc 1 383 0
 433 000e 0023     		movs	r3, #0
 434 0010 FB61     		str	r3, [r7, #28]
 384:..\FreeRTOS\Source/timers.c ****         DaemonTaskMessage_t xMessage;
 385:..\FreeRTOS\Source/timers.c **** 
 386:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 435              		.loc 1 386 0
 436 0012 214B     		ldr	r3, .L37
 437 0014 1B88     		ldrh	r3, [r3]
 438 0016 002B     		cmp	r3, #0
 439 0018 01D1     		bne	.L29
 440              		.loc 1 386 0 is_stmt 0 discriminator 1
 441              		.syntax divided
 442              	@ 386 "..\FreeRTOS\Source\timers.c" 1
 443 001a 72B6     		 cpsid i 
 444              	@ 0 "" 2
 445              		.thumb
 446              		.syntax unified
 447              	.L30:
 448 001c FEE7     		b	.L30
 449              	.L29:
 387:..\FreeRTOS\Source/timers.c **** 
 388:..\FreeRTOS\Source/timers.c ****         /* Send a message to the timer service task to perform a particular action
 389:..\FreeRTOS\Source/timers.c ****          * on a particular timer definition. */
 390:..\FreeRTOS\Source/timers.c ****         if( xTimerQueue != NULL )
 450              		.loc 1 390 0 is_stmt 1
 451 001e 1F4B     		ldr	r3, .L37+4
 452 0020 1B68     		ldr	r3, [r3]
 453 0022 002B     		cmp	r3, #0
 454 0024 33D0     		beq	.L31
 391:..\FreeRTOS\Source/timers.c ****         {
 392:..\FreeRTOS\Source/timers.c ****             /* Send a command to the timer service task to start the xTimer timer. */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 16


 393:..\FreeRTOS\Source/timers.c ****             xMessage.xMessageID = xCommandID;
 455              		.loc 1 393 0
 456 0026 1023     		movs	r3, #16
 457 0028 FB18     		adds	r3, r7, r3
 458 002a BA68     		ldr	r2, [r7, #8]
 459 002c 1A60     		str	r2, [r3]
 394:..\FreeRTOS\Source/timers.c ****             xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 460              		.loc 1 394 0
 461 002e 1023     		movs	r3, #16
 462 0030 FB18     		adds	r3, r7, r3
 463 0032 7A68     		ldr	r2, [r7, #4]
 464 0034 5A60     		str	r2, [r3, #4]
 395:..\FreeRTOS\Source/timers.c ****             xMessage.u.xTimerParameters.pxTimer = xTimer;
 465              		.loc 1 395 0
 466 0036 1023     		movs	r3, #16
 467 0038 FB18     		adds	r3, r7, r3
 468 003a FA68     		ldr	r2, [r7, #12]
 469 003c 9A60     		str	r2, [r3, #8]
 396:..\FreeRTOS\Source/timers.c **** 
 397:..\FreeRTOS\Source/timers.c ****             if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 470              		.loc 1 397 0
 471 003e BB68     		ldr	r3, [r7, #8]
 472 0040 052B     		cmp	r3, #5
 473 0042 1ADC     		bgt	.L32
 398:..\FreeRTOS\Source/timers.c ****             {
 399:..\FreeRTOS\Source/timers.c ****                 if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 474              		.loc 1 399 0
 475 0044 FFF7FEFF 		bl	xTaskGetSchedulerState
 476 0048 0300     		movs	r3, r0
 477 004a 022B     		cmp	r3, #2
 478 004c 0AD1     		bne	.L33
 400:..\FreeRTOS\Source/timers.c ****                 {
 401:..\FreeRTOS\Source/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 479              		.loc 1 401 0
 480 004e 134B     		ldr	r3, .L37+4
 481 0050 1868     		ldr	r0, [r3]
 482 0052 BA6A     		ldr	r2, [r7, #40]
 483 0054 1023     		movs	r3, #16
 484 0056 F918     		adds	r1, r7, r3
 485 0058 0023     		movs	r3, #0
 486 005a FFF7FEFF 		bl	xQueueGenericSend
 487 005e 0300     		movs	r3, r0
 488 0060 FB61     		str	r3, [r7, #28]
 489 0062 14E0     		b	.L31
 490              	.L33:
 402:..\FreeRTOS\Source/timers.c ****                 }
 403:..\FreeRTOS\Source/timers.c ****                 else
 404:..\FreeRTOS\Source/timers.c ****                 {
 405:..\FreeRTOS\Source/timers.c ****                     xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 491              		.loc 1 405 0
 492 0064 0D4B     		ldr	r3, .L37+4
 493 0066 1868     		ldr	r0, [r3]
 494 0068 1023     		movs	r3, #16
 495 006a F918     		adds	r1, r7, r3
 496 006c 0023     		movs	r3, #0
 497 006e 0022     		movs	r2, #0
 498 0070 FFF7FEFF 		bl	xQueueGenericSend
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 17


 499 0074 0300     		movs	r3, r0
 500 0076 FB61     		str	r3, [r7, #28]
 501 0078 09E0     		b	.L31
 502              	.L32:
 406:..\FreeRTOS\Source/timers.c ****                 }
 407:..\FreeRTOS\Source/timers.c ****             }
 408:..\FreeRTOS\Source/timers.c ****             else
 409:..\FreeRTOS\Source/timers.c ****             {
 410:..\FreeRTOS\Source/timers.c ****                 xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoke
 503              		.loc 1 410 0
 504 007a 084B     		ldr	r3, .L37+4
 505 007c 1868     		ldr	r0, [r3]
 506 007e 3A68     		ldr	r2, [r7]
 507 0080 1023     		movs	r3, #16
 508 0082 F918     		adds	r1, r7, r3
 509 0084 0023     		movs	r3, #0
 510 0086 FFF7FEFF 		bl	xQueueGenericSendFromISR
 511 008a 0300     		movs	r3, r0
 512 008c FB61     		str	r3, [r7, #28]
 513              	.L31:
 411:..\FreeRTOS\Source/timers.c ****             }
 412:..\FreeRTOS\Source/timers.c **** 
 413:..\FreeRTOS\Source/timers.c ****             traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:..\FreeRTOS\Source/timers.c ****         }
 415:..\FreeRTOS\Source/timers.c ****         else
 416:..\FreeRTOS\Source/timers.c ****         {
 417:..\FreeRTOS\Source/timers.c ****             mtCOVERAGE_TEST_MARKER();
 418:..\FreeRTOS\Source/timers.c ****         }
 419:..\FreeRTOS\Source/timers.c **** 
 420:..\FreeRTOS\Source/timers.c ****         return xReturn;
 514              		.loc 1 420 0
 515 008e FB69     		ldr	r3, [r7, #28]
 421:..\FreeRTOS\Source/timers.c ****     }
 516              		.loc 1 421 0
 517 0090 1800     		movs	r0, r3
 518 0092 BD46     		mov	sp, r7
 519 0094 08B0     		add	sp, sp, #32
 520              		@ sp needed
 521 0096 80BD     		pop	{r7, pc}
 522              	.L38:
 523              		.align	2
 524              	.L37:
 525 0098 00000000 		.word	x
 526 009c 30000000 		.word	xTimerQueue
 527              		.cfi_endproc
 528              	.LFE4:
 529              		.size	xTimerGenericCommand, .-xTimerGenericCommand
 530              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 531              		.align	2
 532              		.global	xTimerGetTimerDaemonTaskHandle
 533              		.code	16
 534              		.thumb_func
 535              		.type	xTimerGetTimerDaemonTaskHandle, %function
 536              	xTimerGetTimerDaemonTaskHandle:
 537              	.LFB5:
 422:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 423:..\FreeRTOS\Source/timers.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 18


 424:..\FreeRTOS\Source/timers.c ****     TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:..\FreeRTOS\Source/timers.c ****     {
 538              		.loc 1 425 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542 0000 80B5     		push	{r7, lr}
 543              		.cfi_def_cfa_offset 8
 544              		.cfi_offset 7, -8
 545              		.cfi_offset 14, -4
 546 0002 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 426:..\FreeRTOS\Source/timers.c ****         /* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:..\FreeRTOS\Source/timers.c ****          * started, then xTimerTaskHandle will be NULL. */
 428:..\FreeRTOS\Source/timers.c ****         configASSERT( ( xTimerTaskHandle != NULL ) );
 548              		.loc 1 428 0
 549 0004 054B     		ldr	r3, .L43
 550 0006 1B88     		ldrh	r3, [r3]
 551 0008 002B     		cmp	r3, #0
 552 000a 01D1     		bne	.L40
 553              		.loc 1 428 0 is_stmt 0 discriminator 1
 554              		.syntax divided
 555              	@ 428 "..\FreeRTOS\Source\timers.c" 1
 556 000c 72B6     		 cpsid i 
 557              	@ 0 "" 2
 558              		.thumb
 559              		.syntax unified
 560              	.L41:
 561 000e FEE7     		b	.L41
 562              	.L40:
 429:..\FreeRTOS\Source/timers.c ****         return xTimerTaskHandle;
 563              		.loc 1 429 0 is_stmt 1 discriminator 2
 564 0010 034B     		ldr	r3, .L43+4
 565 0012 1B68     		ldr	r3, [r3]
 430:..\FreeRTOS\Source/timers.c ****     }
 566              		.loc 1 430 0 discriminator 2
 567 0014 1800     		movs	r0, r3
 568 0016 BD46     		mov	sp, r7
 569              		@ sp needed
 570 0018 80BD     		pop	{r7, pc}
 571              	.L44:
 572 001a C046     		.align	2
 573              	.L43:
 574 001c 00000000 		.word	x
 575 0020 34000000 		.word	xTimerTaskHandle
 576              		.cfi_endproc
 577              	.LFE5:
 578              		.size	xTimerGetTimerDaemonTaskHandle, .-xTimerGetTimerDaemonTaskHandle
 579              		.section	.text.xTimerGetPeriod,"ax",%progbits
 580              		.align	2
 581              		.global	xTimerGetPeriod
 582              		.code	16
 583              		.thumb_func
 584              		.type	xTimerGetPeriod, %function
 585              	xTimerGetPeriod:
 586              	.LFB6:
 431:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 19


 432:..\FreeRTOS\Source/timers.c **** 
 433:..\FreeRTOS\Source/timers.c ****     TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:..\FreeRTOS\Source/timers.c ****     {
 587              		.loc 1 434 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 16
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591 0000 80B5     		push	{r7, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 84B0     		sub	sp, sp, #16
 596              		.cfi_def_cfa_offset 24
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 7860     		str	r0, [r7, #4]
 435:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer = xTimer;
 600              		.loc 1 435 0
 601 0008 7B68     		ldr	r3, [r7, #4]
 602 000a FB60     		str	r3, [r7, #12]
 436:..\FreeRTOS\Source/timers.c **** 
 437:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 603              		.loc 1 437 0
 604 000c 054B     		ldr	r3, .L49
 605 000e 1B88     		ldrh	r3, [r3]
 606 0010 002B     		cmp	r3, #0
 607 0012 01D1     		bne	.L46
 608              		.loc 1 437 0 is_stmt 0 discriminator 1
 609              		.syntax divided
 610              	@ 437 "..\FreeRTOS\Source\timers.c" 1
 611 0014 72B6     		 cpsid i 
 612              	@ 0 "" 2
 613              		.thumb
 614              		.syntax unified
 615              	.L47:
 616 0016 FEE7     		b	.L47
 617              	.L46:
 438:..\FreeRTOS\Source/timers.c ****         return pxTimer->xTimerPeriodInTicks;
 618              		.loc 1 438 0 is_stmt 1
 619 0018 FB68     		ldr	r3, [r7, #12]
 620 001a 9B69     		ldr	r3, [r3, #24]
 439:..\FreeRTOS\Source/timers.c ****     }
 621              		.loc 1 439 0
 622 001c 1800     		movs	r0, r3
 623 001e BD46     		mov	sp, r7
 624 0020 04B0     		add	sp, sp, #16
 625              		@ sp needed
 626 0022 80BD     		pop	{r7, pc}
 627              	.L50:
 628              		.align	2
 629              	.L49:
 630 0024 00000000 		.word	x
 631              		.cfi_endproc
 632              	.LFE6:
 633              		.size	xTimerGetPeriod, .-xTimerGetPeriod
 634              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 635              		.align	2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 20


 636              		.global	vTimerSetReloadMode
 637              		.code	16
 638              		.thumb_func
 639              		.type	vTimerSetReloadMode, %function
 640              	vTimerSetReloadMode:
 641              	.LFB7:
 440:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 441:..\FreeRTOS\Source/timers.c **** 
 442:..\FreeRTOS\Source/timers.c ****     void vTimerSetReloadMode( TimerHandle_t xTimer,
 443:..\FreeRTOS\Source/timers.c ****                               const UBaseType_t uxAutoReload )
 444:..\FreeRTOS\Source/timers.c ****     {
 642              		.loc 1 444 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 16
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646 0000 80B5     		push	{r7, lr}
 647              		.cfi_def_cfa_offset 8
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 84B0     		sub	sp, sp, #16
 651              		.cfi_def_cfa_offset 24
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 654 0006 7860     		str	r0, [r7, #4]
 655 0008 3960     		str	r1, [r7]
 445:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer = xTimer;
 656              		.loc 1 445 0
 657 000a 7B68     		ldr	r3, [r7, #4]
 658 000c FB60     		str	r3, [r7, #12]
 446:..\FreeRTOS\Source/timers.c **** 
 447:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 659              		.loc 1 447 0
 660 000e 124B     		ldr	r3, .L56
 661 0010 1B88     		ldrh	r3, [r3]
 662 0012 002B     		cmp	r3, #0
 663 0014 01D1     		bne	.L52
 664              		.loc 1 447 0 is_stmt 0 discriminator 1
 665              		.syntax divided
 666              	@ 447 "..\FreeRTOS\Source\timers.c" 1
 667 0016 72B6     		 cpsid i 
 668              	@ 0 "" 2
 669              		.thumb
 670              		.syntax unified
 671              	.L53:
 672 0018 FEE7     		b	.L53
 673              	.L52:
 448:..\FreeRTOS\Source/timers.c ****         taskENTER_CRITICAL();
 674              		.loc 1 448 0 is_stmt 1
 675 001a FFF7FEFF 		bl	vPortEnterCritical
 449:..\FreeRTOS\Source/timers.c ****         {
 450:..\FreeRTOS\Source/timers.c ****             if( uxAutoReload != pdFALSE )
 676              		.loc 1 450 0
 677 001e 3B68     		ldr	r3, [r7]
 678 0020 002B     		cmp	r3, #0
 679 0022 09D0     		beq	.L54
 451:..\FreeRTOS\Source/timers.c ****             {
 452:..\FreeRTOS\Source/timers.c ****                 pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 21


 680              		.loc 1 452 0
 681 0024 FB68     		ldr	r3, [r7, #12]
 682 0026 2422     		movs	r2, #36
 683 0028 9B5C     		ldrb	r3, [r3, r2]
 684 002a 0422     		movs	r2, #4
 685 002c 1343     		orrs	r3, r2
 686 002e D9B2     		uxtb	r1, r3
 687 0030 FB68     		ldr	r3, [r7, #12]
 688 0032 2422     		movs	r2, #36
 689 0034 9954     		strb	r1, [r3, r2]
 690 0036 08E0     		b	.L55
 691              	.L54:
 453:..\FreeRTOS\Source/timers.c ****             }
 454:..\FreeRTOS\Source/timers.c ****             else
 455:..\FreeRTOS\Source/timers.c ****             {
 456:..\FreeRTOS\Source/timers.c ****                 pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 692              		.loc 1 456 0
 693 0038 FB68     		ldr	r3, [r7, #12]
 694 003a 2422     		movs	r2, #36
 695 003c 9B5C     		ldrb	r3, [r3, r2]
 696 003e 0422     		movs	r2, #4
 697 0040 9343     		bics	r3, r2
 698 0042 D9B2     		uxtb	r1, r3
 699 0044 FB68     		ldr	r3, [r7, #12]
 700 0046 2422     		movs	r2, #36
 701 0048 9954     		strb	r1, [r3, r2]
 702              	.L55:
 457:..\FreeRTOS\Source/timers.c ****             }
 458:..\FreeRTOS\Source/timers.c ****         }
 459:..\FreeRTOS\Source/timers.c ****         taskEXIT_CRITICAL();
 703              		.loc 1 459 0
 704 004a FFF7FEFF 		bl	vPortExitCritical
 460:..\FreeRTOS\Source/timers.c ****     }
 705              		.loc 1 460 0
 706 004e C046     		nop
 707 0050 BD46     		mov	sp, r7
 708 0052 04B0     		add	sp, sp, #16
 709              		@ sp needed
 710 0054 80BD     		pop	{r7, pc}
 711              	.L57:
 712 0056 C046     		.align	2
 713              	.L56:
 714 0058 00000000 		.word	x
 715              		.cfi_endproc
 716              	.LFE7:
 717              		.size	vTimerSetReloadMode, .-vTimerSetReloadMode
 718              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 719              		.align	2
 720              		.global	uxTimerGetReloadMode
 721              		.code	16
 722              		.thumb_func
 723              		.type	uxTimerGetReloadMode, %function
 724              	uxTimerGetReloadMode:
 725              	.LFB8:
 461:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 462:..\FreeRTOS\Source/timers.c **** 
 463:..\FreeRTOS\Source/timers.c ****     UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 22


 464:..\FreeRTOS\Source/timers.c ****     {
 726              		.loc 1 464 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 16
 729              		@ frame_needed = 1, uses_anonymous_args = 0
 730 0000 80B5     		push	{r7, lr}
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_offset 7, -8
 733              		.cfi_offset 14, -4
 734 0002 84B0     		sub	sp, sp, #16
 735              		.cfi_def_cfa_offset 24
 736 0004 00AF     		add	r7, sp, #0
 737              		.cfi_def_cfa_register 7
 738 0006 7860     		str	r0, [r7, #4]
 465:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer = xTimer;
 739              		.loc 1 465 0
 740 0008 7B68     		ldr	r3, [r7, #4]
 741 000a BB60     		str	r3, [r7, #8]
 466:..\FreeRTOS\Source/timers.c ****         UBaseType_t uxReturn;
 467:..\FreeRTOS\Source/timers.c **** 
 468:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 742              		.loc 1 468 0
 743 000c 0D4B     		ldr	r3, .L64
 744 000e 1B88     		ldrh	r3, [r3]
 745 0010 002B     		cmp	r3, #0
 746 0012 01D1     		bne	.L59
 747              		.loc 1 468 0 is_stmt 0 discriminator 1
 748              		.syntax divided
 749              	@ 468 "..\FreeRTOS\Source\timers.c" 1
 750 0014 72B6     		 cpsid i 
 751              	@ 0 "" 2
 752              		.thumb
 753              		.syntax unified
 754              	.L60:
 755 0016 FEE7     		b	.L60
 756              	.L59:
 469:..\FreeRTOS\Source/timers.c ****         taskENTER_CRITICAL();
 757              		.loc 1 469 0 is_stmt 1
 758 0018 FFF7FEFF 		bl	vPortEnterCritical
 470:..\FreeRTOS\Source/timers.c ****         {
 471:..\FreeRTOS\Source/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 759              		.loc 1 471 0
 760 001c BB68     		ldr	r3, [r7, #8]
 761 001e 2422     		movs	r2, #36
 762 0020 9B5C     		ldrb	r3, [r3, r2]
 763 0022 1A00     		movs	r2, r3
 764 0024 0423     		movs	r3, #4
 765 0026 1340     		ands	r3, r2
 766 0028 02D1     		bne	.L61
 472:..\FreeRTOS\Source/timers.c ****             {
 473:..\FreeRTOS\Source/timers.c ****                 /* Not an auto-reload timer. */
 474:..\FreeRTOS\Source/timers.c ****                 uxReturn = ( UBaseType_t ) pdFALSE;
 767              		.loc 1 474 0
 768 002a 0023     		movs	r3, #0
 769 002c FB60     		str	r3, [r7, #12]
 770 002e 01E0     		b	.L62
 771              	.L61:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 23


 475:..\FreeRTOS\Source/timers.c ****             }
 476:..\FreeRTOS\Source/timers.c ****             else
 477:..\FreeRTOS\Source/timers.c ****             {
 478:..\FreeRTOS\Source/timers.c ****                 /* Is an auto-reload timer. */
 479:..\FreeRTOS\Source/timers.c ****                 uxReturn = ( UBaseType_t ) pdTRUE;
 772              		.loc 1 479 0
 773 0030 0123     		movs	r3, #1
 774 0032 FB60     		str	r3, [r7, #12]
 775              	.L62:
 480:..\FreeRTOS\Source/timers.c ****             }
 481:..\FreeRTOS\Source/timers.c ****         }
 482:..\FreeRTOS\Source/timers.c ****         taskEXIT_CRITICAL();
 776              		.loc 1 482 0
 777 0034 FFF7FEFF 		bl	vPortExitCritical
 483:..\FreeRTOS\Source/timers.c **** 
 484:..\FreeRTOS\Source/timers.c ****         return uxReturn;
 778              		.loc 1 484 0
 779 0038 FB68     		ldr	r3, [r7, #12]
 485:..\FreeRTOS\Source/timers.c ****     }
 780              		.loc 1 485 0
 781 003a 1800     		movs	r0, r3
 782 003c BD46     		mov	sp, r7
 783 003e 04B0     		add	sp, sp, #16
 784              		@ sp needed
 785 0040 80BD     		pop	{r7, pc}
 786              	.L65:
 787 0042 C046     		.align	2
 788              	.L64:
 789 0044 00000000 		.word	x
 790              		.cfi_endproc
 791              	.LFE8:
 792              		.size	uxTimerGetReloadMode, .-uxTimerGetReloadMode
 793              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 794              		.align	2
 795              		.global	xTimerGetExpiryTime
 796              		.code	16
 797              		.thumb_func
 798              		.type	xTimerGetExpiryTime, %function
 799              	xTimerGetExpiryTime:
 800              	.LFB9:
 486:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 487:..\FreeRTOS\Source/timers.c **** 
 488:..\FreeRTOS\Source/timers.c ****     TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 489:..\FreeRTOS\Source/timers.c ****     {
 801              		.loc 1 489 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 16
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 84B0     		sub	sp, sp, #16
 810              		.cfi_def_cfa_offset 24
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 24


 490:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer = xTimer;
 814              		.loc 1 490 0
 815 0008 7B68     		ldr	r3, [r7, #4]
 816 000a FB60     		str	r3, [r7, #12]
 491:..\FreeRTOS\Source/timers.c ****         TickType_t xReturn;
 492:..\FreeRTOS\Source/timers.c **** 
 493:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 817              		.loc 1 493 0
 818 000c 064B     		ldr	r3, .L70
 819 000e 1B88     		ldrh	r3, [r3]
 820 0010 002B     		cmp	r3, #0
 821 0012 01D1     		bne	.L67
 822              		.loc 1 493 0 is_stmt 0 discriminator 1
 823              		.syntax divided
 824              	@ 493 "..\FreeRTOS\Source\timers.c" 1
 825 0014 72B6     		 cpsid i 
 826              	@ 0 "" 2
 827              		.thumb
 828              		.syntax unified
 829              	.L68:
 830 0016 FEE7     		b	.L68
 831              	.L67:
 494:..\FreeRTOS\Source/timers.c ****         xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 832              		.loc 1 494 0 is_stmt 1
 833 0018 FB68     		ldr	r3, [r7, #12]
 834 001a 5B68     		ldr	r3, [r3, #4]
 835 001c BB60     		str	r3, [r7, #8]
 495:..\FreeRTOS\Source/timers.c ****         return xReturn;
 836              		.loc 1 495 0
 837 001e BB68     		ldr	r3, [r7, #8]
 496:..\FreeRTOS\Source/timers.c ****     }
 838              		.loc 1 496 0
 839 0020 1800     		movs	r0, r3
 840 0022 BD46     		mov	sp, r7
 841 0024 04B0     		add	sp, sp, #16
 842              		@ sp needed
 843 0026 80BD     		pop	{r7, pc}
 844              	.L71:
 845              		.align	2
 846              	.L70:
 847 0028 00000000 		.word	x
 848              		.cfi_endproc
 849              	.LFE9:
 850              		.size	xTimerGetExpiryTime, .-xTimerGetExpiryTime
 851              		.section	.text.pcTimerGetName,"ax",%progbits
 852              		.align	2
 853              		.global	pcTimerGetName
 854              		.code	16
 855              		.thumb_func
 856              		.type	pcTimerGetName, %function
 857              	pcTimerGetName:
 858              	.LFB10:
 497:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 498:..\FreeRTOS\Source/timers.c **** 
 499:..\FreeRTOS\Source/timers.c ****     const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are all
 500:..\FreeRTOS\Source/timers.c ****     {
 859              		.loc 1 500 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 25


 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 16
 862              		@ frame_needed = 1, uses_anonymous_args = 0
 863 0000 80B5     		push	{r7, lr}
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
 866              		.cfi_offset 14, -4
 867 0002 84B0     		sub	sp, sp, #16
 868              		.cfi_def_cfa_offset 24
 869 0004 00AF     		add	r7, sp, #0
 870              		.cfi_def_cfa_register 7
 871 0006 7860     		str	r0, [r7, #4]
 501:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer = xTimer;
 872              		.loc 1 501 0
 873 0008 7B68     		ldr	r3, [r7, #4]
 874 000a FB60     		str	r3, [r7, #12]
 502:..\FreeRTOS\Source/timers.c **** 
 503:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 875              		.loc 1 503 0
 876 000c 054B     		ldr	r3, .L76
 877 000e 1B88     		ldrh	r3, [r3]
 878 0010 002B     		cmp	r3, #0
 879 0012 01D1     		bne	.L73
 880              		.loc 1 503 0 is_stmt 0 discriminator 1
 881              		.syntax divided
 882              	@ 503 "..\FreeRTOS\Source\timers.c" 1
 883 0014 72B6     		 cpsid i 
 884              	@ 0 "" 2
 885              		.thumb
 886              		.syntax unified
 887              	.L74:
 888 0016 FEE7     		b	.L74
 889              	.L73:
 504:..\FreeRTOS\Source/timers.c ****         return pxTimer->pcTimerName;
 890              		.loc 1 504 0 is_stmt 1
 891 0018 FB68     		ldr	r3, [r7, #12]
 892 001a 1B68     		ldr	r3, [r3]
 505:..\FreeRTOS\Source/timers.c ****     }
 893              		.loc 1 505 0
 894 001c 1800     		movs	r0, r3
 895 001e BD46     		mov	sp, r7
 896 0020 04B0     		add	sp, sp, #16
 897              		@ sp needed
 898 0022 80BD     		pop	{r7, pc}
 899              	.L77:
 900              		.align	2
 901              	.L76:
 902 0024 00000000 		.word	x
 903              		.cfi_endproc
 904              	.LFE10:
 905              		.size	pcTimerGetName, .-pcTimerGetName
 906              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 907              		.align	2
 908              		.code	16
 909              		.thumb_func
 910              		.type	prvProcessExpiredTimer, %function
 911              	prvProcessExpiredTimer:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 26


 912              	.LFB11:
 506:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 507:..\FreeRTOS\Source/timers.c **** 
 508:..\FreeRTOS\Source/timers.c ****     static void prvProcessExpiredTimer( const TickType_t xNextExpireTime,
 509:..\FreeRTOS\Source/timers.c ****                                         const TickType_t xTimeNow )
 510:..\FreeRTOS\Source/timers.c ****     {
 913              		.loc 1 510 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 16
 916              		@ frame_needed = 1, uses_anonymous_args = 0
 917 0000 80B5     		push	{r7, lr}
 918              		.cfi_def_cfa_offset 8
 919              		.cfi_offset 7, -8
 920              		.cfi_offset 14, -4
 921 0002 86B0     		sub	sp, sp, #24
 922              		.cfi_def_cfa_offset 32
 923 0004 02AF     		add	r7, sp, #8
 924              		.cfi_def_cfa 7, 24
 925 0006 7860     		str	r0, [r7, #4]
 926 0008 3960     		str	r1, [r7]
 511:..\FreeRTOS\Source/timers.c ****         BaseType_t xResult;
 512:..\FreeRTOS\Source/timers.c ****         Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); 
 927              		.loc 1 512 0
 928 000a 1F4B     		ldr	r3, .L82
 929 000c 1B68     		ldr	r3, [r3]
 930 000e DB68     		ldr	r3, [r3, #12]
 931 0010 DB68     		ldr	r3, [r3, #12]
 932 0012 FB60     		str	r3, [r7, #12]
 513:..\FreeRTOS\Source/timers.c **** 
 514:..\FreeRTOS\Source/timers.c ****         /* Remove the timer from the list of active timers.  A check has already
 515:..\FreeRTOS\Source/timers.c ****          * been performed to ensure the list is not empty. */
 516:..\FreeRTOS\Source/timers.c **** 
 517:..\FreeRTOS\Source/timers.c ****         ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 933              		.loc 1 517 0
 934 0014 FB68     		ldr	r3, [r7, #12]
 935 0016 0433     		adds	r3, r3, #4
 936 0018 1800     		movs	r0, r3
 937 001a FFF7FEFF 		bl	uxListRemove
 518:..\FreeRTOS\Source/timers.c ****         traceTIMER_EXPIRED( pxTimer );
 519:..\FreeRTOS\Source/timers.c **** 
 520:..\FreeRTOS\Source/timers.c ****         /* If the timer is an auto-reload timer then calculate the next
 521:..\FreeRTOS\Source/timers.c ****          * expiry time and re-insert the timer in the list of active timers. */
 522:..\FreeRTOS\Source/timers.c ****         if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 938              		.loc 1 522 0
 939 001e FB68     		ldr	r3, [r7, #12]
 940 0020 2422     		movs	r2, #36
 941 0022 9B5C     		ldrb	r3, [r3, r2]
 942 0024 1A00     		movs	r2, r3
 943 0026 0423     		movs	r3, #4
 944 0028 1340     		ands	r3, r2
 945 002a 1AD0     		beq	.L79
 523:..\FreeRTOS\Source/timers.c ****         {
 524:..\FreeRTOS\Source/timers.c ****             /* The timer is inserted into a list using a time relative to anything
 525:..\FreeRTOS\Source/timers.c ****              * other than the current time.  It will therefore be inserted into the
 526:..\FreeRTOS\Source/timers.c ****              * correct list relative to the time this task thinks it is now. */
 527:..\FreeRTOS\Source/timers.c ****             if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTic
 946              		.loc 1 527 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 27


 947 002c FB68     		ldr	r3, [r7, #12]
 948 002e 9A69     		ldr	r2, [r3, #24]
 949 0030 7B68     		ldr	r3, [r7, #4]
 950 0032 D118     		adds	r1, r2, r3
 951 0034 7B68     		ldr	r3, [r7, #4]
 952 0036 3A68     		ldr	r2, [r7]
 953 0038 F868     		ldr	r0, [r7, #12]
 954 003a FFF7FEFF 		bl	prvInsertTimerInActiveList
 955 003e 031E     		subs	r3, r0, #0
 956 0040 18D0     		beq	.L80
 528:..\FreeRTOS\Source/timers.c ****             {
 529:..\FreeRTOS\Source/timers.c ****                 /* The timer expired before it was added to the active timer
 530:..\FreeRTOS\Source/timers.c ****                  * list.  Reload it now.  */
 531:..\FreeRTOS\Source/timers.c ****                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTi
 957              		.loc 1 531 0
 958 0042 7A68     		ldr	r2, [r7, #4]
 959 0044 F868     		ldr	r0, [r7, #12]
 960 0046 0023     		movs	r3, #0
 961 0048 0093     		str	r3, [sp]
 962 004a 0023     		movs	r3, #0
 963 004c 0021     		movs	r1, #0
 964 004e FFF7FEFF 		bl	xTimerGenericCommand
 965 0052 0300     		movs	r3, r0
 966 0054 BB60     		str	r3, [r7, #8]
 532:..\FreeRTOS\Source/timers.c ****                 configASSERT( xResult );
 967              		.loc 1 532 0
 968 0056 0D4B     		ldr	r3, .L82+4
 969 0058 1B88     		ldrh	r3, [r3]
 970 005a 002B     		cmp	r3, #0
 971 005c 0AD1     		bne	.L80
 972              		.loc 1 532 0 is_stmt 0 discriminator 1
 973              		.syntax divided
 974              	@ 532 "..\FreeRTOS\Source\timers.c" 1
 975 005e 72B6     		 cpsid i 
 976              	@ 0 "" 2
 977              		.thumb
 978              		.syntax unified
 979              	.L81:
 980 0060 FEE7     		b	.L81
 981              	.L79:
 533:..\FreeRTOS\Source/timers.c ****                 ( void ) xResult;
 534:..\FreeRTOS\Source/timers.c ****             }
 535:..\FreeRTOS\Source/timers.c ****             else
 536:..\FreeRTOS\Source/timers.c ****             {
 537:..\FreeRTOS\Source/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 538:..\FreeRTOS\Source/timers.c ****             }
 539:..\FreeRTOS\Source/timers.c ****         }
 540:..\FreeRTOS\Source/timers.c ****         else
 541:..\FreeRTOS\Source/timers.c ****         {
 542:..\FreeRTOS\Source/timers.c ****             pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 982              		.loc 1 542 0 is_stmt 1
 983 0062 FB68     		ldr	r3, [r7, #12]
 984 0064 2422     		movs	r2, #36
 985 0066 9B5C     		ldrb	r3, [r3, r2]
 986 0068 0122     		movs	r2, #1
 987 006a 9343     		bics	r3, r2
 988 006c D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 28


 989 006e FB68     		ldr	r3, [r7, #12]
 990 0070 2422     		movs	r2, #36
 991 0072 9954     		strb	r1, [r3, r2]
 992              	.L80:
 543:..\FreeRTOS\Source/timers.c ****             mtCOVERAGE_TEST_MARKER();
 544:..\FreeRTOS\Source/timers.c ****         }
 545:..\FreeRTOS\Source/timers.c **** 
 546:..\FreeRTOS\Source/timers.c ****         /* Call the timer callback. */
 547:..\FreeRTOS\Source/timers.c ****         pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 993              		.loc 1 547 0
 994 0074 FB68     		ldr	r3, [r7, #12]
 995 0076 1B6A     		ldr	r3, [r3, #32]
 996 0078 FA68     		ldr	r2, [r7, #12]
 997 007a 1000     		movs	r0, r2
 998 007c 9847     		blx	r3
 548:..\FreeRTOS\Source/timers.c ****     }
 999              		.loc 1 548 0
 1000 007e C046     		nop
 1001 0080 BD46     		mov	sp, r7
 1002 0082 04B0     		add	sp, sp, #16
 1003              		@ sp needed
 1004 0084 80BD     		pop	{r7, pc}
 1005              	.L83:
 1006 0086 C046     		.align	2
 1007              	.L82:
 1008 0088 28000000 		.word	pxCurrentTimerList
 1009 008c 00000000 		.word	x
 1010              		.cfi_endproc
 1011              	.LFE11:
 1012              		.size	prvProcessExpiredTimer, .-prvProcessExpiredTimer
 1013              		.section	.text.prvTimerTask,"ax",%progbits
 1014              		.align	2
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	prvTimerTask, %function
 1018              	prvTimerTask:
 1019              	.LFB12:
 549:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 550:..\FreeRTOS\Source/timers.c **** 
 551:..\FreeRTOS\Source/timers.c ****     static portTASK_FUNCTION( prvTimerTask, pvParameters )
 552:..\FreeRTOS\Source/timers.c ****     {
 1020              		.loc 1 552 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 16
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 84B0     		sub	sp, sp, #16
 1029              		.cfi_def_cfa_offset 24
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 1033              	.L85:
 553:..\FreeRTOS\Source/timers.c ****         TickType_t xNextExpireTime;
 554:..\FreeRTOS\Source/timers.c ****         BaseType_t xListWasEmpty;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 29


 555:..\FreeRTOS\Source/timers.c **** 
 556:..\FreeRTOS\Source/timers.c ****         /* Just to avoid compiler warnings. */
 557:..\FreeRTOS\Source/timers.c ****         ( void ) pvParameters;
 558:..\FreeRTOS\Source/timers.c **** 
 559:..\FreeRTOS\Source/timers.c ****         #if ( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 560:..\FreeRTOS\Source/timers.c ****             {
 561:..\FreeRTOS\Source/timers.c ****                 extern void vApplicationDaemonTaskStartupHook( void );
 562:..\FreeRTOS\Source/timers.c **** 
 563:..\FreeRTOS\Source/timers.c ****                 /* Allow the application writer to execute some code in the context of
 564:..\FreeRTOS\Source/timers.c ****                  * this task at the point the task starts executing.  This is useful if the
 565:..\FreeRTOS\Source/timers.c ****                  * application includes initialisation code that would benefit from
 566:..\FreeRTOS\Source/timers.c ****                  * executing after the scheduler has been started. */
 567:..\FreeRTOS\Source/timers.c ****                 vApplicationDaemonTaskStartupHook();
 568:..\FreeRTOS\Source/timers.c ****             }
 569:..\FreeRTOS\Source/timers.c ****         #endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 570:..\FreeRTOS\Source/timers.c **** 
 571:..\FreeRTOS\Source/timers.c ****         for( ; ; )
 572:..\FreeRTOS\Source/timers.c ****         {
 573:..\FreeRTOS\Source/timers.c ****             /* Query the timers list to see if it contains any timers, and if so,
 574:..\FreeRTOS\Source/timers.c ****              * obtain the time at which the next timer will expire. */
 575:..\FreeRTOS\Source/timers.c ****             xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 1034              		.loc 1 575 0 discriminator 1
 1035 0008 0823     		movs	r3, #8
 1036 000a FB18     		adds	r3, r7, r3
 1037 000c 1800     		movs	r0, r3
 1038 000e FFF7FEFF 		bl	prvGetNextExpireTime
 1039 0012 0300     		movs	r3, r0
 1040 0014 FB60     		str	r3, [r7, #12]
 576:..\FreeRTOS\Source/timers.c **** 
 577:..\FreeRTOS\Source/timers.c ****             /* If a timer has expired, process it.  Otherwise, block this task
 578:..\FreeRTOS\Source/timers.c ****              * until either a timer does expire, or a command is received. */
 579:..\FreeRTOS\Source/timers.c ****             prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 1041              		.loc 1 579 0 discriminator 1
 1042 0016 BA68     		ldr	r2, [r7, #8]
 1043 0018 FB68     		ldr	r3, [r7, #12]
 1044 001a 1100     		movs	r1, r2
 1045 001c 1800     		movs	r0, r3
 1046 001e FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 580:..\FreeRTOS\Source/timers.c **** 
 581:..\FreeRTOS\Source/timers.c ****             /* Empty the command queue. */
 582:..\FreeRTOS\Source/timers.c ****             prvProcessReceivedCommands();
 1047              		.loc 1 582 0 discriminator 1
 1048 0022 FFF7FEFF 		bl	prvProcessReceivedCommands
 583:..\FreeRTOS\Source/timers.c ****         }
 1049              		.loc 1 583 0 discriminator 1
 1050 0026 EFE7     		b	.L85
 1051              		.cfi_endproc
 1052              	.LFE12:
 1053              		.size	prvTimerTask, .-prvTimerTask
 1054              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1055              		.align	2
 1056              		.code	16
 1057              		.thumb_func
 1058              		.type	prvProcessTimerOrBlockTask, %function
 1059              	prvProcessTimerOrBlockTask:
 1060              	.LFB13:
 584:..\FreeRTOS\Source/timers.c ****     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 30


 585:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 586:..\FreeRTOS\Source/timers.c **** 
 587:..\FreeRTOS\Source/timers.c ****     static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime,
 588:..\FreeRTOS\Source/timers.c ****                                             BaseType_t xListWasEmpty )
 589:..\FreeRTOS\Source/timers.c ****     {
 1061              		.loc 1 589 0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 16
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065 0000 80B5     		push	{r7, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 7, -8
 1068              		.cfi_offset 14, -4
 1069 0002 84B0     		sub	sp, sp, #16
 1070              		.cfi_def_cfa_offset 24
 1071 0004 00AF     		add	r7, sp, #0
 1072              		.cfi_def_cfa_register 7
 1073 0006 7860     		str	r0, [r7, #4]
 1074 0008 3960     		str	r1, [r7]
 590:..\FreeRTOS\Source/timers.c ****         TickType_t xTimeNow;
 591:..\FreeRTOS\Source/timers.c ****         BaseType_t xTimerListsWereSwitched;
 592:..\FreeRTOS\Source/timers.c **** 
 593:..\FreeRTOS\Source/timers.c ****         vTaskSuspendAll();
 1075              		.loc 1 593 0
 1076 000a FFF7FEFF 		bl	vTaskSuspendAll
 594:..\FreeRTOS\Source/timers.c ****         {
 595:..\FreeRTOS\Source/timers.c ****             /* Obtain the time now to make an assessment as to whether the timer
 596:..\FreeRTOS\Source/timers.c ****              * has expired or not.  If obtaining the time causes the lists to switch
 597:..\FreeRTOS\Source/timers.c ****              * then don't process this timer as any timers that remained in the list
 598:..\FreeRTOS\Source/timers.c ****              * when the lists were switched will have been processed within the
 599:..\FreeRTOS\Source/timers.c ****              * prvSampleTimeNow() function. */
 600:..\FreeRTOS\Source/timers.c ****             xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1077              		.loc 1 600 0
 1078 000e 0823     		movs	r3, #8
 1079 0010 FB18     		adds	r3, r7, r3
 1080 0012 1800     		movs	r0, r3
 1081 0014 FFF7FEFF 		bl	prvSampleTimeNow
 1082 0018 0300     		movs	r3, r0
 1083 001a FB60     		str	r3, [r7, #12]
 601:..\FreeRTOS\Source/timers.c **** 
 602:..\FreeRTOS\Source/timers.c ****             if( xTimerListsWereSwitched == pdFALSE )
 1084              		.loc 1 602 0
 1085 001c BB68     		ldr	r3, [r7, #8]
 1086 001e 002B     		cmp	r3, #0
 1087 0020 2BD1     		bne	.L87
 603:..\FreeRTOS\Source/timers.c ****             {
 604:..\FreeRTOS\Source/timers.c ****                 /* The tick count has not overflowed, has the timer expired? */
 605:..\FreeRTOS\Source/timers.c ****                 if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 1088              		.loc 1 605 0
 1089 0022 3B68     		ldr	r3, [r7]
 1090 0024 002B     		cmp	r3, #0
 1091 0026 0CD1     		bne	.L88
 1092              		.loc 1 605 0 is_stmt 0 discriminator 1
 1093 0028 7A68     		ldr	r2, [r7, #4]
 1094 002a FB68     		ldr	r3, [r7, #12]
 1095 002c 9A42     		cmp	r2, r3
 1096 002e 08D8     		bhi	.L88
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 31


 606:..\FreeRTOS\Source/timers.c ****                 {
 607:..\FreeRTOS\Source/timers.c ****                     ( void ) xTaskResumeAll();
 1097              		.loc 1 607 0 is_stmt 1
 1098 0030 FFF7FEFF 		bl	xTaskResumeAll
 608:..\FreeRTOS\Source/timers.c ****                     prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1099              		.loc 1 608 0
 1100 0034 FA68     		ldr	r2, [r7, #12]
 1101 0036 7B68     		ldr	r3, [r7, #4]
 1102 0038 1100     		movs	r1, r2
 1103 003a 1800     		movs	r0, r3
 1104 003c FFF7FEFF 		bl	prvProcessExpiredTimer
 609:..\FreeRTOS\Source/timers.c ****                 }
 610:..\FreeRTOS\Source/timers.c ****                 else
 611:..\FreeRTOS\Source/timers.c ****                 {
 612:..\FreeRTOS\Source/timers.c ****                     /* The tick count has not overflowed, and the next expire
 613:..\FreeRTOS\Source/timers.c ****                      * time has not been reached yet.  This task should therefore
 614:..\FreeRTOS\Source/timers.c ****                      * block to wait for the next expire time or a command to be
 615:..\FreeRTOS\Source/timers.c ****                      * received - whichever comes first.  The following line cannot
 616:..\FreeRTOS\Source/timers.c ****                      * be reached unless xNextExpireTime > xTimeNow, except in the
 617:..\FreeRTOS\Source/timers.c ****                      * case when the current timer list is empty. */
 618:..\FreeRTOS\Source/timers.c ****                     if( xListWasEmpty != pdFALSE )
 619:..\FreeRTOS\Source/timers.c ****                     {
 620:..\FreeRTOS\Source/timers.c ****                         /* The current timer list is empty - is the overflow list
 621:..\FreeRTOS\Source/timers.c ****                          * also empty? */
 622:..\FreeRTOS\Source/timers.c ****                         xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 623:..\FreeRTOS\Source/timers.c ****                     }
 624:..\FreeRTOS\Source/timers.c **** 
 625:..\FreeRTOS\Source/timers.c ****                     vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xL
 626:..\FreeRTOS\Source/timers.c **** 
 627:..\FreeRTOS\Source/timers.c ****                     if( xTaskResumeAll() == pdFALSE )
 628:..\FreeRTOS\Source/timers.c ****                     {
 629:..\FreeRTOS\Source/timers.c ****                         /* Yield to wait for either a command to arrive, or the
 630:..\FreeRTOS\Source/timers.c ****                          * block time to expire.  If a command arrived between the
 631:..\FreeRTOS\Source/timers.c ****                          * critical section being exited and this yield then the yield
 632:..\FreeRTOS\Source/timers.c ****                          * will not cause the task to block. */
 633:..\FreeRTOS\Source/timers.c ****                         portYIELD_WITHIN_API();
 634:..\FreeRTOS\Source/timers.c ****                     }
 635:..\FreeRTOS\Source/timers.c ****                     else
 636:..\FreeRTOS\Source/timers.c ****                     {
 637:..\FreeRTOS\Source/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 638:..\FreeRTOS\Source/timers.c ****                     }
 639:..\FreeRTOS\Source/timers.c ****                 }
 640:..\FreeRTOS\Source/timers.c ****             }
 641:..\FreeRTOS\Source/timers.c ****             else
 642:..\FreeRTOS\Source/timers.c ****             {
 643:..\FreeRTOS\Source/timers.c ****                 ( void ) xTaskResumeAll();
 644:..\FreeRTOS\Source/timers.c ****             }
 645:..\FreeRTOS\Source/timers.c ****         }
 646:..\FreeRTOS\Source/timers.c ****     }
 1105              		.loc 1 646 0
 1106 0040 1DE0     		b	.L94
 1107              	.L88:
 618:..\FreeRTOS\Source/timers.c ****                     {
 1108              		.loc 1 618 0
 1109 0042 3B68     		ldr	r3, [r7]
 1110 0044 002B     		cmp	r3, #0
 1111 0046 08D0     		beq	.L90
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 32


 622:..\FreeRTOS\Source/timers.c ****                     }
 1112              		.loc 1 622 0
 1113 0048 0F4B     		ldr	r3, .L95
 1114 004a 1B68     		ldr	r3, [r3]
 1115 004c 1B68     		ldr	r3, [r3]
 1116 004e 002B     		cmp	r3, #0
 1117 0050 01D1     		bne	.L91
 622:..\FreeRTOS\Source/timers.c ****                     }
 1118              		.loc 1 622 0 is_stmt 0 discriminator 1
 1119 0052 0123     		movs	r3, #1
 1120 0054 00E0     		b	.L92
 1121              	.L91:
 622:..\FreeRTOS\Source/timers.c ****                     }
 1122              		.loc 1 622 0 discriminator 2
 1123 0056 0023     		movs	r3, #0
 1124              	.L92:
 622:..\FreeRTOS\Source/timers.c ****                     }
 1125              		.loc 1 622 0 discriminator 4
 1126 0058 3B60     		str	r3, [r7]
 1127              	.L90:
 625:..\FreeRTOS\Source/timers.c **** 
 1128              		.loc 1 625 0 is_stmt 1
 1129 005a 0C4B     		ldr	r3, .L95+4
 1130 005c 1868     		ldr	r0, [r3]
 1131 005e 7A68     		ldr	r2, [r7, #4]
 1132 0060 FB68     		ldr	r3, [r7, #12]
 1133 0062 D31A     		subs	r3, r2, r3
 1134 0064 3A68     		ldr	r2, [r7]
 1135 0066 1900     		movs	r1, r3
 1136 0068 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 627:..\FreeRTOS\Source/timers.c ****                     {
 1137              		.loc 1 627 0
 1138 006c FFF7FEFF 		bl	xTaskResumeAll
 1139 0070 031E     		subs	r3, r0, #0
 1140 0072 04D1     		bne	.L94
 633:..\FreeRTOS\Source/timers.c ****                     }
 1141              		.loc 1 633 0
 1142 0074 FFF7FEFF 		bl	vPortYield
 1143              		.loc 1 646 0
 1144 0078 01E0     		b	.L94
 1145              	.L87:
 643:..\FreeRTOS\Source/timers.c ****             }
 1146              		.loc 1 643 0
 1147 007a FFF7FEFF 		bl	xTaskResumeAll
 1148              	.L94:
 1149              		.loc 1 646 0
 1150 007e C046     		nop
 1151 0080 BD46     		mov	sp, r7
 1152 0082 04B0     		add	sp, sp, #16
 1153              		@ sp needed
 1154 0084 80BD     		pop	{r7, pc}
 1155              	.L96:
 1156 0086 C046     		.align	2
 1157              	.L95:
 1158 0088 2C000000 		.word	pxOverflowTimerList
 1159 008c 30000000 		.word	xTimerQueue
 1160              		.cfi_endproc
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 33


 1161              	.LFE13:
 1162              		.size	prvProcessTimerOrBlockTask, .-prvProcessTimerOrBlockTask
 1163              		.section	.text.prvGetNextExpireTime,"ax",%progbits
 1164              		.align	2
 1165              		.code	16
 1166              		.thumb_func
 1167              		.type	prvGetNextExpireTime, %function
 1168              	prvGetNextExpireTime:
 1169              	.LFB14:
 647:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 648:..\FreeRTOS\Source/timers.c **** 
 649:..\FreeRTOS\Source/timers.c ****     static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 650:..\FreeRTOS\Source/timers.c ****     {
 1170              		.loc 1 650 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 16
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174 0000 80B5     		push	{r7, lr}
 1175              		.cfi_def_cfa_offset 8
 1176              		.cfi_offset 7, -8
 1177              		.cfi_offset 14, -4
 1178 0002 84B0     		sub	sp, sp, #16
 1179              		.cfi_def_cfa_offset 24
 1180 0004 00AF     		add	r7, sp, #0
 1181              		.cfi_def_cfa_register 7
 1182 0006 7860     		str	r0, [r7, #4]
 651:..\FreeRTOS\Source/timers.c ****         TickType_t xNextExpireTime;
 652:..\FreeRTOS\Source/timers.c **** 
 653:..\FreeRTOS\Source/timers.c ****         /* Timers are listed in expiry time order, with the head of the list
 654:..\FreeRTOS\Source/timers.c ****          * referencing the task that will expire first.  Obtain the time at which
 655:..\FreeRTOS\Source/timers.c ****          * the timer with the nearest expiry time will expire.  If there are no
 656:..\FreeRTOS\Source/timers.c ****          * active timers then just set the next expire time to 0.  That will cause
 657:..\FreeRTOS\Source/timers.c ****          * this task to unblock when the tick count overflows, at which point the
 658:..\FreeRTOS\Source/timers.c ****          * timer lists will be switched and the next expiry time can be
 659:..\FreeRTOS\Source/timers.c ****          * re-assessed.  */
 660:..\FreeRTOS\Source/timers.c ****         *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 1183              		.loc 1 660 0
 1184 0008 0D4B     		ldr	r3, .L103
 1185 000a 1B68     		ldr	r3, [r3]
 1186 000c 1B68     		ldr	r3, [r3]
 1187 000e 002B     		cmp	r3, #0
 1188 0010 01D1     		bne	.L98
 1189              		.loc 1 660 0 is_stmt 0 discriminator 1
 1190 0012 0122     		movs	r2, #1
 1191 0014 00E0     		b	.L99
 1192              	.L98:
 1193              		.loc 1 660 0 discriminator 2
 1194 0016 0022     		movs	r2, #0
 1195              	.L99:
 1196              		.loc 1 660 0 discriminator 4
 1197 0018 7B68     		ldr	r3, [r7, #4]
 1198 001a 1A60     		str	r2, [r3]
 661:..\FreeRTOS\Source/timers.c **** 
 662:..\FreeRTOS\Source/timers.c ****         if( *pxListWasEmpty == pdFALSE )
 1199              		.loc 1 662 0 is_stmt 1 discriminator 4
 1200 001c 7B68     		ldr	r3, [r7, #4]
 1201 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 34


 1202 0020 002B     		cmp	r3, #0
 1203 0022 05D1     		bne	.L100
 663:..\FreeRTOS\Source/timers.c ****         {
 664:..\FreeRTOS\Source/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1204              		.loc 1 664 0
 1205 0024 064B     		ldr	r3, .L103
 1206 0026 1B68     		ldr	r3, [r3]
 1207 0028 DB68     		ldr	r3, [r3, #12]
 1208 002a 1B68     		ldr	r3, [r3]
 1209 002c FB60     		str	r3, [r7, #12]
 1210 002e 01E0     		b	.L101
 1211              	.L100:
 665:..\FreeRTOS\Source/timers.c ****         }
 666:..\FreeRTOS\Source/timers.c ****         else
 667:..\FreeRTOS\Source/timers.c ****         {
 668:..\FreeRTOS\Source/timers.c ****             /* Ensure the task unblocks when the tick count rolls over. */
 669:..\FreeRTOS\Source/timers.c ****             xNextExpireTime = ( TickType_t ) 0U;
 1212              		.loc 1 669 0
 1213 0030 0023     		movs	r3, #0
 1214 0032 FB60     		str	r3, [r7, #12]
 1215              	.L101:
 670:..\FreeRTOS\Source/timers.c ****         }
 671:..\FreeRTOS\Source/timers.c **** 
 672:..\FreeRTOS\Source/timers.c ****         return xNextExpireTime;
 1216              		.loc 1 672 0
 1217 0034 FB68     		ldr	r3, [r7, #12]
 673:..\FreeRTOS\Source/timers.c ****     }
 1218              		.loc 1 673 0
 1219 0036 1800     		movs	r0, r3
 1220 0038 BD46     		mov	sp, r7
 1221 003a 04B0     		add	sp, sp, #16
 1222              		@ sp needed
 1223 003c 80BD     		pop	{r7, pc}
 1224              	.L104:
 1225 003e C046     		.align	2
 1226              	.L103:
 1227 0040 28000000 		.word	pxCurrentTimerList
 1228              		.cfi_endproc
 1229              	.LFE14:
 1230              		.size	prvGetNextExpireTime, .-prvGetNextExpireTime
 1231              		.section	.text.prvSampleTimeNow,"ax",%progbits
 1232              		.align	2
 1233              		.code	16
 1234              		.thumb_func
 1235              		.type	prvSampleTimeNow, %function
 1236              	prvSampleTimeNow:
 1237              	.LFB15:
 674:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 675:..\FreeRTOS\Source/timers.c **** 
 676:..\FreeRTOS\Source/timers.c ****     static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 677:..\FreeRTOS\Source/timers.c ****     {
 1238              		.loc 1 677 0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 16
 1241              		@ frame_needed = 1, uses_anonymous_args = 0
 1242 0000 80B5     		push	{r7, lr}
 1243              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 35


 1244              		.cfi_offset 7, -8
 1245              		.cfi_offset 14, -4
 1246 0002 84B0     		sub	sp, sp, #16
 1247              		.cfi_def_cfa_offset 24
 1248 0004 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 1250 0006 7860     		str	r0, [r7, #4]
 678:..\FreeRTOS\Source/timers.c ****         TickType_t xTimeNow;
 679:..\FreeRTOS\Source/timers.c ****         PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is o
 680:..\FreeRTOS\Source/timers.c **** 
 681:..\FreeRTOS\Source/timers.c ****         xTimeNow = xTaskGetTickCount();
 1251              		.loc 1 681 0
 1252 0008 FFF7FEFF 		bl	xTaskGetTickCount
 1253 000c 0300     		movs	r3, r0
 1254 000e FB60     		str	r3, [r7, #12]
 682:..\FreeRTOS\Source/timers.c **** 
 683:..\FreeRTOS\Source/timers.c ****         if( xTimeNow < xLastTime )
 1255              		.loc 1 683 0
 1256 0010 0A4B     		ldr	r3, .L109
 1257 0012 1B68     		ldr	r3, [r3]
 1258 0014 FA68     		ldr	r2, [r7, #12]
 1259 0016 9A42     		cmp	r2, r3
 1260 0018 05D2     		bcs	.L106
 684:..\FreeRTOS\Source/timers.c ****         {
 685:..\FreeRTOS\Source/timers.c ****             prvSwitchTimerLists();
 1261              		.loc 1 685 0
 1262 001a FFF7FEFF 		bl	prvSwitchTimerLists
 686:..\FreeRTOS\Source/timers.c ****             *pxTimerListsWereSwitched = pdTRUE;
 1263              		.loc 1 686 0
 1264 001e 7B68     		ldr	r3, [r7, #4]
 1265 0020 0122     		movs	r2, #1
 1266 0022 1A60     		str	r2, [r3]
 1267 0024 02E0     		b	.L107
 1268              	.L106:
 687:..\FreeRTOS\Source/timers.c ****         }
 688:..\FreeRTOS\Source/timers.c ****         else
 689:..\FreeRTOS\Source/timers.c ****         {
 690:..\FreeRTOS\Source/timers.c ****             *pxTimerListsWereSwitched = pdFALSE;
 1269              		.loc 1 690 0
 1270 0026 7B68     		ldr	r3, [r7, #4]
 1271 0028 0022     		movs	r2, #0
 1272 002a 1A60     		str	r2, [r3]
 1273              	.L107:
 691:..\FreeRTOS\Source/timers.c ****         }
 692:..\FreeRTOS\Source/timers.c **** 
 693:..\FreeRTOS\Source/timers.c ****         xLastTime = xTimeNow;
 1274              		.loc 1 693 0
 1275 002c 034B     		ldr	r3, .L109
 1276 002e FA68     		ldr	r2, [r7, #12]
 1277 0030 1A60     		str	r2, [r3]
 694:..\FreeRTOS\Source/timers.c **** 
 695:..\FreeRTOS\Source/timers.c ****         return xTimeNow;
 1278              		.loc 1 695 0
 1279 0032 FB68     		ldr	r3, [r7, #12]
 696:..\FreeRTOS\Source/timers.c ****     }
 1280              		.loc 1 696 0
 1281 0034 1800     		movs	r0, r3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 36


 1282 0036 BD46     		mov	sp, r7
 1283 0038 04B0     		add	sp, sp, #16
 1284              		@ sp needed
 1285 003a 80BD     		pop	{r7, pc}
 1286              	.L110:
 1287              		.align	2
 1288              	.L109:
 1289 003c 38000000 		.word	xLastTime.5533
 1290              		.cfi_endproc
 1291              	.LFE15:
 1292              		.size	prvSampleTimeNow, .-prvSampleTimeNow
 1293              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
 1294              		.align	2
 1295              		.code	16
 1296              		.thumb_func
 1297              		.type	prvInsertTimerInActiveList, %function
 1298              	prvInsertTimerInActiveList:
 1299              	.LFB16:
 697:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 698:..\FreeRTOS\Source/timers.c **** 
 699:..\FreeRTOS\Source/timers.c ****     static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
 700:..\FreeRTOS\Source/timers.c ****                                                   const TickType_t xNextExpiryTime,
 701:..\FreeRTOS\Source/timers.c ****                                                   const TickType_t xTimeNow,
 702:..\FreeRTOS\Source/timers.c ****                                                   const TickType_t xCommandTime )
 703:..\FreeRTOS\Source/timers.c ****     {
 1300              		.loc 1 703 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 24
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 7, -8
 1307              		.cfi_offset 14, -4
 1308 0002 86B0     		sub	sp, sp, #24
 1309              		.cfi_def_cfa_offset 32
 1310 0004 00AF     		add	r7, sp, #0
 1311              		.cfi_def_cfa_register 7
 1312 0006 F860     		str	r0, [r7, #12]
 1313 0008 B960     		str	r1, [r7, #8]
 1314 000a 7A60     		str	r2, [r7, #4]
 1315 000c 3B60     		str	r3, [r7]
 704:..\FreeRTOS\Source/timers.c ****         BaseType_t xProcessTimerNow = pdFALSE;
 1316              		.loc 1 704 0
 1317 000e 0023     		movs	r3, #0
 1318 0010 7B61     		str	r3, [r7, #20]
 705:..\FreeRTOS\Source/timers.c **** 
 706:..\FreeRTOS\Source/timers.c ****         listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 1319              		.loc 1 706 0
 1320 0012 FB68     		ldr	r3, [r7, #12]
 1321 0014 BA68     		ldr	r2, [r7, #8]
 1322 0016 5A60     		str	r2, [r3, #4]
 707:..\FreeRTOS\Source/timers.c ****         listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1323              		.loc 1 707 0
 1324 0018 FB68     		ldr	r3, [r7, #12]
 1325 001a FA68     		ldr	r2, [r7, #12]
 1326 001c 1A61     		str	r2, [r3, #16]
 708:..\FreeRTOS\Source/timers.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 37


 709:..\FreeRTOS\Source/timers.c ****         if( xNextExpiryTime <= xTimeNow )
 1327              		.loc 1 709 0
 1328 001e BA68     		ldr	r2, [r7, #8]
 1329 0020 7B68     		ldr	r3, [r7, #4]
 1330 0022 9A42     		cmp	r2, r3
 1331 0024 12D8     		bhi	.L112
 710:..\FreeRTOS\Source/timers.c ****         {
 711:..\FreeRTOS\Source/timers.c ****             /* Has the expiry time elapsed between the command to start/reset a
 712:..\FreeRTOS\Source/timers.c ****              * timer was issued, and the time the command was processed? */
 713:..\FreeRTOS\Source/timers.c ****             if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*
 1332              		.loc 1 713 0
 1333 0026 7A68     		ldr	r2, [r7, #4]
 1334 0028 3B68     		ldr	r3, [r7]
 1335 002a D21A     		subs	r2, r2, r3
 1336 002c FB68     		ldr	r3, [r7, #12]
 1337 002e 9B69     		ldr	r3, [r3, #24]
 1338 0030 9A42     		cmp	r2, r3
 1339 0032 02D3     		bcc	.L113
 714:..\FreeRTOS\Source/timers.c ****             {
 715:..\FreeRTOS\Source/timers.c ****                 /* The time between a command being issued and the command being
 716:..\FreeRTOS\Source/timers.c ****                  * processed actually exceeds the timers period.  */
 717:..\FreeRTOS\Source/timers.c ****                 xProcessTimerNow = pdTRUE;
 1340              		.loc 1 717 0
 1341 0034 0123     		movs	r3, #1
 1342 0036 7B61     		str	r3, [r7, #20]
 1343 0038 1BE0     		b	.L115
 1344              	.L113:
 718:..\FreeRTOS\Source/timers.c ****             }
 719:..\FreeRTOS\Source/timers.c ****             else
 720:..\FreeRTOS\Source/timers.c ****             {
 721:..\FreeRTOS\Source/timers.c ****                 vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 1345              		.loc 1 721 0
 1346 003a 104B     		ldr	r3, .L118
 1347 003c 1A68     		ldr	r2, [r3]
 1348 003e FB68     		ldr	r3, [r7, #12]
 1349 0040 0433     		adds	r3, r3, #4
 1350 0042 1900     		movs	r1, r3
 1351 0044 1000     		movs	r0, r2
 1352 0046 FFF7FEFF 		bl	vListInsert
 1353 004a 12E0     		b	.L115
 1354              	.L112:
 722:..\FreeRTOS\Source/timers.c ****             }
 723:..\FreeRTOS\Source/timers.c ****         }
 724:..\FreeRTOS\Source/timers.c ****         else
 725:..\FreeRTOS\Source/timers.c ****         {
 726:..\FreeRTOS\Source/timers.c ****             if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 1355              		.loc 1 726 0
 1356 004c 7A68     		ldr	r2, [r7, #4]
 1357 004e 3B68     		ldr	r3, [r7]
 1358 0050 9A42     		cmp	r2, r3
 1359 0052 06D2     		bcs	.L116
 1360              		.loc 1 726 0 is_stmt 0 discriminator 1
 1361 0054 BA68     		ldr	r2, [r7, #8]
 1362 0056 3B68     		ldr	r3, [r7]
 1363 0058 9A42     		cmp	r2, r3
 1364 005a 02D3     		bcc	.L116
 727:..\FreeRTOS\Source/timers.c ****             {
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 38


 728:..\FreeRTOS\Source/timers.c ****                 /* If, since the command was issued, the tick count has overflowed
 729:..\FreeRTOS\Source/timers.c ****                  * but the expiry time has not, then the timer must have already passed
 730:..\FreeRTOS\Source/timers.c ****                  * its expiry time and should be processed immediately. */
 731:..\FreeRTOS\Source/timers.c ****                 xProcessTimerNow = pdTRUE;
 1365              		.loc 1 731 0 is_stmt 1
 1366 005c 0123     		movs	r3, #1
 1367 005e 7B61     		str	r3, [r7, #20]
 1368 0060 07E0     		b	.L115
 1369              	.L116:
 732:..\FreeRTOS\Source/timers.c ****             }
 733:..\FreeRTOS\Source/timers.c ****             else
 734:..\FreeRTOS\Source/timers.c ****             {
 735:..\FreeRTOS\Source/timers.c ****                 vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1370              		.loc 1 735 0
 1371 0062 074B     		ldr	r3, .L118+4
 1372 0064 1A68     		ldr	r2, [r3]
 1373 0066 FB68     		ldr	r3, [r7, #12]
 1374 0068 0433     		adds	r3, r3, #4
 1375 006a 1900     		movs	r1, r3
 1376 006c 1000     		movs	r0, r2
 1377 006e FFF7FEFF 		bl	vListInsert
 1378              	.L115:
 736:..\FreeRTOS\Source/timers.c ****             }
 737:..\FreeRTOS\Source/timers.c ****         }
 738:..\FreeRTOS\Source/timers.c **** 
 739:..\FreeRTOS\Source/timers.c ****         return xProcessTimerNow;
 1379              		.loc 1 739 0
 1380 0072 7B69     		ldr	r3, [r7, #20]
 740:..\FreeRTOS\Source/timers.c ****     }
 1381              		.loc 1 740 0
 1382 0074 1800     		movs	r0, r3
 1383 0076 BD46     		mov	sp, r7
 1384 0078 06B0     		add	sp, sp, #24
 1385              		@ sp needed
 1386 007a 80BD     		pop	{r7, pc}
 1387              	.L119:
 1388              		.align	2
 1389              	.L118:
 1390 007c 2C000000 		.word	pxOverflowTimerList
 1391 0080 28000000 		.word	pxCurrentTimerList
 1392              		.cfi_endproc
 1393              	.LFE16:
 1394              		.size	prvInsertTimerInActiveList, .-prvInsertTimerInActiveList
 1395              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1396              		.align	2
 1397              		.code	16
 1398              		.thumb_func
 1399              		.type	prvProcessReceivedCommands, %function
 1400              	prvProcessReceivedCommands:
 1401              	.LFB17:
 741:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 742:..\FreeRTOS\Source/timers.c **** 
 743:..\FreeRTOS\Source/timers.c ****     static void prvProcessReceivedCommands( void )
 744:..\FreeRTOS\Source/timers.c ****     {
 1402              		.loc 1 744 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 39


 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406 0000 80B5     		push	{r7, lr}
 1407              		.cfi_def_cfa_offset 8
 1408              		.cfi_offset 7, -8
 1409              		.cfi_offset 14, -4
 1410 0002 8AB0     		sub	sp, sp, #40
 1411              		.cfi_def_cfa_offset 48
 1412 0004 02AF     		add	r7, sp, #8
 1413              		.cfi_def_cfa 7, 40
 745:..\FreeRTOS\Source/timers.c ****         DaemonTaskMessage_t xMessage;
 746:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer;
 747:..\FreeRTOS\Source/timers.c ****         BaseType_t xTimerListsWereSwitched, xResult;
 748:..\FreeRTOS\Source/timers.c ****         TickType_t xTimeNow;
 749:..\FreeRTOS\Source/timers.c **** 
 750:..\FreeRTOS\Source/timers.c ****         while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessa
 1414              		.loc 1 750 0
 1415 0006 9BE0     		b	.L121
 1416              	.L135:
 751:..\FreeRTOS\Source/timers.c ****         {
 752:..\FreeRTOS\Source/timers.c ****             #if ( INCLUDE_xTimerPendFunctionCall == 1 )
 753:..\FreeRTOS\Source/timers.c ****                 {
 754:..\FreeRTOS\Source/timers.c ****                     /* Negative commands are pended function calls rather than timer
 755:..\FreeRTOS\Source/timers.c ****                      * commands. */
 756:..\FreeRTOS\Source/timers.c ****                     if( xMessage.xMessageID < ( BaseType_t ) 0 )
 757:..\FreeRTOS\Source/timers.c ****                     {
 758:..\FreeRTOS\Source/timers.c ****                         const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackPara
 759:..\FreeRTOS\Source/timers.c **** 
 760:..\FreeRTOS\Source/timers.c ****                         /* The timer uses the xCallbackParameters member to request a
 761:..\FreeRTOS\Source/timers.c ****                          * callback be executed.  Check the callback is not NULL. */
 762:..\FreeRTOS\Source/timers.c ****                         configASSERT( pxCallback );
 763:..\FreeRTOS\Source/timers.c **** 
 764:..\FreeRTOS\Source/timers.c ****                         /* Call the function. */
 765:..\FreeRTOS\Source/timers.c ****                         pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulPar
 766:..\FreeRTOS\Source/timers.c ****                     }
 767:..\FreeRTOS\Source/timers.c ****                     else
 768:..\FreeRTOS\Source/timers.c ****                     {
 769:..\FreeRTOS\Source/timers.c ****                         mtCOVERAGE_TEST_MARKER();
 770:..\FreeRTOS\Source/timers.c ****                     }
 771:..\FreeRTOS\Source/timers.c ****                 }
 772:..\FreeRTOS\Source/timers.c ****             #endif /* INCLUDE_xTimerPendFunctionCall */
 773:..\FreeRTOS\Source/timers.c **** 
 774:..\FreeRTOS\Source/timers.c ****             /* Commands that are positive are timer commands rather than pended
 775:..\FreeRTOS\Source/timers.c ****              * function calls. */
 776:..\FreeRTOS\Source/timers.c ****             if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 1417              		.loc 1 776 0
 1418 0008 0823     		movs	r3, #8
 1419 000a FB18     		adds	r3, r7, r3
 1420 000c 1B68     		ldr	r3, [r3]
 1421 000e 002B     		cmp	r3, #0
 1422 0010 00DA     		bge	.LCB1183
 1423 0012 95E0     		b	.L121	@long jump
 1424              	.LCB1183:
 777:..\FreeRTOS\Source/timers.c ****             {
 778:..\FreeRTOS\Source/timers.c ****                 /* The messages uses the xTimerParameters member to work on a
 779:..\FreeRTOS\Source/timers.c ****                  * software timer. */
 780:..\FreeRTOS\Source/timers.c ****                 pxTimer = xMessage.u.xTimerParameters.pxTimer;
 1425              		.loc 1 780 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 40


 1426 0014 0823     		movs	r3, #8
 1427 0016 FB18     		adds	r3, r7, r3
 1428 0018 9B68     		ldr	r3, [r3, #8]
 1429 001a FB61     		str	r3, [r7, #28]
 781:..\FreeRTOS\Source/timers.c **** 
 782:..\FreeRTOS\Source/timers.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*li
 1430              		.loc 1 782 0
 1431 001c FB69     		ldr	r3, [r7, #28]
 1432 001e 5B69     		ldr	r3, [r3, #20]
 1433 0020 002B     		cmp	r3, #0
 1434 0022 04D0     		beq	.L122
 783:..\FreeRTOS\Source/timers.c ****                 {
 784:..\FreeRTOS\Source/timers.c ****                     /* The timer is in a list, remove it. */
 785:..\FreeRTOS\Source/timers.c ****                     ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1435              		.loc 1 785 0
 1436 0024 FB69     		ldr	r3, [r7, #28]
 1437 0026 0433     		adds	r3, r3, #4
 1438 0028 1800     		movs	r0, r3
 1439 002a FFF7FEFF 		bl	uxListRemove
 1440              	.L122:
 786:..\FreeRTOS\Source/timers.c ****                 }
 787:..\FreeRTOS\Source/timers.c ****                 else
 788:..\FreeRTOS\Source/timers.c ****                 {
 789:..\FreeRTOS\Source/timers.c ****                     mtCOVERAGE_TEST_MARKER();
 790:..\FreeRTOS\Source/timers.c ****                 }
 791:..\FreeRTOS\Source/timers.c **** 
 792:..\FreeRTOS\Source/timers.c ****                 traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParamet
 793:..\FreeRTOS\Source/timers.c **** 
 794:..\FreeRTOS\Source/timers.c ****                 /* In this case the xTimerListsWereSwitched parameter is not used, but
 795:..\FreeRTOS\Source/timers.c ****                  *  it must be present in the function call.  prvSampleTimeNow() must be
 796:..\FreeRTOS\Source/timers.c ****                  *  called after the message is received from xTimerQueue so there is no
 797:..\FreeRTOS\Source/timers.c ****                  *  possibility of a higher priority task adding a message to the message
 798:..\FreeRTOS\Source/timers.c ****                  *  queue with a time that is ahead of the timer daemon task (because it
 799:..\FreeRTOS\Source/timers.c ****                  *  pre-empted the timer daemon task after the xTimeNow value was set). */
 800:..\FreeRTOS\Source/timers.c ****                 xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1441              		.loc 1 800 0
 1442 002e 3B1D     		adds	r3, r7, #4
 1443 0030 1800     		movs	r0, r3
 1444 0032 FFF7FEFF 		bl	prvSampleTimeNow
 1445 0036 0300     		movs	r3, r0
 1446 0038 BB61     		str	r3, [r7, #24]
 801:..\FreeRTOS\Source/timers.c **** 
 802:..\FreeRTOS\Source/timers.c ****                 switch( xMessage.xMessageID )
 1447              		.loc 1 802 0
 1448 003a 0823     		movs	r3, #8
 1449 003c FB18     		adds	r3, r7, r3
 1450 003e 1B68     		ldr	r3, [r3]
 1451 0040 092B     		cmp	r3, #9
 1452 0042 00D9     		bls	.LCB1207
 1453 0044 7BE0     		b	.L136	@long jump
 1454              	.LCB1207:
 1455 0046 9A00     		lsls	r2, r3, #2
 1456 0048 454B     		ldr	r3, .L137
 1457 004a D318     		adds	r3, r2, r3
 1458 004c 1B68     		ldr	r3, [r3]
 1459 004e 9F46     		mov	pc, r3
 1460              		.section	.rodata
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 41


 1461              		.align	2
 1462              	.L125:
 1463 0008 50000000 		.word	.L124
 1464 000c 50000000 		.word	.L124
 1465 0010 50000000 		.word	.L124
 1466 0014 C2000000 		.word	.L126
 1467 0018 D6000000 		.word	.L127
 1468 001c 12010000 		.word	.L128
 1469 0020 50000000 		.word	.L124
 1470 0024 50000000 		.word	.L124
 1471 0028 C2000000 		.word	.L126
 1472 002c D6000000 		.word	.L127
 1473              		.section	.text.prvProcessReceivedCommands
 1474              	.L124:
 803:..\FreeRTOS\Source/timers.c ****                 {
 804:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_START:
 805:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_START_FROM_ISR:
 806:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_RESET:
 807:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_RESET_FROM_ISR:
 808:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_START_DONT_TRACE:
 809:..\FreeRTOS\Source/timers.c ****                         /* Start or restart a timer. */
 810:..\FreeRTOS\Source/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1475              		.loc 1 810 0
 1476 0050 FB69     		ldr	r3, [r7, #28]
 1477 0052 2422     		movs	r2, #36
 1478 0054 9B5C     		ldrb	r3, [r3, r2]
 1479 0056 0122     		movs	r2, #1
 1480 0058 1343     		orrs	r3, r2
 1481 005a D9B2     		uxtb	r1, r3
 1482 005c FB69     		ldr	r3, [r7, #28]
 1483 005e 2422     		movs	r2, #36
 1484 0060 9954     		strb	r1, [r3, r2]
 811:..\FreeRTOS\Source/timers.c **** 
 812:..\FreeRTOS\Source/timers.c ****                         if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessa
 1485              		.loc 1 812 0
 1486 0062 0823     		movs	r3, #8
 1487 0064 FB18     		adds	r3, r7, r3
 1488 0066 5A68     		ldr	r2, [r3, #4]
 1489 0068 FB69     		ldr	r3, [r7, #28]
 1490 006a 9B69     		ldr	r3, [r3, #24]
 1491 006c D118     		adds	r1, r2, r3
 1492 006e 0823     		movs	r3, #8
 1493 0070 FB18     		adds	r3, r7, r3
 1494 0072 5B68     		ldr	r3, [r3, #4]
 1495 0074 BA69     		ldr	r2, [r7, #24]
 1496 0076 F869     		ldr	r0, [r7, #28]
 1497 0078 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1498 007c 031E     		subs	r3, r0, #0
 1499 007e 5FD0     		beq	.L121
 813:..\FreeRTOS\Source/timers.c ****                         {
 814:..\FreeRTOS\Source/timers.c ****                             /* The timer expired before it was added to the active
 815:..\FreeRTOS\Source/timers.c ****                              * timer list.  Process it now. */
 816:..\FreeRTOS\Source/timers.c ****                             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1500              		.loc 1 816 0
 1501 0080 FB69     		ldr	r3, [r7, #28]
 1502 0082 1B6A     		ldr	r3, [r3, #32]
 1503 0084 FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 42


 1504 0086 1000     		movs	r0, r2
 1505 0088 9847     		blx	r3
 817:..\FreeRTOS\Source/timers.c ****                             traceTIMER_EXPIRED( pxTimer );
 818:..\FreeRTOS\Source/timers.c **** 
 819:..\FreeRTOS\Source/timers.c ****                             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1506              		.loc 1 819 0
 1507 008a FB69     		ldr	r3, [r7, #28]
 1508 008c 2422     		movs	r2, #36
 1509 008e 9B5C     		ldrb	r3, [r3, r2]
 1510 0090 1A00     		movs	r2, r3
 1511 0092 0423     		movs	r3, #4
 1512 0094 1340     		ands	r3, r2
 1513 0096 53D0     		beq	.L121
 820:..\FreeRTOS\Source/timers.c ****                             {
 821:..\FreeRTOS\Source/timers.c ****                                 xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRAC
 1514              		.loc 1 821 0
 1515 0098 0823     		movs	r3, #8
 1516 009a FB18     		adds	r3, r7, r3
 1517 009c 5A68     		ldr	r2, [r3, #4]
 1518 009e FB69     		ldr	r3, [r7, #28]
 1519 00a0 9B69     		ldr	r3, [r3, #24]
 1520 00a2 D218     		adds	r2, r2, r3
 1521 00a4 F869     		ldr	r0, [r7, #28]
 1522 00a6 0023     		movs	r3, #0
 1523 00a8 0093     		str	r3, [sp]
 1524 00aa 0023     		movs	r3, #0
 1525 00ac 0021     		movs	r1, #0
 1526 00ae FFF7FEFF 		bl	xTimerGenericCommand
 1527 00b2 0300     		movs	r3, r0
 1528 00b4 7B61     		str	r3, [r7, #20]
 822:..\FreeRTOS\Source/timers.c ****                                 configASSERT( xResult );
 1529              		.loc 1 822 0
 1530 00b6 2B4B     		ldr	r3, .L137+4
 1531 00b8 1B88     		ldrh	r3, [r3]
 1532 00ba 002B     		cmp	r3, #0
 1533 00bc 40D1     		bne	.L121
 1534              		.loc 1 822 0 is_stmt 0 discriminator 1
 1535              		.syntax divided
 1536              	@ 822 "..\FreeRTOS\Source\timers.c" 1
 1537 00be 72B6     		 cpsid i 
 1538              	@ 0 "" 2
 1539              		.thumb
 1540              		.syntax unified
 1541              	.L130:
 1542 00c0 FEE7     		b	.L130
 1543              	.L126:
 823:..\FreeRTOS\Source/timers.c ****                                 ( void ) xResult;
 824:..\FreeRTOS\Source/timers.c ****                             }
 825:..\FreeRTOS\Source/timers.c ****                             else
 826:..\FreeRTOS\Source/timers.c ****                             {
 827:..\FreeRTOS\Source/timers.c ****                                 mtCOVERAGE_TEST_MARKER();
 828:..\FreeRTOS\Source/timers.c ****                             }
 829:..\FreeRTOS\Source/timers.c ****                         }
 830:..\FreeRTOS\Source/timers.c ****                         else
 831:..\FreeRTOS\Source/timers.c ****                         {
 832:..\FreeRTOS\Source/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 833:..\FreeRTOS\Source/timers.c ****                         }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 43


 834:..\FreeRTOS\Source/timers.c **** 
 835:..\FreeRTOS\Source/timers.c ****                         break;
 836:..\FreeRTOS\Source/timers.c **** 
 837:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_STOP:
 838:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_STOP_FROM_ISR:
 839:..\FreeRTOS\Source/timers.c ****                         /* The timer has already been removed from the active list. */
 840:..\FreeRTOS\Source/timers.c ****                         pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1544              		.loc 1 840 0 is_stmt 1
 1545 00c2 FB69     		ldr	r3, [r7, #28]
 1546 00c4 2422     		movs	r2, #36
 1547 00c6 9B5C     		ldrb	r3, [r3, r2]
 1548 00c8 0122     		movs	r2, #1
 1549 00ca 9343     		bics	r3, r2
 1550 00cc D9B2     		uxtb	r1, r3
 1551 00ce FB69     		ldr	r3, [r7, #28]
 1552 00d0 2422     		movs	r2, #36
 1553 00d2 9954     		strb	r1, [r3, r2]
 841:..\FreeRTOS\Source/timers.c ****                         break;
 1554              		.loc 1 841 0
 1555 00d4 34E0     		b	.L121
 1556              	.L127:
 842:..\FreeRTOS\Source/timers.c **** 
 843:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD:
 844:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR:
 845:..\FreeRTOS\Source/timers.c ****                         pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 1557              		.loc 1 845 0
 1558 00d6 FB69     		ldr	r3, [r7, #28]
 1559 00d8 2422     		movs	r2, #36
 1560 00da 9B5C     		ldrb	r3, [r3, r2]
 1561 00dc 0122     		movs	r2, #1
 1562 00de 1343     		orrs	r3, r2
 1563 00e0 D9B2     		uxtb	r1, r3
 1564 00e2 FB69     		ldr	r3, [r7, #28]
 1565 00e4 2422     		movs	r2, #36
 1566 00e6 9954     		strb	r1, [r3, r2]
 846:..\FreeRTOS\Source/timers.c ****                         pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1567              		.loc 1 846 0
 1568 00e8 0823     		movs	r3, #8
 1569 00ea FB18     		adds	r3, r7, r3
 1570 00ec 5A68     		ldr	r2, [r3, #4]
 1571 00ee FB69     		ldr	r3, [r7, #28]
 1572 00f0 9A61     		str	r2, [r3, #24]
 847:..\FreeRTOS\Source/timers.c ****                         configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1573              		.loc 1 847 0
 1574 00f2 1C4B     		ldr	r3, .L137+4
 1575 00f4 1B88     		ldrh	r3, [r3]
 1576 00f6 002B     		cmp	r3, #0
 1577 00f8 01D1     		bne	.L131
 1578              		.loc 1 847 0 is_stmt 0 discriminator 1
 1579              		.syntax divided
 1580              	@ 847 "..\FreeRTOS\Source\timers.c" 1
 1581 00fa 72B6     		 cpsid i 
 1582              	@ 0 "" 2
 1583              		.thumb
 1584              		.syntax unified
 1585              	.L132:
 1586              		.loc 1 847 0 discriminator 4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 44


 1587 00fc FEE7     		b	.L132
 1588              	.L131:
 848:..\FreeRTOS\Source/timers.c **** 
 849:..\FreeRTOS\Source/timers.c ****                         /* The new period does not really have a reference, and can
 850:..\FreeRTOS\Source/timers.c ****                          * be longer or shorter than the old one.  The command time is
 851:..\FreeRTOS\Source/timers.c ****                          * therefore set to the current time, and as the period cannot
 852:..\FreeRTOS\Source/timers.c ****                          * be zero the next expiry time can only be in the future,
 853:..\FreeRTOS\Source/timers.c ****                          * meaning (unlike for the xTimerStart() case above) there is
 854:..\FreeRTOS\Source/timers.c ****                          * no fail case that needs to be handled here. */
 855:..\FreeRTOS\Source/timers.c ****                         ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerP
 1589              		.loc 1 855 0 is_stmt 1 discriminator 2
 1590 00fe FB69     		ldr	r3, [r7, #28]
 1591 0100 9A69     		ldr	r2, [r3, #24]
 1592 0102 BB69     		ldr	r3, [r7, #24]
 1593 0104 D118     		adds	r1, r2, r3
 1594 0106 BB69     		ldr	r3, [r7, #24]
 1595 0108 BA69     		ldr	r2, [r7, #24]
 1596 010a F869     		ldr	r0, [r7, #28]
 1597 010c FFF7FEFF 		bl	prvInsertTimerInActiveList
 856:..\FreeRTOS\Source/timers.c ****                         break;
 1598              		.loc 1 856 0 discriminator 2
 1599 0110 16E0     		b	.L121
 1600              	.L128:
 857:..\FreeRTOS\Source/timers.c **** 
 858:..\FreeRTOS\Source/timers.c ****                     case tmrCOMMAND_DELETE:
 859:..\FreeRTOS\Source/timers.c ****                         #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 860:..\FreeRTOS\Source/timers.c ****                             {
 861:..\FreeRTOS\Source/timers.c ****                                 /* The timer has already been removed from the active list,
 862:..\FreeRTOS\Source/timers.c ****                                  * just free up the memory if the memory was dynamically
 863:..\FreeRTOS\Source/timers.c ****                                  * allocated. */
 864:..\FreeRTOS\Source/timers.c ****                                 if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( 
 1601              		.loc 1 864 0
 1602 0112 FB69     		ldr	r3, [r7, #28]
 1603 0114 2422     		movs	r2, #36
 1604 0116 9B5C     		ldrb	r3, [r3, r2]
 1605 0118 1A00     		movs	r2, r3
 1606 011a 0223     		movs	r3, #2
 1607 011c 1340     		ands	r3, r2
 1608 011e 04D1     		bne	.L133
 865:..\FreeRTOS\Source/timers.c ****                                 {
 866:..\FreeRTOS\Source/timers.c ****                                     vPortFree( pxTimer );
 1609              		.loc 1 866 0
 1610 0120 FB69     		ldr	r3, [r7, #28]
 1611 0122 1800     		movs	r0, r3
 1612 0124 FFF7FEFF 		bl	vPortFree
 1613 0128 0AE0     		b	.L121
 1614              	.L133:
 867:..\FreeRTOS\Source/timers.c ****                                 }
 868:..\FreeRTOS\Source/timers.c ****                                 else
 869:..\FreeRTOS\Source/timers.c ****                                 {
 870:..\FreeRTOS\Source/timers.c ****                                     pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 1615              		.loc 1 870 0
 1616 012a FB69     		ldr	r3, [r7, #28]
 1617 012c 2422     		movs	r2, #36
 1618 012e 9B5C     		ldrb	r3, [r3, r2]
 1619 0130 0122     		movs	r2, #1
 1620 0132 9343     		bics	r3, r2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 45


 1621 0134 D9B2     		uxtb	r1, r3
 1622 0136 FB69     		ldr	r3, [r7, #28]
 1623 0138 2422     		movs	r2, #36
 1624 013a 9954     		strb	r1, [r3, r2]
 871:..\FreeRTOS\Source/timers.c ****                                 }
 872:..\FreeRTOS\Source/timers.c ****                             }
 873:..\FreeRTOS\Source/timers.c ****                         #else /* if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) */
 874:..\FreeRTOS\Source/timers.c ****                             {
 875:..\FreeRTOS\Source/timers.c ****                                 /* If dynamic allocation is not enabled, the memory
 876:..\FreeRTOS\Source/timers.c ****                                  * could not have been dynamically allocated. So there is
 877:..\FreeRTOS\Source/timers.c ****                                  * no need to free the memory - just mark the timer as
 878:..\FreeRTOS\Source/timers.c ****                                  * "not active". */
 879:..\FreeRTOS\Source/timers.c ****                                 pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 880:..\FreeRTOS\Source/timers.c ****                             }
 881:..\FreeRTOS\Source/timers.c ****                         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 882:..\FreeRTOS\Source/timers.c ****                         break;
 1625              		.loc 1 882 0
 1626 013c 00E0     		b	.L121
 1627              	.L136:
 883:..\FreeRTOS\Source/timers.c **** 
 884:..\FreeRTOS\Source/timers.c ****                     default:
 885:..\FreeRTOS\Source/timers.c ****                         /* Don't expect to get here. */
 886:..\FreeRTOS\Source/timers.c ****                         break;
 1628              		.loc 1 886 0
 1629 013e C046     		nop
 1630              	.L121:
 750:..\FreeRTOS\Source/timers.c ****         {
 1631              		.loc 1 750 0
 1632 0140 094B     		ldr	r3, .L137+8
 1633 0142 1B68     		ldr	r3, [r3]
 1634 0144 0822     		movs	r2, #8
 1635 0146 B918     		adds	r1, r7, r2
 1636 0148 0022     		movs	r2, #0
 1637 014a 1800     		movs	r0, r3
 1638 014c FFF7FEFF 		bl	xQueueReceive
 1639 0150 031E     		subs	r3, r0, #0
 1640 0152 00D0     		beq	.LCB1371
 1641 0154 58E7     		b	.L135	@long jump
 1642              	.LCB1371:
 887:..\FreeRTOS\Source/timers.c ****                 }
 888:..\FreeRTOS\Source/timers.c ****             }
 889:..\FreeRTOS\Source/timers.c ****         }
 890:..\FreeRTOS\Source/timers.c ****     }
 1643              		.loc 1 890 0
 1644 0156 C046     		nop
 1645 0158 BD46     		mov	sp, r7
 1646 015a 08B0     		add	sp, sp, #32
 1647              		@ sp needed
 1648 015c 80BD     		pop	{r7, pc}
 1649              	.L138:
 1650 015e C046     		.align	2
 1651              	.L137:
 1652 0160 08000000 		.word	.L125
 1653 0164 00000000 		.word	x
 1654 0168 30000000 		.word	xTimerQueue
 1655              		.cfi_endproc
 1656              	.LFE17:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 46


 1657              		.size	prvProcessReceivedCommands, .-prvProcessReceivedCommands
 1658              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 1659              		.align	2
 1660              		.code	16
 1661              		.thumb_func
 1662              		.type	prvSwitchTimerLists, %function
 1663              	prvSwitchTimerLists:
 1664              	.LFB18:
 891:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 892:..\FreeRTOS\Source/timers.c **** 
 893:..\FreeRTOS\Source/timers.c ****     static void prvSwitchTimerLists( void )
 894:..\FreeRTOS\Source/timers.c ****     {
 1665              		.loc 1 894 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 24
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669 0000 80B5     		push	{r7, lr}
 1670              		.cfi_def_cfa_offset 8
 1671              		.cfi_offset 7, -8
 1672              		.cfi_offset 14, -4
 1673 0002 88B0     		sub	sp, sp, #32
 1674              		.cfi_def_cfa_offset 40
 1675 0004 02AF     		add	r7, sp, #8
 1676              		.cfi_def_cfa 7, 32
 895:..\FreeRTOS\Source/timers.c ****         TickType_t xNextExpireTime, xReloadTime;
 896:..\FreeRTOS\Source/timers.c ****         List_t * pxTemp;
 897:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer;
 898:..\FreeRTOS\Source/timers.c ****         BaseType_t xResult;
 899:..\FreeRTOS\Source/timers.c **** 
 900:..\FreeRTOS\Source/timers.c ****         /* The tick count has overflowed.  The timer lists must be switched.
 901:..\FreeRTOS\Source/timers.c ****          * If there are any timers still referenced from the current timer list
 902:..\FreeRTOS\Source/timers.c ****          * then they must have expired and should be processed before the lists
 903:..\FreeRTOS\Source/timers.c ****          * are switched. */
 904:..\FreeRTOS\Source/timers.c ****         while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 1677              		.loc 1 904 0
 1678 0006 42E0     		b	.L140
 1679              	.L143:
 905:..\FreeRTOS\Source/timers.c ****         {
 906:..\FreeRTOS\Source/timers.c ****             xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1680              		.loc 1 906 0
 1681 0008 2A4B     		ldr	r3, .L144
 1682 000a 1B68     		ldr	r3, [r3]
 1683 000c DB68     		ldr	r3, [r3, #12]
 1684 000e 1B68     		ldr	r3, [r3]
 1685 0010 7B61     		str	r3, [r7, #20]
 907:..\FreeRTOS\Source/timers.c **** 
 908:..\FreeRTOS\Source/timers.c ****             /* Remove the timer from the list. */
 909:..\FreeRTOS\Source/timers.c ****             pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e908
 1686              		.loc 1 909 0
 1687 0012 284B     		ldr	r3, .L144
 1688 0014 1B68     		ldr	r3, [r3]
 1689 0016 DB68     		ldr	r3, [r3, #12]
 1690 0018 DB68     		ldr	r3, [r3, #12]
 1691 001a 3B61     		str	r3, [r7, #16]
 910:..\FreeRTOS\Source/timers.c ****             ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1692              		.loc 1 910 0
 1693 001c 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 47


 1694 001e 0433     		adds	r3, r3, #4
 1695 0020 1800     		movs	r0, r3
 1696 0022 FFF7FEFF 		bl	uxListRemove
 911:..\FreeRTOS\Source/timers.c ****             traceTIMER_EXPIRED( pxTimer );
 912:..\FreeRTOS\Source/timers.c **** 
 913:..\FreeRTOS\Source/timers.c ****             /* Execute its callback, then send a command to restart the timer if
 914:..\FreeRTOS\Source/timers.c ****              * it is an auto-reload timer.  It cannot be restarted here as the lists
 915:..\FreeRTOS\Source/timers.c ****              * have not yet been switched. */
 916:..\FreeRTOS\Source/timers.c ****             pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1697              		.loc 1 916 0
 1698 0026 3B69     		ldr	r3, [r7, #16]
 1699 0028 1B6A     		ldr	r3, [r3, #32]
 1700 002a 3A69     		ldr	r2, [r7, #16]
 1701 002c 1000     		movs	r0, r2
 1702 002e 9847     		blx	r3
 917:..\FreeRTOS\Source/timers.c **** 
 918:..\FreeRTOS\Source/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 1703              		.loc 1 918 0
 1704 0030 3B69     		ldr	r3, [r7, #16]
 1705 0032 2422     		movs	r2, #36
 1706 0034 9B5C     		ldrb	r3, [r3, r2]
 1707 0036 1A00     		movs	r2, r3
 1708 0038 0423     		movs	r3, #4
 1709 003a 1340     		ands	r3, r2
 1710 003c 27D0     		beq	.L140
 919:..\FreeRTOS\Source/timers.c ****             {
 920:..\FreeRTOS\Source/timers.c ****                 /* Calculate the reload value, and if the reload value results in
 921:..\FreeRTOS\Source/timers.c ****                  * the timer going into the same timer list then it has already expired
 922:..\FreeRTOS\Source/timers.c ****                  * and the timer should be re-inserted into the current list so it is
 923:..\FreeRTOS\Source/timers.c ****                  * processed again within this loop.  Otherwise a command should be sent
 924:..\FreeRTOS\Source/timers.c ****                  * to restart the timer to ensure it is only inserted into a list after
 925:..\FreeRTOS\Source/timers.c ****                  * the lists have been swapped. */
 926:..\FreeRTOS\Source/timers.c ****                 xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 1711              		.loc 1 926 0
 1712 003e 3B69     		ldr	r3, [r7, #16]
 1713 0040 9A69     		ldr	r2, [r3, #24]
 1714 0042 7B69     		ldr	r3, [r7, #20]
 1715 0044 D318     		adds	r3, r2, r3
 1716 0046 FB60     		str	r3, [r7, #12]
 927:..\FreeRTOS\Source/timers.c **** 
 928:..\FreeRTOS\Source/timers.c ****                 if( xReloadTime > xNextExpireTime )
 1717              		.loc 1 928 0
 1718 0048 FA68     		ldr	r2, [r7, #12]
 1719 004a 7B69     		ldr	r3, [r7, #20]
 1720 004c 9A42     		cmp	r2, r3
 1721 004e 0ED9     		bls	.L141
 929:..\FreeRTOS\Source/timers.c ****                 {
 930:..\FreeRTOS\Source/timers.c ****                     listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 1722              		.loc 1 930 0
 1723 0050 3B69     		ldr	r3, [r7, #16]
 1724 0052 FA68     		ldr	r2, [r7, #12]
 1725 0054 5A60     		str	r2, [r3, #4]
 931:..\FreeRTOS\Source/timers.c ****                     listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1726              		.loc 1 931 0
 1727 0056 3B69     		ldr	r3, [r7, #16]
 1728 0058 3A69     		ldr	r2, [r7, #16]
 1729 005a 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 48


 932:..\FreeRTOS\Source/timers.c ****                     vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1730              		.loc 1 932 0
 1731 005c 154B     		ldr	r3, .L144
 1732 005e 1A68     		ldr	r2, [r3]
 1733 0060 3B69     		ldr	r3, [r7, #16]
 1734 0062 0433     		adds	r3, r3, #4
 1735 0064 1900     		movs	r1, r3
 1736 0066 1000     		movs	r0, r2
 1737 0068 FFF7FEFF 		bl	vListInsert
 1738 006c 0FE0     		b	.L140
 1739              	.L141:
 933:..\FreeRTOS\Source/timers.c ****                 }
 934:..\FreeRTOS\Source/timers.c ****                 else
 935:..\FreeRTOS\Source/timers.c ****                 {
 936:..\FreeRTOS\Source/timers.c ****                     xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpi
 1740              		.loc 1 936 0
 1741 006e 7A69     		ldr	r2, [r7, #20]
 1742 0070 3869     		ldr	r0, [r7, #16]
 1743 0072 0023     		movs	r3, #0
 1744 0074 0093     		str	r3, [sp]
 1745 0076 0023     		movs	r3, #0
 1746 0078 0021     		movs	r1, #0
 1747 007a FFF7FEFF 		bl	xTimerGenericCommand
 1748 007e 0300     		movs	r3, r0
 1749 0080 BB60     		str	r3, [r7, #8]
 937:..\FreeRTOS\Source/timers.c ****                     configASSERT( xResult );
 1750              		.loc 1 937 0
 1751 0082 0D4B     		ldr	r3, .L144+4
 1752 0084 1B88     		ldrh	r3, [r3]
 1753 0086 002B     		cmp	r3, #0
 1754 0088 01D1     		bne	.L140
 1755              		.loc 1 937 0 is_stmt 0 discriminator 1
 1756              		.syntax divided
 1757              	@ 937 "..\FreeRTOS\Source\timers.c" 1
 1758 008a 72B6     		 cpsid i 
 1759              	@ 0 "" 2
 1760              		.thumb
 1761              		.syntax unified
 1762              	.L142:
 1763 008c FEE7     		b	.L142
 1764              	.L140:
 904:..\FreeRTOS\Source/timers.c ****         {
 1765              		.loc 1 904 0 is_stmt 1
 1766 008e 094B     		ldr	r3, .L144
 1767 0090 1B68     		ldr	r3, [r3]
 1768 0092 1B68     		ldr	r3, [r3]
 1769 0094 002B     		cmp	r3, #0
 1770 0096 B7D1     		bne	.L143
 938:..\FreeRTOS\Source/timers.c ****                     ( void ) xResult;
 939:..\FreeRTOS\Source/timers.c ****                 }
 940:..\FreeRTOS\Source/timers.c ****             }
 941:..\FreeRTOS\Source/timers.c ****             else
 942:..\FreeRTOS\Source/timers.c ****             {
 943:..\FreeRTOS\Source/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 944:..\FreeRTOS\Source/timers.c ****             }
 945:..\FreeRTOS\Source/timers.c ****         }
 946:..\FreeRTOS\Source/timers.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 49


 947:..\FreeRTOS\Source/timers.c ****         pxTemp = pxCurrentTimerList;
 1771              		.loc 1 947 0
 1772 0098 064B     		ldr	r3, .L144
 1773 009a 1B68     		ldr	r3, [r3]
 1774 009c 7B60     		str	r3, [r7, #4]
 948:..\FreeRTOS\Source/timers.c ****         pxCurrentTimerList = pxOverflowTimerList;
 1775              		.loc 1 948 0
 1776 009e 074B     		ldr	r3, .L144+8
 1777 00a0 1A68     		ldr	r2, [r3]
 1778 00a2 044B     		ldr	r3, .L144
 1779 00a4 1A60     		str	r2, [r3]
 949:..\FreeRTOS\Source/timers.c ****         pxOverflowTimerList = pxTemp;
 1780              		.loc 1 949 0
 1781 00a6 054B     		ldr	r3, .L144+8
 1782 00a8 7A68     		ldr	r2, [r7, #4]
 1783 00aa 1A60     		str	r2, [r3]
 950:..\FreeRTOS\Source/timers.c ****     }
 1784              		.loc 1 950 0
 1785 00ac C046     		nop
 1786 00ae BD46     		mov	sp, r7
 1787 00b0 06B0     		add	sp, sp, #24
 1788              		@ sp needed
 1789 00b2 80BD     		pop	{r7, pc}
 1790              	.L145:
 1791              		.align	2
 1792              	.L144:
 1793 00b4 28000000 		.word	pxCurrentTimerList
 1794 00b8 00000000 		.word	x
 1795 00bc 2C000000 		.word	pxOverflowTimerList
 1796              		.cfi_endproc
 1797              	.LFE18:
 1798              		.size	prvSwitchTimerLists, .-prvSwitchTimerLists
 1799              		.section	.rodata
 1800              		.align	2
 1801              	.LC38:
 1802 0030 546D7251 		.ascii	"TmrQ\000"
 1802      00
 1803              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 1804              		.align	2
 1805              		.code	16
 1806              		.thumb_func
 1807              		.type	prvCheckForValidListAndQueue, %function
 1808              	prvCheckForValidListAndQueue:
 1809              	.LFB19:
 951:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
 952:..\FreeRTOS\Source/timers.c **** 
 953:..\FreeRTOS\Source/timers.c ****     static void prvCheckForValidListAndQueue( void )
 954:..\FreeRTOS\Source/timers.c ****     {
 1810              		.loc 1 954 0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 1, uses_anonymous_args = 0
 1814 0000 80B5     		push	{r7, lr}
 1815              		.cfi_def_cfa_offset 8
 1816              		.cfi_offset 7, -8
 1817              		.cfi_offset 14, -4
 1818 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 50


 1819              		.cfi_def_cfa_offset 16
 1820 0004 02AF     		add	r7, sp, #8
 1821              		.cfi_def_cfa 7, 8
 955:..\FreeRTOS\Source/timers.c ****         /* Check that the list from which active timers are referenced, and the
 956:..\FreeRTOS\Source/timers.c ****          * queue used to communicate with the timer service, have been
 957:..\FreeRTOS\Source/timers.c ****          * initialised. */
 958:..\FreeRTOS\Source/timers.c ****         taskENTER_CRITICAL();
 1822              		.loc 1 958 0
 1823 0006 FFF7FEFF 		bl	vPortEnterCritical
 959:..\FreeRTOS\Source/timers.c ****         {
 960:..\FreeRTOS\Source/timers.c ****             if( xTimerQueue == NULL )
 1824              		.loc 1 960 0
 1825 000a 174B     		ldr	r3, .L148
 1826 000c 1B68     		ldr	r3, [r3]
 1827 000e 002B     		cmp	r3, #0
 1828 0010 24D1     		bne	.L147
 961:..\FreeRTOS\Source/timers.c ****             {
 962:..\FreeRTOS\Source/timers.c ****                 vListInitialise( &xActiveTimerList1 );
 1829              		.loc 1 962 0
 1830 0012 164B     		ldr	r3, .L148+4
 1831 0014 1800     		movs	r0, r3
 1832 0016 FFF7FEFF 		bl	vListInitialise
 963:..\FreeRTOS\Source/timers.c ****                 vListInitialise( &xActiveTimerList2 );
 1833              		.loc 1 963 0
 1834 001a 154B     		ldr	r3, .L148+8
 1835 001c 1800     		movs	r0, r3
 1836 001e FFF7FEFF 		bl	vListInitialise
 964:..\FreeRTOS\Source/timers.c ****                 pxCurrentTimerList = &xActiveTimerList1;
 1837              		.loc 1 964 0
 1838 0022 144B     		ldr	r3, .L148+12
 1839 0024 114A     		ldr	r2, .L148+4
 1840 0026 1A60     		str	r2, [r3]
 965:..\FreeRTOS\Source/timers.c ****                 pxOverflowTimerList = &xActiveTimerList2;
 1841              		.loc 1 965 0
 1842 0028 134B     		ldr	r3, .L148+16
 1843 002a 114A     		ldr	r2, .L148+8
 1844 002c 1A60     		str	r2, [r3]
 1845              	.LBB4:
 966:..\FreeRTOS\Source/timers.c **** 
 967:..\FreeRTOS\Source/timers.c ****                 #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 968:..\FreeRTOS\Source/timers.c ****                     {
 969:..\FreeRTOS\Source/timers.c ****                         /* The timer queue is allocated statically in case
 970:..\FreeRTOS\Source/timers.c ****                          * configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 971:..\FreeRTOS\Source/timers.c ****                         PRIVILEGED_DATA static StaticQueue_t xStaticTimerQueue;                    
 972:..\FreeRTOS\Source/timers.c ****                         PRIVILEGED_DATA static uint8_t ucStaticTimerQueueStorage[ ( size_t ) config
 973:..\FreeRTOS\Source/timers.c **** 
 974:..\FreeRTOS\Source/timers.c ****                         xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH,
 1846              		.loc 1 974 0
 1847 002e 1349     		ldr	r1, .L148+20
 1848 0030 134A     		ldr	r2, .L148+24
 1849 0032 0023     		movs	r3, #0
 1850 0034 0093     		str	r3, [sp]
 1851 0036 0B00     		movs	r3, r1
 1852 0038 0C21     		movs	r1, #12
 1853 003a 0A20     		movs	r0, #10
 1854 003c FFF7FEFF 		bl	xQueueGenericCreateStatic
 1855 0040 0200     		movs	r2, r0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 51


 1856 0042 094B     		ldr	r3, .L148
 1857 0044 1A60     		str	r2, [r3]
 1858              	.LBE4:
 975:..\FreeRTOS\Source/timers.c ****                     }
 976:..\FreeRTOS\Source/timers.c ****                 #else
 977:..\FreeRTOS\Source/timers.c ****                     {
 978:..\FreeRTOS\Source/timers.c ****                         xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeo
 979:..\FreeRTOS\Source/timers.c ****                     }
 980:..\FreeRTOS\Source/timers.c ****                 #endif /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 981:..\FreeRTOS\Source/timers.c **** 
 982:..\FreeRTOS\Source/timers.c ****                 #if ( configQUEUE_REGISTRY_SIZE > 0 )
 983:..\FreeRTOS\Source/timers.c ****                     {
 984:..\FreeRTOS\Source/timers.c ****                         if( xTimerQueue != NULL )
 1859              		.loc 1 984 0
 1860 0046 084B     		ldr	r3, .L148
 1861 0048 1B68     		ldr	r3, [r3]
 1862 004a 002B     		cmp	r3, #0
 1863 004c 06D0     		beq	.L147
 985:..\FreeRTOS\Source/timers.c ****                         {
 986:..\FreeRTOS\Source/timers.c ****                             vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 1864              		.loc 1 986 0
 1865 004e 064B     		ldr	r3, .L148
 1866 0050 1B68     		ldr	r3, [r3]
 1867 0052 0C4A     		ldr	r2, .L148+28
 1868 0054 1100     		movs	r1, r2
 1869 0056 1800     		movs	r0, r3
 1870 0058 FFF7FEFF 		bl	vQueueAddToRegistry
 1871              	.L147:
 987:..\FreeRTOS\Source/timers.c ****                         }
 988:..\FreeRTOS\Source/timers.c ****                         else
 989:..\FreeRTOS\Source/timers.c ****                         {
 990:..\FreeRTOS\Source/timers.c ****                             mtCOVERAGE_TEST_MARKER();
 991:..\FreeRTOS\Source/timers.c ****                         }
 992:..\FreeRTOS\Source/timers.c ****                     }
 993:..\FreeRTOS\Source/timers.c ****                 #endif /* configQUEUE_REGISTRY_SIZE */
 994:..\FreeRTOS\Source/timers.c ****             }
 995:..\FreeRTOS\Source/timers.c ****             else
 996:..\FreeRTOS\Source/timers.c ****             {
 997:..\FreeRTOS\Source/timers.c ****                 mtCOVERAGE_TEST_MARKER();
 998:..\FreeRTOS\Source/timers.c ****             }
 999:..\FreeRTOS\Source/timers.c ****         }
1000:..\FreeRTOS\Source/timers.c ****         taskEXIT_CRITICAL();
 1872              		.loc 1 1000 0
 1873 005c FFF7FEFF 		bl	vPortExitCritical
1001:..\FreeRTOS\Source/timers.c ****     }
 1874              		.loc 1 1001 0
 1875 0060 C046     		nop
 1876 0062 BD46     		mov	sp, r7
 1877              		@ sp needed
 1878 0064 80BD     		pop	{r7, pc}
 1879              	.L149:
 1880 0066 C046     		.align	2
 1881              	.L148:
 1882 0068 30000000 		.word	xTimerQueue
 1883 006c 00000000 		.word	xActiveTimerList1
 1884 0070 14000000 		.word	xActiveTimerList2
 1885 0074 28000000 		.word	pxCurrentTimerList
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 52


 1886 0078 2C000000 		.word	pxOverflowTimerList
 1887 007c B4000000 		.word	xStaticTimerQueue.5581
 1888 0080 3C000000 		.word	ucStaticTimerQueueStorage.5582
 1889 0084 30000000 		.word	.LC38
 1890              		.cfi_endproc
 1891              	.LFE19:
 1892              		.size	prvCheckForValidListAndQueue, .-prvCheckForValidListAndQueue
 1893              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1894              		.align	2
 1895              		.global	xTimerIsTimerActive
 1896              		.code	16
 1897              		.thumb_func
 1898              		.type	xTimerIsTimerActive, %function
 1899              	xTimerIsTimerActive:
 1900              	.LFB20:
1002:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
1003:..\FreeRTOS\Source/timers.c **** 
1004:..\FreeRTOS\Source/timers.c ****     BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
1005:..\FreeRTOS\Source/timers.c ****     {
 1901              		.loc 1 1005 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 16
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905 0000 80B5     		push	{r7, lr}
 1906              		.cfi_def_cfa_offset 8
 1907              		.cfi_offset 7, -8
 1908              		.cfi_offset 14, -4
 1909 0002 84B0     		sub	sp, sp, #16
 1910              		.cfi_def_cfa_offset 24
 1911 0004 00AF     		add	r7, sp, #0
 1912              		.cfi_def_cfa_register 7
 1913 0006 7860     		str	r0, [r7, #4]
1006:..\FreeRTOS\Source/timers.c ****         BaseType_t xReturn;
1007:..\FreeRTOS\Source/timers.c ****         Timer_t * pxTimer = xTimer;
 1914              		.loc 1 1007 0
 1915 0008 7B68     		ldr	r3, [r7, #4]
 1916 000a BB60     		str	r3, [r7, #8]
1008:..\FreeRTOS\Source/timers.c **** 
1009:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 1917              		.loc 1 1009 0
 1918 000c 0D4B     		ldr	r3, .L156
 1919 000e 1B88     		ldrh	r3, [r3]
 1920 0010 002B     		cmp	r3, #0
 1921 0012 01D1     		bne	.L151
 1922              		.loc 1 1009 0 is_stmt 0 discriminator 1
 1923              		.syntax divided
 1924              	@ 1009 "..\FreeRTOS\Source\timers.c" 1
 1925 0014 72B6     		 cpsid i 
 1926              	@ 0 "" 2
 1927              		.thumb
 1928              		.syntax unified
 1929              	.L152:
 1930 0016 FEE7     		b	.L152
 1931              	.L151:
1010:..\FreeRTOS\Source/timers.c **** 
1011:..\FreeRTOS\Source/timers.c ****         /* Is the timer in the list of active timers? */
1012:..\FreeRTOS\Source/timers.c ****         taskENTER_CRITICAL();
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 53


 1932              		.loc 1 1012 0 is_stmt 1
 1933 0018 FFF7FEFF 		bl	vPortEnterCritical
1013:..\FreeRTOS\Source/timers.c ****         {
1014:..\FreeRTOS\Source/timers.c ****             if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1934              		.loc 1 1014 0
 1935 001c BB68     		ldr	r3, [r7, #8]
 1936 001e 2422     		movs	r2, #36
 1937 0020 9B5C     		ldrb	r3, [r3, r2]
 1938 0022 1A00     		movs	r2, r3
 1939 0024 0123     		movs	r3, #1
 1940 0026 1340     		ands	r3, r2
 1941 0028 02D1     		bne	.L153
1015:..\FreeRTOS\Source/timers.c ****             {
1016:..\FreeRTOS\Source/timers.c ****                 xReturn = pdFALSE;
 1942              		.loc 1 1016 0
 1943 002a 0023     		movs	r3, #0
 1944 002c FB60     		str	r3, [r7, #12]
 1945 002e 01E0     		b	.L154
 1946              	.L153:
1017:..\FreeRTOS\Source/timers.c ****             }
1018:..\FreeRTOS\Source/timers.c ****             else
1019:..\FreeRTOS\Source/timers.c ****             {
1020:..\FreeRTOS\Source/timers.c ****                 xReturn = pdTRUE;
 1947              		.loc 1 1020 0
 1948 0030 0123     		movs	r3, #1
 1949 0032 FB60     		str	r3, [r7, #12]
 1950              	.L154:
1021:..\FreeRTOS\Source/timers.c ****             }
1022:..\FreeRTOS\Source/timers.c ****         }
1023:..\FreeRTOS\Source/timers.c ****         taskEXIT_CRITICAL();
 1951              		.loc 1 1023 0
 1952 0034 FFF7FEFF 		bl	vPortExitCritical
1024:..\FreeRTOS\Source/timers.c **** 
1025:..\FreeRTOS\Source/timers.c ****         return xReturn;
 1953              		.loc 1 1025 0
 1954 0038 FB68     		ldr	r3, [r7, #12]
1026:..\FreeRTOS\Source/timers.c ****     } /*lint !e818 Can't be pointer to const due to the typedef. */
 1955              		.loc 1 1026 0
 1956 003a 1800     		movs	r0, r3
 1957 003c BD46     		mov	sp, r7
 1958 003e 04B0     		add	sp, sp, #16
 1959              		@ sp needed
 1960 0040 80BD     		pop	{r7, pc}
 1961              	.L157:
 1962 0042 C046     		.align	2
 1963              	.L156:
 1964 0044 00000000 		.word	x
 1965              		.cfi_endproc
 1966              	.LFE20:
 1967              		.size	xTimerIsTimerActive, .-xTimerIsTimerActive
 1968              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1969              		.align	2
 1970              		.global	pvTimerGetTimerID
 1971              		.code	16
 1972              		.thumb_func
 1973              		.type	pvTimerGetTimerID, %function
 1974              	pvTimerGetTimerID:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 54


 1975              	.LFB21:
1027:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
1028:..\FreeRTOS\Source/timers.c **** 
1029:..\FreeRTOS\Source/timers.c ****     void * pvTimerGetTimerID( const TimerHandle_t xTimer )
1030:..\FreeRTOS\Source/timers.c ****     {
 1976              		.loc 1 1030 0
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 16
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980 0000 80B5     		push	{r7, lr}
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 7, -8
 1983              		.cfi_offset 14, -4
 1984 0002 84B0     		sub	sp, sp, #16
 1985              		.cfi_def_cfa_offset 24
 1986 0004 00AF     		add	r7, sp, #0
 1987              		.cfi_def_cfa_register 7
 1988 0006 7860     		str	r0, [r7, #4]
1031:..\FreeRTOS\Source/timers.c ****         Timer_t * const pxTimer = xTimer;
 1989              		.loc 1 1031 0
 1990 0008 7B68     		ldr	r3, [r7, #4]
 1991 000a FB60     		str	r3, [r7, #12]
1032:..\FreeRTOS\Source/timers.c ****         void * pvReturn;
1033:..\FreeRTOS\Source/timers.c **** 
1034:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 1992              		.loc 1 1034 0
 1993 000c 084B     		ldr	r3, .L162
 1994 000e 1B88     		ldrh	r3, [r3]
 1995 0010 002B     		cmp	r3, #0
 1996 0012 01D1     		bne	.L159
 1997              		.loc 1 1034 0 is_stmt 0 discriminator 1
 1998              		.syntax divided
 1999              	@ 1034 "..\FreeRTOS\Source\timers.c" 1
 2000 0014 72B6     		 cpsid i 
 2001              	@ 0 "" 2
 2002              		.thumb
 2003              		.syntax unified
 2004              	.L160:
 2005 0016 FEE7     		b	.L160
 2006              	.L159:
1035:..\FreeRTOS\Source/timers.c **** 
1036:..\FreeRTOS\Source/timers.c ****         taskENTER_CRITICAL();
 2007              		.loc 1 1036 0 is_stmt 1
 2008 0018 FFF7FEFF 		bl	vPortEnterCritical
1037:..\FreeRTOS\Source/timers.c ****         {
1038:..\FreeRTOS\Source/timers.c ****             pvReturn = pxTimer->pvTimerID;
 2009              		.loc 1 1038 0
 2010 001c FB68     		ldr	r3, [r7, #12]
 2011 001e DB69     		ldr	r3, [r3, #28]
 2012 0020 BB60     		str	r3, [r7, #8]
1039:..\FreeRTOS\Source/timers.c ****         }
1040:..\FreeRTOS\Source/timers.c ****         taskEXIT_CRITICAL();
 2013              		.loc 1 1040 0
 2014 0022 FFF7FEFF 		bl	vPortExitCritical
1041:..\FreeRTOS\Source/timers.c **** 
1042:..\FreeRTOS\Source/timers.c ****         return pvReturn;
 2015              		.loc 1 1042 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 55


 2016 0026 BB68     		ldr	r3, [r7, #8]
1043:..\FreeRTOS\Source/timers.c ****     }
 2017              		.loc 1 1043 0
 2018 0028 1800     		movs	r0, r3
 2019 002a BD46     		mov	sp, r7
 2020 002c 04B0     		add	sp, sp, #16
 2021              		@ sp needed
 2022 002e 80BD     		pop	{r7, pc}
 2023              	.L163:
 2024              		.align	2
 2025              	.L162:
 2026 0030 00000000 		.word	x
 2027              		.cfi_endproc
 2028              	.LFE21:
 2029              		.size	pvTimerGetTimerID, .-pvTimerGetTimerID
 2030              		.section	.text.vTimerSetTimerID,"ax",%progbits
 2031              		.align	2
 2032              		.global	vTimerSetTimerID
 2033              		.code	16
 2034              		.thumb_func
 2035              		.type	vTimerSetTimerID, %function
 2036              	vTimerSetTimerID:
 2037              	.LFB22:
1044:..\FreeRTOS\Source/timers.c **** /*-----------------------------------------------------------*/
1045:..\FreeRTOS\Source/timers.c **** 
1046:..\FreeRTOS\Source/timers.c ****     void vTimerSetTimerID( TimerHandle_t xTimer,
1047:..\FreeRTOS\Source/timers.c ****                            void * pvNewID )
1048:..\FreeRTOS\Source/timers.c ****     {
 2038              		.loc 1 1048 0
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 16
 2041              		@ frame_needed = 1, uses_anonymous_args = 0
 2042 0000 80B5     		push	{r7, lr}
 2043              		.cfi_def_cfa_offset 8
 2044              		.cfi_offset 7, -8
 2045              		.cfi_offset 14, -4
 2046 0002 84B0     		sub	sp, sp, #16
 2047              		.cfi_def_cfa_offset 24
 2048 0004 00AF     		add	r7, sp, #0
 2049              		.cfi_def_cfa_register 7
 2050 0006 7860     		str	r0, [r7, #4]
 2051 0008 3960     		str	r1, [r7]
1049:..\FreeRTOS\Source/timers.c ****         Timer_t * const pxTimer = xTimer;
 2052              		.loc 1 1049 0
 2053 000a 7B68     		ldr	r3, [r7, #4]
 2054 000c FB60     		str	r3, [r7, #12]
1050:..\FreeRTOS\Source/timers.c **** 
1051:..\FreeRTOS\Source/timers.c ****         configASSERT( xTimer );
 2055              		.loc 1 1051 0
 2056 000e 084B     		ldr	r3, .L167
 2057 0010 1B88     		ldrh	r3, [r3]
 2058 0012 002B     		cmp	r3, #0
 2059 0014 01D1     		bne	.L165
 2060              		.loc 1 1051 0 is_stmt 0 discriminator 1
 2061              		.syntax divided
 2062              	@ 1051 "..\FreeRTOS\Source\timers.c" 1
 2063 0016 72B6     		 cpsid i 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 56


 2064              	@ 0 "" 2
 2065              		.thumb
 2066              		.syntax unified
 2067              	.L166:
 2068 0018 FEE7     		b	.L166
 2069              	.L165:
1052:..\FreeRTOS\Source/timers.c **** 
1053:..\FreeRTOS\Source/timers.c ****         taskENTER_CRITICAL();
 2070              		.loc 1 1053 0 is_stmt 1
 2071 001a FFF7FEFF 		bl	vPortEnterCritical
1054:..\FreeRTOS\Source/timers.c ****         {
1055:..\FreeRTOS\Source/timers.c ****             pxTimer->pvTimerID = pvNewID;
 2072              		.loc 1 1055 0
 2073 001e FB68     		ldr	r3, [r7, #12]
 2074 0020 3A68     		ldr	r2, [r7]
 2075 0022 DA61     		str	r2, [r3, #28]
1056:..\FreeRTOS\Source/timers.c ****         }
1057:..\FreeRTOS\Source/timers.c ****         taskEXIT_CRITICAL();
 2076              		.loc 1 1057 0
 2077 0024 FFF7FEFF 		bl	vPortExitCritical
1058:..\FreeRTOS\Source/timers.c ****     }
 2078              		.loc 1 1058 0
 2079 0028 C046     		nop
 2080 002a BD46     		mov	sp, r7
 2081 002c 04B0     		add	sp, sp, #16
 2082              		@ sp needed
 2083 002e 80BD     		pop	{r7, pc}
 2084              	.L168:
 2085              		.align	2
 2086              	.L167:
 2087 0030 00000000 		.word	x
 2088              		.cfi_endproc
 2089              	.LFE22:
 2090              		.size	vTimerSetTimerID, .-vTimerSetTimerID
 2091              		.bss
 2092              		.align	2
 2093              	xLastTime.5533:
 2094 0038 00000000 		.space	4
 2095              		.align	2
 2096              	ucStaticTimerQueueStorage.5582:
 2097 003c 00000000 		.space	120
 2097      00000000 
 2097      00000000 
 2097      00000000 
 2097      00000000 
 2098              		.align	2
 2099              	xStaticTimerQueue.5581:
 2100 00b4 00000000 		.space	72
 2100      00000000 
 2100      00000000 
 2100      00000000 
 2100      00000000 
 2101              		.text
 2102              	.Letext0:
 2103              		.file 2 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2104              		.file 3 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2105              		.file 4 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 57


 2106              		.file 5 "..\\FreeRTOS\\Source\\include/projdefs.h"
 2107              		.file 6 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM0/portmacro.h"
 2108              		.file 7 "..\\FreeRTOS\\Source\\include/FreeRTOS.h"
 2109              		.file 8 "..\\FreeRTOS\\Source\\include/list.h"
 2110              		.file 9 "..\\FreeRTOS\\Source\\include/task.h"
 2111              		.file 10 "..\\FreeRTOS\\Source\\include/queue.h"
 2112              		.file 11 "..\\FreeRTOS\\Source\\include/timers.h"
 2113              		.file 12 "./FreeRTOSConfig.h"
 2114              		.section	.debug_info,"",%progbits
 2115              	.Ldebug_info0:
 2116 0000 560E0000 		.4byte	0xe56
 2117 0004 0400     		.2byte	0x4
 2118 0006 00000000 		.4byte	.Ldebug_abbrev0
 2119 000a 04       		.byte	0x4
 2120 000b 01       		.uleb128 0x1
 2121 000c 7F010000 		.4byte	.LASF155
 2122 0010 0C       		.byte	0xc
 2123 0011 51070000 		.4byte	.LASF156
 2124 0015 0B010000 		.4byte	.LASF157
 2125 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2126 001d 00000000 		.4byte	0
 2127 0021 00000000 		.4byte	.Ldebug_line0
 2128 0025 02       		.uleb128 0x2
 2129 0026 E8030000 		.4byte	.LASF4
 2130 002a 02       		.byte	0x2
 2131 002b D8       		.byte	0xd8
 2132 002c 30000000 		.4byte	0x30
 2133 0030 03       		.uleb128 0x3
 2134 0031 04       		.byte	0x4
 2135 0032 07       		.byte	0x7
 2136 0033 D3000000 		.4byte	.LASF0
 2137 0037 04       		.uleb128 0x4
 2138 0038 04       		.byte	0x4
 2139 0039 05       		.byte	0x5
 2140 003a 696E7400 		.ascii	"int\000"
 2141 003e 03       		.uleb128 0x3
 2142 003f 08       		.byte	0x8
 2143 0040 05       		.byte	0x5
 2144 0041 A8050000 		.4byte	.LASF1
 2145 0045 03       		.uleb128 0x3
 2146 0046 08       		.byte	0x8
 2147 0047 04       		.byte	0x4
 2148 0048 52060000 		.4byte	.LASF2
 2149 004c 03       		.uleb128 0x3
 2150 004d 01       		.byte	0x1
 2151 004e 06       		.byte	0x6
 2152 004f 30090000 		.4byte	.LASF3
 2153 0053 02       		.uleb128 0x2
 2154 0054 8C070000 		.4byte	.LASF5
 2155 0058 03       		.byte	0x3
 2156 0059 1D       		.byte	0x1d
 2157 005a 5E000000 		.4byte	0x5e
 2158 005e 03       		.uleb128 0x3
 2159 005f 01       		.byte	0x1
 2160 0060 08       		.byte	0x8
 2161 0061 3B080000 		.4byte	.LASF6
 2162 0065 03       		.uleb128 0x3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 58


 2163 0066 02       		.byte	0x2
 2164 0067 05       		.byte	0x5
 2165 0068 E1060000 		.4byte	.LASF7
 2166 006c 02       		.uleb128 0x2
 2167 006d 8A030000 		.4byte	.LASF8
 2168 0071 03       		.byte	0x3
 2169 0072 2B       		.byte	0x2b
 2170 0073 77000000 		.4byte	0x77
 2171 0077 03       		.uleb128 0x3
 2172 0078 02       		.byte	0x2
 2173 0079 07       		.byte	0x7
 2174 007a 4A090000 		.4byte	.LASF9
 2175 007e 03       		.uleb128 0x3
 2176 007f 04       		.byte	0x4
 2177 0080 05       		.byte	0x5
 2178 0081 2B070000 		.4byte	.LASF10
 2179 0085 02       		.uleb128 0x2
 2180 0086 57080000 		.4byte	.LASF11
 2181 008a 03       		.byte	0x3
 2182 008b 41       		.byte	0x41
 2183 008c 90000000 		.4byte	0x90
 2184 0090 03       		.uleb128 0x3
 2185 0091 04       		.byte	0x4
 2186 0092 07       		.byte	0x7
 2187 0093 F6070000 		.4byte	.LASF12
 2188 0097 03       		.uleb128 0x3
 2189 0098 08       		.byte	0x8
 2190 0099 07       		.byte	0x7
 2191 009a 54030000 		.4byte	.LASF13
 2192 009e 03       		.uleb128 0x3
 2193 009f 04       		.byte	0x4
 2194 00a0 07       		.byte	0x7
 2195 00a1 ED070000 		.4byte	.LASF14
 2196 00a5 05       		.uleb128 0x5
 2197 00a6 04       		.byte	0x4
 2198 00a7 03       		.uleb128 0x3
 2199 00a8 01       		.byte	0x1
 2200 00a9 08       		.byte	0x8
 2201 00aa E3040000 		.4byte	.LASF15
 2202 00ae 06       		.uleb128 0x6
 2203 00af 04       		.byte	0x4
 2204 00b0 B4000000 		.4byte	0xb4
 2205 00b4 07       		.uleb128 0x7
 2206 00b5 A7000000 		.4byte	0xa7
 2207 00b9 02       		.uleb128 0x2
 2208 00ba 57050000 		.4byte	.LASF16
 2209 00be 04       		.byte	0x4
 2210 00bf 18       		.byte	0x18
 2211 00c0 53000000 		.4byte	0x53
 2212 00c4 02       		.uleb128 0x2
 2213 00c5 5E060000 		.4byte	.LASF17
 2214 00c9 04       		.byte	0x4
 2215 00ca 24       		.byte	0x24
 2216 00cb 6C000000 		.4byte	0x6c
 2217 00cf 02       		.uleb128 0x2
 2218 00d0 CF020000 		.4byte	.LASF18
 2219 00d4 04       		.byte	0x4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 59


 2220 00d5 30       		.byte	0x30
 2221 00d6 85000000 		.4byte	0x85
 2222 00da 02       		.uleb128 0x2
 2223 00db E6050000 		.4byte	.LASF19
 2224 00df 05       		.byte	0x5
 2225 00e0 22       		.byte	0x22
 2226 00e1 E5000000 		.4byte	0xe5
 2227 00e5 06       		.uleb128 0x6
 2228 00e6 04       		.byte	0x4
 2229 00e7 EB000000 		.4byte	0xeb
 2230 00eb 08       		.uleb128 0x8
 2231 00ec F6000000 		.4byte	0xf6
 2232 00f0 09       		.uleb128 0x9
 2233 00f1 A5000000 		.4byte	0xa5
 2234 00f5 00       		.byte	0
 2235 00f6 02       		.uleb128 0x2
 2236 00f7 E8000000 		.4byte	.LASF20
 2237 00fb 06       		.byte	0x6
 2238 00fc 37       		.byte	0x37
 2239 00fd CF000000 		.4byte	0xcf
 2240 0101 02       		.uleb128 0x2
 2241 0102 C7050000 		.4byte	.LASF21
 2242 0106 06       		.byte	0x6
 2243 0107 38       		.byte	0x38
 2244 0108 7E000000 		.4byte	0x7e
 2245 010c 02       		.uleb128 0x2
 2246 010d F3040000 		.4byte	.LASF22
 2247 0111 06       		.byte	0x6
 2248 0112 39       		.byte	0x39
 2249 0113 90000000 		.4byte	0x90
 2250 0117 02       		.uleb128 0x2
 2251 0118 1E060000 		.4byte	.LASF23
 2252 011c 06       		.byte	0x6
 2253 011d 3F       		.byte	0x3f
 2254 011e CF000000 		.4byte	0xcf
 2255 0122 0A       		.uleb128 0xa
 2256 0123 D3070000 		.4byte	.LASF27
 2257 0127 14       		.byte	0x14
 2258 0128 07       		.byte	0x7
 2259 0129 5904     		.2byte	0x459
 2260 012b 4A010000 		.4byte	0x14a
 2261 012f 0B       		.uleb128 0xb
 2262 0130 D2080000 		.4byte	.LASF24
 2263 0134 07       		.byte	0x7
 2264 0135 5E04     		.2byte	0x45e
 2265 0137 17010000 		.4byte	0x117
 2266 013b 00       		.byte	0
 2267 013c 0B       		.uleb128 0xb
 2268 013d 69040000 		.4byte	.LASF25
 2269 0141 07       		.byte	0x7
 2270 0142 5F04     		.2byte	0x45f
 2271 0144 4A010000 		.4byte	0x14a
 2272 0148 04       		.byte	0x4
 2273 0149 00       		.byte	0
 2274 014a 0C       		.uleb128 0xc
 2275 014b A5000000 		.4byte	0xa5
 2276 014f 5A010000 		.4byte	0x15a
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 60


 2277 0153 0D       		.uleb128 0xd
 2278 0154 9E000000 		.4byte	0x9e
 2279 0158 03       		.byte	0x3
 2280 0159 00       		.byte	0
 2281 015a 0E       		.uleb128 0xe
 2282 015b FF030000 		.4byte	.LASF26
 2283 015f 07       		.byte	0x7
 2284 0160 6404     		.2byte	0x464
 2285 0162 22010000 		.4byte	0x122
 2286 0166 0A       		.uleb128 0xa
 2287 0167 05090000 		.4byte	.LASF28
 2288 016b 0C       		.byte	0xc
 2289 016c 07       		.byte	0x7
 2290 016d 6704     		.2byte	0x467
 2291 016f 8E010000 		.4byte	0x18e
 2292 0173 0B       		.uleb128 0xb
 2293 0174 D2080000 		.4byte	.LASF24
 2294 0178 07       		.byte	0x7
 2295 0179 6C04     		.2byte	0x46c
 2296 017b 17010000 		.4byte	0x117
 2297 017f 00       		.byte	0
 2298 0180 0B       		.uleb128 0xb
 2299 0181 69040000 		.4byte	.LASF25
 2300 0185 07       		.byte	0x7
 2301 0186 6D04     		.2byte	0x46d
 2302 0188 8E010000 		.4byte	0x18e
 2303 018c 04       		.byte	0x4
 2304 018d 00       		.byte	0
 2305 018e 0C       		.uleb128 0xc
 2306 018f A5000000 		.4byte	0xa5
 2307 0193 9E010000 		.4byte	0x19e
 2308 0197 0D       		.uleb128 0xd
 2309 0198 9E000000 		.4byte	0x9e
 2310 019c 01       		.byte	0x1
 2311 019d 00       		.byte	0
 2312 019e 0E       		.uleb128 0xe
 2313 019f 1A020000 		.4byte	.LASF29
 2314 01a3 07       		.byte	0x7
 2315 01a4 6F04     		.2byte	0x46f
 2316 01a6 66010000 		.4byte	0x166
 2317 01aa 0A       		.uleb128 0xa
 2318 01ab 88050000 		.4byte	.LASF30
 2319 01af 14       		.byte	0x14
 2320 01b0 07       		.byte	0x7
 2321 01b1 7204     		.2byte	0x472
 2322 01b3 DF010000 		.4byte	0x1df
 2323 01b7 0B       		.uleb128 0xb
 2324 01b8 7B040000 		.4byte	.LASF31
 2325 01bc 07       		.byte	0x7
 2326 01bd 7704     		.2byte	0x477
 2327 01bf 0C010000 		.4byte	0x10c
 2328 01c3 00       		.byte	0
 2329 01c4 0B       		.uleb128 0xb
 2330 01c5 69040000 		.4byte	.LASF25
 2331 01c9 07       		.byte	0x7
 2332 01ca 7804     		.2byte	0x478
 2333 01cc A5000000 		.4byte	0xa5
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 61


 2334 01d0 04       		.byte	0x4
 2335 01d1 0B       		.uleb128 0xb
 2336 01d2 E2080000 		.4byte	.LASF32
 2337 01d6 07       		.byte	0x7
 2338 01d7 7904     		.2byte	0x479
 2339 01d9 9E010000 		.4byte	0x19e
 2340 01dd 08       		.byte	0x8
 2341 01de 00       		.byte	0
 2342 01df 0E       		.uleb128 0xe
 2343 01e0 7E090000 		.4byte	.LASF33
 2344 01e4 07       		.byte	0x7
 2345 01e5 7D04     		.2byte	0x47d
 2346 01e7 AA010000 		.4byte	0x1aa
 2347 01eb 0A       		.uleb128 0xa
 2348 01ec 80070000 		.4byte	.LASF34
 2349 01f0 68       		.byte	0x68
 2350 01f1 07       		.byte	0x7
 2351 01f2 8C04     		.2byte	0x48c
 2352 01f4 6E020000 		.4byte	0x26e
 2353 01f8 0B       		.uleb128 0xb
 2354 01f9 95050000 		.4byte	.LASF35
 2355 01fd 07       		.byte	0x7
 2356 01fe 8E04     		.2byte	0x48e
 2357 0200 A5000000 		.4byte	0xa5
 2358 0204 00       		.byte	0
 2359 0205 0B       		.uleb128 0xb
 2360 0206 DA080000 		.4byte	.LASF36
 2361 020a 07       		.byte	0x7
 2362 020b 9204     		.2byte	0x492
 2363 020d 6E020000 		.4byte	0x26e
 2364 0211 04       		.byte	0x4
 2365 0212 0B       		.uleb128 0xb
 2366 0213 8D040000 		.4byte	.LASF37
 2367 0217 07       		.byte	0x7
 2368 0218 9304     		.2byte	0x493
 2369 021a 0C010000 		.4byte	0x10c
 2370 021e 2C       		.byte	0x2c
 2371 021f 0B       		.uleb128 0xb
 2372 0220 B6050000 		.4byte	.LASF38
 2373 0224 07       		.byte	0x7
 2374 0225 9404     		.2byte	0x494
 2375 0227 A5000000 		.4byte	0xa5
 2376 022b 30       		.byte	0x30
 2377 022c 0B       		.uleb128 0xb
 2378 022d 79060000 		.4byte	.LASF39
 2379 0231 07       		.byte	0x7
 2380 0232 9504     		.2byte	0x495
 2381 0234 7E020000 		.4byte	0x27e
 2382 0238 34       		.byte	0x34
 2383 0239 0B       		.uleb128 0xb
 2384 023a C8080000 		.4byte	.LASF40
 2385 023e 07       		.byte	0x7
 2386 023f A604     		.2byte	0x4a6
 2387 0241 8E020000 		.4byte	0x28e
 2388 0245 44       		.byte	0x44
 2389 0246 0B       		.uleb128 0xb
 2390 0247 BD070000 		.4byte	.LASF41
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 62


 2391 024b 07       		.byte	0x7
 2392 024c AF04     		.2byte	0x4af
 2393 024e 9E020000 		.4byte	0x29e
 2394 0252 58       		.byte	0x58
 2395 0253 0B       		.uleb128 0xb
 2396 0254 9E050000 		.4byte	.LASF42
 2397 0258 07       		.byte	0x7
 2398 0259 B004     		.2byte	0x4b0
 2399 025b AE020000 		.4byte	0x2ae
 2400 025f 64       		.byte	0x64
 2401 0260 0B       		.uleb128 0xb
 2402 0261 75010000 		.4byte	.LASF43
 2403 0265 07       		.byte	0x7
 2404 0266 B304     		.2byte	0x4b3
 2405 0268 B9000000 		.4byte	0xb9
 2406 026c 67       		.byte	0x67
 2407 026d 00       		.byte	0
 2408 026e 0C       		.uleb128 0xc
 2409 026f 5A010000 		.4byte	0x15a
 2410 0273 7E020000 		.4byte	0x27e
 2411 0277 0D       		.uleb128 0xd
 2412 0278 9E000000 		.4byte	0x9e
 2413 027c 01       		.byte	0x1
 2414 027d 00       		.byte	0
 2415 027e 0C       		.uleb128 0xc
 2416 027f B9000000 		.4byte	0xb9
 2417 0283 8E020000 		.4byte	0x28e
 2418 0287 0D       		.uleb128 0xd
 2419 0288 9E000000 		.4byte	0x9e
 2420 028c 0F       		.byte	0xf
 2421 028d 00       		.byte	0
 2422 028e 0C       		.uleb128 0xc
 2423 028f A5000000 		.4byte	0xa5
 2424 0293 9E020000 		.4byte	0x29e
 2425 0297 0D       		.uleb128 0xd
 2426 0298 9E000000 		.4byte	0x9e
 2427 029c 04       		.byte	0x4
 2428 029d 00       		.byte	0
 2429 029e 0C       		.uleb128 0xc
 2430 029f CF000000 		.4byte	0xcf
 2431 02a3 AE020000 		.4byte	0x2ae
 2432 02a7 0D       		.uleb128 0xd
 2433 02a8 9E000000 		.4byte	0x9e
 2434 02ac 02       		.byte	0x2
 2435 02ad 00       		.byte	0
 2436 02ae 0C       		.uleb128 0xc
 2437 02af B9000000 		.4byte	0xb9
 2438 02b3 BE020000 		.4byte	0x2be
 2439 02b7 0D       		.uleb128 0xd
 2440 02b8 9E000000 		.4byte	0x9e
 2441 02bc 02       		.byte	0x2
 2442 02bd 00       		.byte	0
 2443 02be 0E       		.uleb128 0xe
 2444 02bf 19000000 		.4byte	.LASF44
 2445 02c3 07       		.byte	0x7
 2446 02c4 BC04     		.2byte	0x4bc
 2447 02c6 EB010000 		.4byte	0x1eb
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 63


 2448 02ca 0F       		.uleb128 0xf
 2449 02cb 04       		.byte	0x4
 2450 02cc 07       		.byte	0x7
 2451 02cd D004     		.2byte	0x4d0
 2452 02cf EC020000 		.4byte	0x2ec
 2453 02d3 10       		.uleb128 0x10
 2454 02d4 60040000 		.4byte	.LASF45
 2455 02d8 07       		.byte	0x7
 2456 02d9 D204     		.2byte	0x4d2
 2457 02db A5000000 		.4byte	0xa5
 2458 02df 10       		.uleb128 0x10
 2459 02e0 7B040000 		.4byte	.LASF31
 2460 02e4 07       		.byte	0x7
 2461 02e5 D304     		.2byte	0x4d3
 2462 02e7 0C010000 		.4byte	0x10c
 2463 02eb 00       		.byte	0
 2464 02ec 0A       		.uleb128 0xa
 2465 02ed 70090000 		.4byte	.LASF46
 2466 02f1 48       		.byte	0x48
 2467 02f2 07       		.byte	0x7
 2468 02f3 CC04     		.2byte	0x4cc
 2469 02f5 46030000 		.4byte	0x346
 2470 02f9 0B       		.uleb128 0xb
 2471 02fa 57040000 		.4byte	.LASF47
 2472 02fe 07       		.byte	0x7
 2473 02ff CE04     		.2byte	0x4ce
 2474 0301 46030000 		.4byte	0x346
 2475 0305 00       		.byte	0
 2476 0306 11       		.uleb128 0x11
 2477 0307 7500     		.ascii	"u\000"
 2478 0309 07       		.byte	0x7
 2479 030a D404     		.2byte	0x4d4
 2480 030c CA020000 		.4byte	0x2ca
 2481 0310 0C       		.byte	0xc
 2482 0311 0B       		.uleb128 0xb
 2483 0312 DA080000 		.4byte	.LASF36
 2484 0316 07       		.byte	0x7
 2485 0317 D604     		.2byte	0x4d6
 2486 0319 56030000 		.4byte	0x356
 2487 031d 10       		.byte	0x10
 2488 031e 0B       		.uleb128 0xb
 2489 031f 84040000 		.4byte	.LASF48
 2490 0323 07       		.byte	0x7
 2491 0324 D704     		.2byte	0x4d7
 2492 0326 66030000 		.4byte	0x366
 2493 032a 38       		.byte	0x38
 2494 032b 0B       		.uleb128 0xb
 2495 032c 67060000 		.4byte	.LASF49
 2496 0330 07       		.byte	0x7
 2497 0331 D804     		.2byte	0x4d8
 2498 0333 76030000 		.4byte	0x376
 2499 0337 44       		.byte	0x44
 2500 0338 0B       		.uleb128 0xb
 2501 0339 70060000 		.4byte	.LASF50
 2502 033d 07       		.byte	0x7
 2503 033e DB04     		.2byte	0x4db
 2504 0340 B9000000 		.4byte	0xb9
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 64


 2505 0344 46       		.byte	0x46
 2506 0345 00       		.byte	0
 2507 0346 0C       		.uleb128 0xc
 2508 0347 A5000000 		.4byte	0xa5
 2509 034b 56030000 		.4byte	0x356
 2510 034f 0D       		.uleb128 0xd
 2511 0350 9E000000 		.4byte	0x9e
 2512 0354 02       		.byte	0x2
 2513 0355 00       		.byte	0
 2514 0356 0C       		.uleb128 0xc
 2515 0357 DF010000 		.4byte	0x1df
 2516 035b 66030000 		.4byte	0x366
 2517 035f 0D       		.uleb128 0xd
 2518 0360 9E000000 		.4byte	0x9e
 2519 0364 01       		.byte	0x1
 2520 0365 00       		.byte	0
 2521 0366 0C       		.uleb128 0xc
 2522 0367 0C010000 		.4byte	0x10c
 2523 036b 76030000 		.4byte	0x376
 2524 036f 0D       		.uleb128 0xd
 2525 0370 9E000000 		.4byte	0x9e
 2526 0374 02       		.byte	0x2
 2527 0375 00       		.byte	0
 2528 0376 0C       		.uleb128 0xc
 2529 0377 B9000000 		.4byte	0xb9
 2530 037b 86030000 		.4byte	0x386
 2531 037f 0D       		.uleb128 0xd
 2532 0380 9E000000 		.4byte	0x9e
 2533 0384 01       		.byte	0x1
 2534 0385 00       		.byte	0
 2535 0386 0E       		.uleb128 0xe
 2536 0387 FC050000 		.4byte	.LASF51
 2537 038b 07       		.byte	0x7
 2538 038c E604     		.2byte	0x4e6
 2539 038e EC020000 		.4byte	0x2ec
 2540 0392 0A       		.uleb128 0xa
 2541 0393 6A020000 		.4byte	.LASF52
 2542 0397 28       		.byte	0x28
 2543 0398 07       		.byte	0x7
 2544 0399 1305     		.2byte	0x513
 2545 039b EE030000 		.4byte	0x3ee
 2546 039f 0B       		.uleb128 0xb
 2547 03a0 57040000 		.4byte	.LASF47
 2548 03a4 07       		.byte	0x7
 2549 03a5 1505     		.2byte	0x515
 2550 03a7 A5000000 		.4byte	0xa5
 2551 03ab 00       		.byte	0
 2552 03ac 0B       		.uleb128 0xb
 2553 03ad D2080000 		.4byte	.LASF24
 2554 03b1 07       		.byte	0x7
 2555 03b2 1605     		.2byte	0x516
 2556 03b4 5A010000 		.4byte	0x15a
 2557 03b8 04       		.byte	0x4
 2558 03b9 0B       		.uleb128 0xb
 2559 03ba DA080000 		.4byte	.LASF36
 2560 03be 07       		.byte	0x7
 2561 03bf 1705     		.2byte	0x517
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 65


 2562 03c1 17010000 		.4byte	0x117
 2563 03c5 18       		.byte	0x18
 2564 03c6 0B       		.uleb128 0xb
 2565 03c7 72040000 		.4byte	.LASF53
 2566 03cb 07       		.byte	0x7
 2567 03cc 1805     		.2byte	0x518
 2568 03ce A5000000 		.4byte	0xa5
 2569 03d2 1C       		.byte	0x1c
 2570 03d3 0B       		.uleb128 0xb
 2571 03d4 6B030000 		.4byte	.LASF54
 2572 03d8 07       		.byte	0x7
 2573 03d9 1905     		.2byte	0x519
 2574 03db DA000000 		.4byte	0xda
 2575 03df 20       		.byte	0x20
 2576 03e0 0B       		.uleb128 0xb
 2577 03e1 82060000 		.4byte	.LASF55
 2578 03e5 07       		.byte	0x7
 2579 03e6 1D05     		.2byte	0x51d
 2580 03e8 B9000000 		.4byte	0xb9
 2581 03ec 24       		.byte	0x24
 2582 03ed 00       		.byte	0
 2583 03ee 0E       		.uleb128 0xe
 2584 03ef 4C020000 		.4byte	.LASF56
 2585 03f3 07       		.byte	0x7
 2586 03f4 1E05     		.2byte	0x51e
 2587 03f6 92030000 		.4byte	0x392
 2588 03fa 12       		.uleb128 0x12
 2589 03fb 00010000 		.4byte	.LASF57
 2590 03ff 14       		.byte	0x14
 2591 0400 08       		.byte	0x8
 2592 0401 8E       		.byte	0x8e
 2593 0402 43040000 		.4byte	0x443
 2594 0406 13       		.uleb128 0x13
 2595 0407 05070000 		.4byte	.LASF58
 2596 040b 08       		.byte	0x8
 2597 040c 91       		.byte	0x91
 2598 040d 17010000 		.4byte	0x117
 2599 0411 00       		.byte	0
 2600 0412 13       		.uleb128 0x13
 2601 0413 F5050000 		.4byte	.LASF59
 2602 0417 08       		.byte	0x8
 2603 0418 92       		.byte	0x92
 2604 0419 43040000 		.4byte	0x443
 2605 041d 04       		.byte	0x4
 2606 041e 13       		.uleb128 0x13
 2607 041f 7F030000 		.4byte	.LASF60
 2608 0423 08       		.byte	0x8
 2609 0424 93       		.byte	0x93
 2610 0425 43040000 		.4byte	0x443
 2611 0429 08       		.byte	0x8
 2612 042a 13       		.uleb128 0x13
 2613 042b C0080000 		.4byte	.LASF61
 2614 042f 08       		.byte	0x8
 2615 0430 94       		.byte	0x94
 2616 0431 A5000000 		.4byte	0xa5
 2617 0435 0C       		.byte	0xc
 2618 0436 13       		.uleb128 0x13
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 66


 2619 0437 28080000 		.4byte	.LASF62
 2620 043b 08       		.byte	0x8
 2621 043c 95       		.byte	0x95
 2622 043d 7A040000 		.4byte	0x47a
 2623 0441 10       		.byte	0x10
 2624 0442 00       		.byte	0
 2625 0443 06       		.uleb128 0x6
 2626 0444 04       		.byte	0x4
 2627 0445 FA030000 		.4byte	0x3fa
 2628 0449 12       		.uleb128 0x12
 2629 044a 24040000 		.4byte	.LASF63
 2630 044e 14       		.byte	0x14
 2631 044f 08       		.byte	0x8
 2632 0450 A6       		.byte	0xa6
 2633 0451 7A040000 		.4byte	0x47a
 2634 0455 13       		.uleb128 0x13
 2635 0456 33000000 		.4byte	.LASF64
 2636 045a 08       		.byte	0x8
 2637 045b A9       		.byte	0xa9
 2638 045c C7040000 		.4byte	0x4c7
 2639 0460 00       		.byte	0
 2640 0461 13       		.uleb128 0x13
 2641 0462 E0000000 		.4byte	.LASF65
 2642 0466 08       		.byte	0x8
 2643 0467 AA       		.byte	0xaa
 2644 0468 CC040000 		.4byte	0x4cc
 2645 046c 04       		.byte	0x4
 2646 046d 13       		.uleb128 0x13
 2647 046e 3F050000 		.4byte	.LASF66
 2648 0472 08       		.byte	0x8
 2649 0473 AB       		.byte	0xab
 2650 0474 BC040000 		.4byte	0x4bc
 2651 0478 08       		.byte	0x8
 2652 0479 00       		.byte	0
 2653 047a 06       		.uleb128 0x6
 2654 047b 04       		.byte	0x4
 2655 047c 49040000 		.4byte	0x449
 2656 0480 02       		.uleb128 0x2
 2657 0481 E8040000 		.4byte	.LASF67
 2658 0485 08       		.byte	0x8
 2659 0486 98       		.byte	0x98
 2660 0487 FA030000 		.4byte	0x3fa
 2661 048b 12       		.uleb128 0x12
 2662 048c EF030000 		.4byte	.LASF68
 2663 0490 0C       		.byte	0xc
 2664 0491 08       		.byte	0x8
 2665 0492 9A       		.byte	0x9a
 2666 0493 BC040000 		.4byte	0x4bc
 2667 0497 13       		.uleb128 0x13
 2668 0498 05070000 		.4byte	.LASF58
 2669 049c 08       		.byte	0x8
 2670 049d 9D       		.byte	0x9d
 2671 049e 17010000 		.4byte	0x117
 2672 04a2 00       		.byte	0
 2673 04a3 13       		.uleb128 0x13
 2674 04a4 F5050000 		.4byte	.LASF59
 2675 04a8 08       		.byte	0x8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 67


 2676 04a9 9E       		.byte	0x9e
 2677 04aa 43040000 		.4byte	0x443
 2678 04ae 04       		.byte	0x4
 2679 04af 13       		.uleb128 0x13
 2680 04b0 7F030000 		.4byte	.LASF60
 2681 04b4 08       		.byte	0x8
 2682 04b5 9F       		.byte	0x9f
 2683 04b6 43040000 		.4byte	0x443
 2684 04ba 08       		.byte	0x8
 2685 04bb 00       		.byte	0
 2686 04bc 02       		.uleb128 0x2
 2687 04bd 48050000 		.4byte	.LASF69
 2688 04c1 08       		.byte	0x8
 2689 04c2 A1       		.byte	0xa1
 2690 04c3 8B040000 		.4byte	0x48b
 2691 04c7 14       		.uleb128 0x14
 2692 04c8 0C010000 		.4byte	0x10c
 2693 04cc 06       		.uleb128 0x6
 2694 04cd 04       		.byte	0x4
 2695 04ce 80040000 		.4byte	0x480
 2696 04d2 02       		.uleb128 0x2
 2697 04d3 17060000 		.4byte	.LASF70
 2698 04d7 08       		.byte	0x8
 2699 04d8 AD       		.byte	0xad
 2700 04d9 49040000 		.4byte	0x449
 2701 04dd 02       		.uleb128 0x2
 2702 04de 0A060000 		.4byte	.LASF71
 2703 04e2 09       		.byte	0x9
 2704 04e3 4E       		.byte	0x4e
 2705 04e4 E8040000 		.4byte	0x4e8
 2706 04e8 06       		.uleb128 0x6
 2707 04e9 04       		.byte	0x4
 2708 04ea EE040000 		.4byte	0x4ee
 2709 04ee 15       		.uleb128 0x15
 2710 04ef 94000000 		.4byte	.LASF73
 2711 04f3 06       		.uleb128 0x6
 2712 04f4 04       		.byte	0x4
 2713 04f5 F6000000 		.4byte	0xf6
 2714 04f9 02       		.uleb128 0x2
 2715 04fa 13050000 		.4byte	.LASF72
 2716 04fe 0A       		.byte	0xa
 2717 04ff 31       		.byte	0x31
 2718 0500 04050000 		.4byte	0x504
 2719 0504 06       		.uleb128 0x6
 2720 0505 04       		.byte	0x4
 2721 0506 0A050000 		.4byte	0x50a
 2722 050a 15       		.uleb128 0x15
 2723 050b 44030000 		.4byte	.LASF74
 2724 050f 02       		.uleb128 0x2
 2725 0510 0C030000 		.4byte	.LASF75
 2726 0514 0B       		.byte	0xb
 2727 0515 4E       		.byte	0x4e
 2728 0516 1A050000 		.4byte	0x51a
 2729 051a 06       		.uleb128 0x6
 2730 051b 04       		.byte	0x4
 2731 051c 20050000 		.4byte	0x520
 2732 0520 12       		.uleb128 0x12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 68


 2733 0521 7F080000 		.4byte	.LASF76
 2734 0525 28       		.byte	0x28
 2735 0526 01       		.byte	0x1
 2736 0527 48       		.byte	0x48
 2737 0528 75050000 		.4byte	0x575
 2738 052c 13       		.uleb128 0x13
 2739 052d F4000000 		.4byte	.LASF77
 2740 0531 01       		.byte	0x1
 2741 0532 4A       		.byte	0x4a
 2742 0533 AE000000 		.4byte	0xae
 2743 0537 00       		.byte	0
 2744 0538 13       		.uleb128 0x13
 2745 0539 43060000 		.4byte	.LASF78
 2746 053d 01       		.byte	0x1
 2747 053e 4B       		.byte	0x4b
 2748 053f 80040000 		.4byte	0x480
 2749 0543 04       		.byte	0x4
 2750 0544 13       		.uleb128 0x13
 2751 0545 43000000 		.4byte	.LASF79
 2752 0549 01       		.byte	0x1
 2753 054a 4C       		.byte	0x4c
 2754 054b 17010000 		.4byte	0x117
 2755 054f 18       		.byte	0x18
 2756 0550 13       		.uleb128 0x13
 2757 0551 76070000 		.4byte	.LASF80
 2758 0555 01       		.byte	0x1
 2759 0556 4D       		.byte	0x4d
 2760 0557 A5000000 		.4byte	0xa5
 2761 055b 1C       		.byte	0x1c
 2762 055c 13       		.uleb128 0x13
 2763 055d 57000000 		.4byte	.LASF81
 2764 0561 01       		.byte	0x1
 2765 0562 4E       		.byte	0x4e
 2766 0563 75050000 		.4byte	0x575
 2767 0567 20       		.byte	0x20
 2768 0568 13       		.uleb128 0x13
 2769 0569 FC060000 		.4byte	.LASF82
 2770 056d 01       		.byte	0x1
 2771 056e 52       		.byte	0x52
 2772 056f B9000000 		.4byte	0xb9
 2773 0573 24       		.byte	0x24
 2774 0574 00       		.byte	0
 2775 0575 02       		.uleb128 0x2
 2776 0576 78020000 		.4byte	.LASF83
 2777 057a 0B       		.byte	0xb
 2778 057b 53       		.byte	0x53
 2779 057c 80050000 		.4byte	0x580
 2780 0580 06       		.uleb128 0x6
 2781 0581 04       		.byte	0x4
 2782 0582 86050000 		.4byte	0x586
 2783 0586 08       		.uleb128 0x8
 2784 0587 91050000 		.4byte	0x591
 2785 058b 09       		.uleb128 0x9
 2786 058c 0F050000 		.4byte	0x50f
 2787 0590 00       		.byte	0
 2788 0591 02       		.uleb128 0x2
 2789 0592 9D040000 		.4byte	.LASF84
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 69


 2790 0596 01       		.byte	0x1
 2791 0597 53       		.byte	0x53
 2792 0598 20050000 		.4byte	0x520
 2793 059c 02       		.uleb128 0x2
 2794 059d 96070000 		.4byte	.LASF85
 2795 05a1 01       		.byte	0x1
 2796 05a2 57       		.byte	0x57
 2797 05a3 91050000 		.4byte	0x591
 2798 05a7 12       		.uleb128 0x12
 2799 05a8 5D090000 		.4byte	.LASF86
 2800 05ac 08       		.byte	0x8
 2801 05ad 01       		.byte	0x1
 2802 05ae 5E       		.byte	0x5e
 2803 05af CC050000 		.4byte	0x5cc
 2804 05b3 13       		.uleb128 0x13
 2805 05b4 49080000 		.4byte	.LASF87
 2806 05b8 01       		.byte	0x1
 2807 05b9 60       		.byte	0x60
 2808 05ba 17010000 		.4byte	0x117
 2809 05be 00       		.byte	0
 2810 05bf 13       		.uleb128 0x13
 2811 05c0 20080000 		.4byte	.LASF88
 2812 05c4 01       		.byte	0x1
 2813 05c5 61       		.byte	0x61
 2814 05c6 CC050000 		.4byte	0x5cc
 2815 05ca 04       		.byte	0x4
 2816 05cb 00       		.byte	0
 2817 05cc 06       		.uleb128 0x6
 2818 05cd 04       		.byte	0x4
 2819 05ce 9C050000 		.4byte	0x59c
 2820 05d2 02       		.uleb128 0x2
 2821 05d3 2F020000 		.4byte	.LASF89
 2822 05d7 01       		.byte	0x1
 2823 05d8 62       		.byte	0x62
 2824 05d9 A7050000 		.4byte	0x5a7
 2825 05dd 16       		.uleb128 0x16
 2826 05de 08       		.byte	0x8
 2827 05df 01       		.byte	0x1
 2828 05e0 71       		.byte	0x71
 2829 05e1 F1050000 		.4byte	0x5f1
 2830 05e5 17       		.uleb128 0x17
 2831 05e6 A8000000 		.4byte	.LASF90
 2832 05ea 01       		.byte	0x1
 2833 05eb 73       		.byte	0x73
 2834 05ec D2050000 		.4byte	0x5d2
 2835 05f0 00       		.byte	0
 2836 05f1 12       		.uleb128 0x12
 2837 05f2 C1030000 		.4byte	.LASF91
 2838 05f6 0C       		.byte	0xc
 2839 05f7 01       		.byte	0x1
 2840 05f8 6E       		.byte	0x6e
 2841 05f9 14060000 		.4byte	0x614
 2842 05fd 13       		.uleb128 0x13
 2843 05fe 9E070000 		.4byte	.LASF92
 2844 0602 01       		.byte	0x1
 2845 0603 70       		.byte	0x70
 2846 0604 01010000 		.4byte	0x101
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 70


 2847 0608 00       		.byte	0
 2848 0609 18       		.uleb128 0x18
 2849 060a 7500     		.ascii	"u\000"
 2850 060c 01       		.byte	0x1
 2851 060d 7A       		.byte	0x7a
 2852 060e DD050000 		.4byte	0x5dd
 2853 0612 04       		.byte	0x4
 2854 0613 00       		.byte	0
 2855 0614 02       		.uleb128 0x2
 2856 0615 A9070000 		.4byte	.LASF93
 2857 0619 01       		.byte	0x1
 2858 061a 7B       		.byte	0x7b
 2859 061b F1050000 		.4byte	0x5f1
 2860 061f 19       		.uleb128 0x19
 2861 0620 A4020000 		.4byte	.LASF98
 2862 0624 01       		.byte	0x1
 2863 0625 DD       		.byte	0xdd
 2864 0626 01010000 		.4byte	0x101
 2865 062a 00000000 		.4byte	.LFB0
 2866 062e 84000000 		.4byte	.LFE0-.LFB0
 2867 0632 01       		.uleb128 0x1
 2868 0633 9C       		.byte	0x9c
 2869 0634 7B060000 		.4byte	0x67b
 2870 0638 1A       		.uleb128 0x1a
 2871 0639 E5070000 		.4byte	.LASF94
 2872 063d 01       		.byte	0x1
 2873 063e DF       		.byte	0xdf
 2874 063f 01010000 		.4byte	0x101
 2875 0643 02       		.uleb128 0x2
 2876 0644 91       		.byte	0x91
 2877 0645 6C       		.sleb128 -20
 2878 0646 1B       		.uleb128 0x1b
 2879 0647 16000000 		.4byte	.LBB2
 2880 064b 42000000 		.4byte	.LBE2-.LBB2
 2881 064f 1A       		.uleb128 0x1a
 2882 0650 8F080000 		.4byte	.LASF95
 2883 0654 01       		.byte	0x1
 2884 0655 EB       		.byte	0xeb
 2885 0656 7B060000 		.4byte	0x67b
 2886 065a 02       		.uleb128 0x2
 2887 065b 91       		.byte	0x91
 2888 065c 68       		.sleb128 -24
 2889 065d 1A       		.uleb128 0x1a
 2890 065e 2A040000 		.4byte	.LASF96
 2891 0662 01       		.byte	0x1
 2892 0663 EC       		.byte	0xec
 2893 0664 F3040000 		.4byte	0x4f3
 2894 0668 02       		.uleb128 0x2
 2895 0669 91       		.byte	0x91
 2896 066a 64       		.sleb128 -28
 2897 066b 1A       		.uleb128 0x1a
 2898 066c BA020000 		.4byte	.LASF97
 2899 0670 01       		.byte	0x1
 2900 0671 ED       		.byte	0xed
 2901 0672 CF000000 		.4byte	0xcf
 2902 0676 02       		.uleb128 0x2
 2903 0677 91       		.byte	0x91
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 71


 2904 0678 60       		.sleb128 -32
 2905 0679 00       		.byte	0
 2906 067a 00       		.byte	0
 2907 067b 06       		.uleb128 0x6
 2908 067c 04       		.byte	0x4
 2909 067d BE020000 		.4byte	0x2be
 2910 0681 1C       		.uleb128 0x1c
 2911 0682 21050000 		.4byte	.LASF99
 2912 0686 01       		.byte	0x1
 2913 0687 1401     		.2byte	0x114
 2914 0689 0F050000 		.4byte	0x50f
 2915 068d 00000000 		.4byte	.LFB1
 2916 0691 46000000 		.4byte	.LFE1-.LFB1
 2917 0695 01       		.uleb128 0x1
 2918 0696 9C       		.byte	0x9c
 2919 0697 F6060000 		.4byte	0x6f6
 2920 069b 1D       		.uleb128 0x1d
 2921 069c F4000000 		.4byte	.LASF77
 2922 06a0 01       		.byte	0x1
 2923 06a1 1401     		.2byte	0x114
 2924 06a3 F6060000 		.4byte	0x6f6
 2925 06a7 02       		.uleb128 0x2
 2926 06a8 91       		.byte	0x91
 2927 06a9 64       		.sleb128 -28
 2928 06aa 1D       		.uleb128 0x1d
 2929 06ab 43000000 		.4byte	.LASF79
 2930 06af 01       		.byte	0x1
 2931 06b0 1501     		.2byte	0x115
 2932 06b2 FB060000 		.4byte	0x6fb
 2933 06b6 02       		.uleb128 0x2
 2934 06b7 91       		.byte	0x91
 2935 06b8 60       		.sleb128 -32
 2936 06b9 1D       		.uleb128 0x1d
 2937 06ba D4060000 		.4byte	.LASF100
 2938 06be 01       		.byte	0x1
 2939 06bf 1601     		.2byte	0x116
 2940 06c1 00070000 		.4byte	0x700
 2941 06c5 02       		.uleb128 0x2
 2942 06c6 91       		.byte	0x91
 2943 06c7 5C       		.sleb128 -36
 2944 06c8 1D       		.uleb128 0x1d
 2945 06c9 76070000 		.4byte	.LASF80
 2946 06cd 01       		.byte	0x1
 2947 06ce 1701     		.2byte	0x117
 2948 06d0 05070000 		.4byte	0x705
 2949 06d4 02       		.uleb128 0x2
 2950 06d5 91       		.byte	0x91
 2951 06d6 58       		.sleb128 -40
 2952 06d7 1D       		.uleb128 0x1d
 2953 06d8 57000000 		.4byte	.LASF81
 2954 06dc 01       		.byte	0x1
 2955 06dd 1801     		.2byte	0x118
 2956 06df 75050000 		.4byte	0x575
 2957 06e3 02       		.uleb128 0x2
 2958 06e4 91       		.byte	0x91
 2959 06e5 00       		.sleb128 0
 2960 06e6 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 72


 2961 06e7 74030000 		.4byte	.LASF101
 2962 06eb 01       		.byte	0x1
 2963 06ec 1A01     		.2byte	0x11a
 2964 06ee CC050000 		.4byte	0x5cc
 2965 06f2 02       		.uleb128 0x2
 2966 06f3 91       		.byte	0x91
 2967 06f4 6C       		.sleb128 -20
 2968 06f5 00       		.byte	0
 2969 06f6 07       		.uleb128 0x7
 2970 06f7 AE000000 		.4byte	0xae
 2971 06fb 07       		.uleb128 0x7
 2972 06fc 17010000 		.4byte	0x117
 2973 0700 07       		.uleb128 0x7
 2974 0701 0C010000 		.4byte	0x10c
 2975 0705 07       		.uleb128 0x7
 2976 0706 A5000000 		.4byte	0xa5
 2977 070a 1C       		.uleb128 0x1c
 2978 070b 1A030000 		.4byte	.LASF102
 2979 070f 01       		.byte	0x1
 2980 0710 2F01     		.2byte	0x12f
 2981 0712 0F050000 		.4byte	0x50f
 2982 0716 00000000 		.4byte	.LFB2
 2983 071a 64000000 		.4byte	.LFE2-.LFB2
 2984 071e 01       		.uleb128 0x1
 2985 071f 9C       		.byte	0x9c
 2986 0720 A7070000 		.4byte	0x7a7
 2987 0724 1D       		.uleb128 0x1d
 2988 0725 F4000000 		.4byte	.LASF77
 2989 0729 01       		.byte	0x1
 2990 072a 2F01     		.2byte	0x12f
 2991 072c F6060000 		.4byte	0x6f6
 2992 0730 02       		.uleb128 0x2
 2993 0731 91       		.byte	0x91
 2994 0732 64       		.sleb128 -28
 2995 0733 1D       		.uleb128 0x1d
 2996 0734 43000000 		.4byte	.LASF79
 2997 0738 01       		.byte	0x1
 2998 0739 3001     		.2byte	0x130
 2999 073b FB060000 		.4byte	0x6fb
 3000 073f 02       		.uleb128 0x2
 3001 0740 91       		.byte	0x91
 3002 0741 60       		.sleb128 -32
 3003 0742 1D       		.uleb128 0x1d
 3004 0743 D4060000 		.4byte	.LASF100
 3005 0747 01       		.byte	0x1
 3006 0748 3101     		.2byte	0x131
 3007 074a 00070000 		.4byte	0x700
 3008 074e 02       		.uleb128 0x2
 3009 074f 91       		.byte	0x91
 3010 0750 5C       		.sleb128 -36
 3011 0751 1D       		.uleb128 0x1d
 3012 0752 76070000 		.4byte	.LASF80
 3013 0756 01       		.byte	0x1
 3014 0757 3201     		.2byte	0x132
 3015 0759 05070000 		.4byte	0x705
 3016 075d 02       		.uleb128 0x2
 3017 075e 91       		.byte	0x91
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 73


 3018 075f 58       		.sleb128 -40
 3019 0760 1D       		.uleb128 0x1d
 3020 0761 57000000 		.4byte	.LASF81
 3021 0765 01       		.byte	0x1
 3022 0766 3301     		.2byte	0x133
 3023 0768 75050000 		.4byte	0x575
 3024 076c 02       		.uleb128 0x2
 3025 076d 91       		.byte	0x91
 3026 076e 00       		.sleb128 0
 3027 076f 1D       		.uleb128 0x1d
 3028 0770 3C090000 		.4byte	.LASF103
 3029 0774 01       		.byte	0x1
 3030 0775 3401     		.2byte	0x134
 3031 0777 A7070000 		.4byte	0x7a7
 3032 077b 02       		.uleb128 0x2
 3033 077c 91       		.byte	0x91
 3034 077d 04       		.sleb128 4
 3035 077e 1E       		.uleb128 0x1e
 3036 077f 74030000 		.4byte	.LASF101
 3037 0783 01       		.byte	0x1
 3038 0784 3601     		.2byte	0x136
 3039 0786 CC050000 		.4byte	0x5cc
 3040 078a 02       		.uleb128 0x2
 3041 078b 91       		.byte	0x91
 3042 078c 6C       		.sleb128 -20
 3043 078d 1B       		.uleb128 0x1b
 3044 078e 0E000000 		.4byte	.LBB3
 3045 0792 14000000 		.4byte	.LBE3-.LBB3
 3046 0796 1E       		.uleb128 0x1e
 3047 0797 CE060000 		.4byte	.LASF104
 3048 079b 01       		.byte	0x1
 3049 079c 3D01     		.2byte	0x13d
 3050 079e AD070000 		.4byte	0x7ad
 3051 07a2 02       		.uleb128 0x2
 3052 07a3 91       		.byte	0x91
 3053 07a4 68       		.sleb128 -24
 3054 07a5 00       		.byte	0
 3055 07a6 00       		.byte	0
 3056 07a7 06       		.uleb128 0x6
 3057 07a8 04       		.byte	0x4
 3058 07a9 EE030000 		.4byte	0x3ee
 3059 07ad 14       		.uleb128 0x14
 3060 07ae 25000000 		.4byte	0x25
 3061 07b2 1F       		.uleb128 0x1f
 3062 07b3 41040000 		.4byte	.LASF117
 3063 07b7 01       		.byte	0x1
 3064 07b8 5701     		.2byte	0x157
 3065 07ba 00000000 		.4byte	.LFB3
 3066 07be 6C000000 		.4byte	.LFE3-.LFB3
 3067 07c2 01       		.uleb128 0x1
 3068 07c3 9C       		.byte	0x9c
 3069 07c4 23080000 		.4byte	0x823
 3070 07c8 1D       		.uleb128 0x1d
 3071 07c9 F4000000 		.4byte	.LASF77
 3072 07cd 01       		.byte	0x1
 3073 07ce 5701     		.2byte	0x157
 3074 07d0 F6060000 		.4byte	0x6f6
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 74


 3075 07d4 02       		.uleb128 0x2
 3076 07d5 91       		.byte	0x91
 3077 07d6 74       		.sleb128 -12
 3078 07d7 1D       		.uleb128 0x1d
 3079 07d8 43000000 		.4byte	.LASF79
 3080 07dc 01       		.byte	0x1
 3081 07dd 5801     		.2byte	0x158
 3082 07df FB060000 		.4byte	0x6fb
 3083 07e3 02       		.uleb128 0x2
 3084 07e4 91       		.byte	0x91
 3085 07e5 70       		.sleb128 -16
 3086 07e6 1D       		.uleb128 0x1d
 3087 07e7 D4060000 		.4byte	.LASF100
 3088 07eb 01       		.byte	0x1
 3089 07ec 5901     		.2byte	0x159
 3090 07ee 00070000 		.4byte	0x700
 3091 07f2 02       		.uleb128 0x2
 3092 07f3 91       		.byte	0x91
 3093 07f4 6C       		.sleb128 -20
 3094 07f5 1D       		.uleb128 0x1d
 3095 07f6 76070000 		.4byte	.LASF80
 3096 07fa 01       		.byte	0x1
 3097 07fb 5A01     		.2byte	0x15a
 3098 07fd 05070000 		.4byte	0x705
 3099 0801 02       		.uleb128 0x2
 3100 0802 91       		.byte	0x91
 3101 0803 68       		.sleb128 -24
 3102 0804 1D       		.uleb128 0x1d
 3103 0805 57000000 		.4byte	.LASF81
 3104 0809 01       		.byte	0x1
 3105 080a 5B01     		.2byte	0x15b
 3106 080c 75050000 		.4byte	0x575
 3107 0810 02       		.uleb128 0x2
 3108 0811 91       		.byte	0x91
 3109 0812 00       		.sleb128 0
 3110 0813 1D       		.uleb128 0x1d
 3111 0814 74030000 		.4byte	.LASF101
 3112 0818 01       		.byte	0x1
 3113 0819 5C01     		.2byte	0x15c
 3114 081b CC050000 		.4byte	0x5cc
 3115 081f 02       		.uleb128 0x2
 3116 0820 91       		.byte	0x91
 3117 0821 04       		.sleb128 4
 3118 0822 00       		.byte	0
 3119 0823 1C       		.uleb128 0x1c
 3120 0824 8B060000 		.4byte	.LASF105
 3121 0828 01       		.byte	0x1
 3122 0829 7901     		.2byte	0x179
 3123 082b 01010000 		.4byte	0x101
 3124 082f 00000000 		.4byte	.LFB4
 3125 0833 A0000000 		.4byte	.LFE4-.LFB4
 3126 0837 01       		.uleb128 0x1
 3127 0838 9C       		.byte	0x9c
 3128 0839 A7080000 		.4byte	0x8a7
 3129 083d 1D       		.uleb128 0x1d
 3130 083e 96040000 		.4byte	.LASF106
 3131 0842 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 75


 3132 0843 7901     		.2byte	0x179
 3133 0845 0F050000 		.4byte	0x50f
 3134 0849 02       		.uleb128 0x2
 3135 084a 91       		.byte	0x91
 3136 084b 64       		.sleb128 -28
 3137 084c 1D       		.uleb128 0x1d
 3138 084d 90020000 		.4byte	.LASF107
 3139 0851 01       		.byte	0x1
 3140 0852 7A01     		.2byte	0x17a
 3141 0854 A7080000 		.4byte	0x8a7
 3142 0858 02       		.uleb128 0x2
 3143 0859 91       		.byte	0x91
 3144 085a 60       		.sleb128 -32
 3145 085b 1D       		.uleb128 0x1d
 3146 085c 9E030000 		.4byte	.LASF108
 3147 0860 01       		.byte	0x1
 3148 0861 7B01     		.2byte	0x17b
 3149 0863 FB060000 		.4byte	0x6fb
 3150 0867 02       		.uleb128 0x2
 3151 0868 91       		.byte	0x91
 3152 0869 5C       		.sleb128 -36
 3153 086a 1D       		.uleb128 0x1d
 3154 086b B9000000 		.4byte	.LASF109
 3155 086f 01       		.byte	0x1
 3156 0870 7C01     		.2byte	0x17c
 3157 0872 B2080000 		.4byte	0x8b2
 3158 0876 02       		.uleb128 0x2
 3159 0877 91       		.byte	0x91
 3160 0878 58       		.sleb128 -40
 3161 0879 1D       		.uleb128 0x1d
 3162 087a B3080000 		.4byte	.LASF110
 3163 087e 01       		.byte	0x1
 3164 087f 7D01     		.2byte	0x17d
 3165 0881 FB060000 		.4byte	0x6fb
 3166 0885 02       		.uleb128 0x2
 3167 0886 91       		.byte	0x91
 3168 0887 00       		.sleb128 0
 3169 0888 1E       		.uleb128 0x1e
 3170 0889 E5070000 		.4byte	.LASF94
 3171 088d 01       		.byte	0x1
 3172 088e 7F01     		.2byte	0x17f
 3173 0890 01010000 		.4byte	0x101
 3174 0894 02       		.uleb128 0x2
 3175 0895 91       		.byte	0x91
 3176 0896 74       		.sleb128 -12
 3177 0897 1E       		.uleb128 0x1e
 3178 0898 6D070000 		.4byte	.LASF111
 3179 089c 01       		.byte	0x1
 3180 089d 8001     		.2byte	0x180
 3181 089f 14060000 		.4byte	0x614
 3182 08a3 02       		.uleb128 0x2
 3183 08a4 91       		.byte	0x91
 3184 08a5 68       		.sleb128 -24
 3185 08a6 00       		.byte	0
 3186 08a7 07       		.uleb128 0x7
 3187 08a8 01010000 		.4byte	0x101
 3188 08ac 06       		.uleb128 0x6
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 76


 3189 08ad 04       		.byte	0x4
 3190 08ae 01010000 		.4byte	0x101
 3191 08b2 07       		.uleb128 0x7
 3192 08b3 AC080000 		.4byte	0x8ac
 3193 08b7 20       		.uleb128 0x20
 3194 08b8 ED020000 		.4byte	.LASF158
 3195 08bc 01       		.byte	0x1
 3196 08bd A801     		.2byte	0x1a8
 3197 08bf DD040000 		.4byte	0x4dd
 3198 08c3 00000000 		.4byte	.LFB5
 3199 08c7 24000000 		.4byte	.LFE5-.LFB5
 3200 08cb 01       		.uleb128 0x1
 3201 08cc 9C       		.byte	0x9c
 3202 08cd 21       		.uleb128 0x21
 3203 08ce 10080000 		.4byte	.LASF112
 3204 08d2 01       		.byte	0x1
 3205 08d3 B101     		.2byte	0x1b1
 3206 08d5 17010000 		.4byte	0x117
 3207 08d9 00000000 		.4byte	.LFB6
 3208 08dd 28000000 		.4byte	.LFE6-.LFB6
 3209 08e1 01       		.uleb128 0x1
 3210 08e2 9C       		.byte	0x9c
 3211 08e3 06090000 		.4byte	0x906
 3212 08e7 1D       		.uleb128 0x1d
 3213 08e8 96040000 		.4byte	.LASF106
 3214 08ec 01       		.byte	0x1
 3215 08ed B101     		.2byte	0x1b1
 3216 08ef 0F050000 		.4byte	0x50f
 3217 08f3 02       		.uleb128 0x2
 3218 08f4 91       		.byte	0x91
 3219 08f5 6C       		.sleb128 -20
 3220 08f6 1E       		.uleb128 0x1e
 3221 08f7 20080000 		.4byte	.LASF88
 3222 08fb 01       		.byte	0x1
 3223 08fc B301     		.2byte	0x1b3
 3224 08fe CC050000 		.4byte	0x5cc
 3225 0902 02       		.uleb128 0x2
 3226 0903 91       		.byte	0x91
 3227 0904 74       		.sleb128 -12
 3228 0905 00       		.byte	0
 3229 0906 22       		.uleb128 0x22
 3230 0907 1C090000 		.4byte	.LASF146
 3231 090b 01       		.byte	0x1
 3232 090c BA01     		.2byte	0x1ba
 3233 090e 00000000 		.4byte	.LFB7
 3234 0912 5C000000 		.4byte	.LFE7-.LFB7
 3235 0916 01       		.uleb128 0x1
 3236 0917 9C       		.byte	0x9c
 3237 0918 4A090000 		.4byte	0x94a
 3238 091c 1D       		.uleb128 0x1d
 3239 091d 96040000 		.4byte	.LASF106
 3240 0921 01       		.byte	0x1
 3241 0922 BA01     		.2byte	0x1ba
 3242 0924 0F050000 		.4byte	0x50f
 3243 0928 02       		.uleb128 0x2
 3244 0929 91       		.byte	0x91
 3245 092a 6C       		.sleb128 -20
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 77


 3246 092b 1D       		.uleb128 0x1d
 3247 092c D4060000 		.4byte	.LASF100
 3248 0930 01       		.byte	0x1
 3249 0931 BB01     		.2byte	0x1bb
 3250 0933 00070000 		.4byte	0x700
 3251 0937 02       		.uleb128 0x2
 3252 0938 91       		.byte	0x91
 3253 0939 68       		.sleb128 -24
 3254 093a 1E       		.uleb128 0x1e
 3255 093b 20080000 		.4byte	.LASF88
 3256 093f 01       		.byte	0x1
 3257 0940 BD01     		.2byte	0x1bd
 3258 0942 CC050000 		.4byte	0x5cc
 3259 0946 02       		.uleb128 0x2
 3260 0947 91       		.byte	0x91
 3261 0948 74       		.sleb128 -12
 3262 0949 00       		.byte	0
 3263 094a 1C       		.uleb128 0x1c
 3264 094b D8020000 		.4byte	.LASF113
 3265 094f 01       		.byte	0x1
 3266 0950 CF01     		.2byte	0x1cf
 3267 0952 0C010000 		.4byte	0x10c
 3268 0956 00000000 		.4byte	.LFB8
 3269 095a 48000000 		.4byte	.LFE8-.LFB8
 3270 095e 01       		.uleb128 0x1
 3271 095f 9C       		.byte	0x9c
 3272 0960 92090000 		.4byte	0x992
 3273 0964 1D       		.uleb128 0x1d
 3274 0965 96040000 		.4byte	.LASF106
 3275 0969 01       		.byte	0x1
 3276 096a CF01     		.2byte	0x1cf
 3277 096c 0F050000 		.4byte	0x50f
 3278 0970 02       		.uleb128 0x2
 3279 0971 91       		.byte	0x91
 3280 0972 6C       		.sleb128 -20
 3281 0973 1E       		.uleb128 0x1e
 3282 0974 20080000 		.4byte	.LASF88
 3283 0978 01       		.byte	0x1
 3284 0979 D101     		.2byte	0x1d1
 3285 097b CC050000 		.4byte	0x5cc
 3286 097f 02       		.uleb128 0x2
 3287 0980 91       		.byte	0x91
 3288 0981 70       		.sleb128 -16
 3289 0982 1E       		.uleb128 0x1e
 3290 0983 9B020000 		.4byte	.LASF114
 3291 0987 01       		.byte	0x1
 3292 0988 D201     		.2byte	0x1d2
 3293 098a 0C010000 		.4byte	0x10c
 3294 098e 02       		.uleb128 0x2
 3295 098f 91       		.byte	0x91
 3296 0990 74       		.sleb128 -12
 3297 0991 00       		.byte	0
 3298 0992 21       		.uleb128 0x21
 3299 0993 FF040000 		.4byte	.LASF115
 3300 0997 01       		.byte	0x1
 3301 0998 E801     		.2byte	0x1e8
 3302 099a 17010000 		.4byte	0x117
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 78


 3303 099e 00000000 		.4byte	.LFB9
 3304 09a2 2C000000 		.4byte	.LFE9-.LFB9
 3305 09a6 01       		.uleb128 0x1
 3306 09a7 9C       		.byte	0x9c
 3307 09a8 DA090000 		.4byte	0x9da
 3308 09ac 1D       		.uleb128 0x1d
 3309 09ad 96040000 		.4byte	.LASF106
 3310 09b1 01       		.byte	0x1
 3311 09b2 E801     		.2byte	0x1e8
 3312 09b4 0F050000 		.4byte	0x50f
 3313 09b8 02       		.uleb128 0x2
 3314 09b9 91       		.byte	0x91
 3315 09ba 6C       		.sleb128 -20
 3316 09bb 1E       		.uleb128 0x1e
 3317 09bc 20080000 		.4byte	.LASF88
 3318 09c0 01       		.byte	0x1
 3319 09c1 EA01     		.2byte	0x1ea
 3320 09c3 CC050000 		.4byte	0x5cc
 3321 09c7 02       		.uleb128 0x2
 3322 09c8 91       		.byte	0x91
 3323 09c9 74       		.sleb128 -12
 3324 09ca 1E       		.uleb128 0x1e
 3325 09cb E5070000 		.4byte	.LASF94
 3326 09cf 01       		.byte	0x1
 3327 09d0 EB01     		.2byte	0x1eb
 3328 09d2 17010000 		.4byte	0x117
 3329 09d6 02       		.uleb128 0x2
 3330 09d7 91       		.byte	0x91
 3331 09d8 70       		.sleb128 -16
 3332 09d9 00       		.byte	0
 3333 09da 21       		.uleb128 0x21
 3334 09db A4080000 		.4byte	.LASF116
 3335 09df 01       		.byte	0x1
 3336 09e0 F301     		.2byte	0x1f3
 3337 09e2 AE000000 		.4byte	0xae
 3338 09e6 00000000 		.4byte	.LFB10
 3339 09ea 28000000 		.4byte	.LFE10-.LFB10
 3340 09ee 01       		.uleb128 0x1
 3341 09ef 9C       		.byte	0x9c
 3342 09f0 130A0000 		.4byte	0xa13
 3343 09f4 1D       		.uleb128 0x1d
 3344 09f5 96040000 		.4byte	.LASF106
 3345 09f9 01       		.byte	0x1
 3346 09fa F301     		.2byte	0x1f3
 3347 09fc 0F050000 		.4byte	0x50f
 3348 0a00 02       		.uleb128 0x2
 3349 0a01 91       		.byte	0x91
 3350 0a02 6C       		.sleb128 -20
 3351 0a03 1E       		.uleb128 0x1e
 3352 0a04 20080000 		.4byte	.LASF88
 3353 0a08 01       		.byte	0x1
 3354 0a09 F501     		.2byte	0x1f5
 3355 0a0b CC050000 		.4byte	0x5cc
 3356 0a0f 02       		.uleb128 0x2
 3357 0a10 91       		.byte	0x91
 3358 0a11 74       		.sleb128 -12
 3359 0a12 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 79


 3360 0a13 1F       		.uleb128 0x1f
 3361 0a14 2D030000 		.4byte	.LASF118
 3362 0a18 01       		.byte	0x1
 3363 0a19 FC01     		.2byte	0x1fc
 3364 0a1b 00000000 		.4byte	.LFB11
 3365 0a1f 90000000 		.4byte	.LFE11-.LFB11
 3366 0a23 01       		.uleb128 0x1
 3367 0a24 9C       		.byte	0x9c
 3368 0a25 660A0000 		.4byte	0xa66
 3369 0a29 1D       		.uleb128 0x1d
 3370 0a2a BE060000 		.4byte	.LASF119
 3371 0a2e 01       		.byte	0x1
 3372 0a2f FC01     		.2byte	0x1fc
 3373 0a31 FB060000 		.4byte	0x6fb
 3374 0a35 02       		.uleb128 0x2
 3375 0a36 91       		.byte	0x91
 3376 0a37 6C       		.sleb128 -20
 3377 0a38 1D       		.uleb128 0x1d
 3378 0a39 79000000 		.4byte	.LASF120
 3379 0a3d 01       		.byte	0x1
 3380 0a3e FD01     		.2byte	0x1fd
 3381 0a40 FB060000 		.4byte	0x6fb
 3382 0a44 02       		.uleb128 0x2
 3383 0a45 91       		.byte	0x91
 3384 0a46 68       		.sleb128 -24
 3385 0a47 1E       		.uleb128 0x1e
 3386 0a48 08080000 		.4byte	.LASF121
 3387 0a4c 01       		.byte	0x1
 3388 0a4d FF01     		.2byte	0x1ff
 3389 0a4f 01010000 		.4byte	0x101
 3390 0a53 02       		.uleb128 0x2
 3391 0a54 91       		.byte	0x91
 3392 0a55 70       		.sleb128 -16
 3393 0a56 1E       		.uleb128 0x1e
 3394 0a57 20080000 		.4byte	.LASF88
 3395 0a5b 01       		.byte	0x1
 3396 0a5c 0002     		.2byte	0x200
 3397 0a5e 660A0000 		.4byte	0xa66
 3398 0a62 02       		.uleb128 0x2
 3399 0a63 91       		.byte	0x91
 3400 0a64 74       		.sleb128 -12
 3401 0a65 00       		.byte	0
 3402 0a66 07       		.uleb128 0x7
 3403 0a67 CC050000 		.4byte	0x5cc
 3404 0a6b 1F       		.uleb128 0x1f
 3405 0a6c B1060000 		.4byte	.LASF122
 3406 0a70 01       		.byte	0x1
 3407 0a71 2702     		.2byte	0x227
 3408 0a73 00000000 		.4byte	.LFB12
 3409 0a77 28000000 		.4byte	.LFE12-.LFB12
 3410 0a7b 01       		.uleb128 0x1
 3411 0a7c 9C       		.byte	0x9c
 3412 0a7d AF0A0000 		.4byte	0xaaf
 3413 0a81 1D       		.uleb128 0x1d
 3414 0a82 0D020000 		.4byte	.LASF123
 3415 0a86 01       		.byte	0x1
 3416 0a87 2702     		.2byte	0x227
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 80


 3417 0a89 A5000000 		.4byte	0xa5
 3418 0a8d 02       		.uleb128 0x2
 3419 0a8e 91       		.byte	0x91
 3420 0a8f 6C       		.sleb128 -20
 3421 0a90 1E       		.uleb128 0x1e
 3422 0a91 BE060000 		.4byte	.LASF119
 3423 0a95 01       		.byte	0x1
 3424 0a96 2902     		.2byte	0x229
 3425 0a98 17010000 		.4byte	0x117
 3426 0a9c 02       		.uleb128 0x2
 3427 0a9d 91       		.byte	0x91
 3428 0a9e 74       		.sleb128 -12
 3429 0a9f 1E       		.uleb128 0x1e
 3430 0aa0 A0090000 		.4byte	.LASF124
 3431 0aa4 01       		.byte	0x1
 3432 0aa5 2A02     		.2byte	0x22a
 3433 0aa7 01010000 		.4byte	0x101
 3434 0aab 02       		.uleb128 0x2
 3435 0aac 91       		.byte	0x91
 3436 0aad 70       		.sleb128 -16
 3437 0aae 00       		.byte	0
 3438 0aaf 1F       		.uleb128 0x1f
 3439 0ab0 EA080000 		.4byte	.LASF125
 3440 0ab4 01       		.byte	0x1
 3441 0ab5 4B02     		.2byte	0x24b
 3442 0ab7 00000000 		.4byte	.LFB13
 3443 0abb 90000000 		.4byte	.LFE13-.LFB13
 3444 0abf 01       		.uleb128 0x1
 3445 0ac0 9C       		.byte	0x9c
 3446 0ac1 020B0000 		.4byte	0xb02
 3447 0ac5 1D       		.uleb128 0x1d
 3448 0ac6 BE060000 		.4byte	.LASF119
 3449 0aca 01       		.byte	0x1
 3450 0acb 4B02     		.2byte	0x24b
 3451 0acd FB060000 		.4byte	0x6fb
 3452 0ad1 02       		.uleb128 0x2
 3453 0ad2 91       		.byte	0x91
 3454 0ad3 6C       		.sleb128 -20
 3455 0ad4 1D       		.uleb128 0x1d
 3456 0ad5 A0090000 		.4byte	.LASF124
 3457 0ad9 01       		.byte	0x1
 3458 0ada 4C02     		.2byte	0x24c
 3459 0adc 01010000 		.4byte	0x101
 3460 0ae0 02       		.uleb128 0x2
 3461 0ae1 91       		.byte	0x91
 3462 0ae2 68       		.sleb128 -24
 3463 0ae3 1E       		.uleb128 0x1e
 3464 0ae4 79000000 		.4byte	.LASF120
 3465 0ae8 01       		.byte	0x1
 3466 0ae9 4E02     		.2byte	0x24e
 3467 0aeb 17010000 		.4byte	0x117
 3468 0aef 02       		.uleb128 0x2
 3469 0af0 91       		.byte	0x91
 3470 0af1 74       		.sleb128 -12
 3471 0af2 1E       		.uleb128 0x1e
 3472 0af3 70050000 		.4byte	.LASF126
 3473 0af7 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 81


 3474 0af8 4F02     		.2byte	0x24f
 3475 0afa 01010000 		.4byte	0x101
 3476 0afe 02       		.uleb128 0x2
 3477 0aff 91       		.byte	0x91
 3478 0b00 70       		.sleb128 -16
 3479 0b01 00       		.byte	0
 3480 0b02 23       		.uleb128 0x23
 3481 0b03 8B090000 		.4byte	.LASF128
 3482 0b07 01       		.byte	0x1
 3483 0b08 8902     		.2byte	0x289
 3484 0b0a 17010000 		.4byte	0x117
 3485 0b0e 00000000 		.4byte	.LFB14
 3486 0b12 44000000 		.4byte	.LFE14-.LFB14
 3487 0b16 01       		.uleb128 0x1
 3488 0b17 9C       		.byte	0x9c
 3489 0b18 3B0B0000 		.4byte	0xb3b
 3490 0b1c 1D       		.uleb128 0x1d
 3491 0b1d 6A000000 		.4byte	.LASF127
 3492 0b21 01       		.byte	0x1
 3493 0b22 8902     		.2byte	0x289
 3494 0b24 B2080000 		.4byte	0x8b2
 3495 0b28 02       		.uleb128 0x2
 3496 0b29 91       		.byte	0x91
 3497 0b2a 6C       		.sleb128 -20
 3498 0b2b 1E       		.uleb128 0x1e
 3499 0b2c BE060000 		.4byte	.LASF119
 3500 0b30 01       		.byte	0x1
 3501 0b31 8B02     		.2byte	0x28b
 3502 0b33 17010000 		.4byte	0x117
 3503 0b37 02       		.uleb128 0x2
 3504 0b38 91       		.byte	0x91
 3505 0b39 74       		.sleb128 -12
 3506 0b3a 00       		.byte	0
 3507 0b3b 24       		.uleb128 0x24
 3508 0b3c 2E050000 		.4byte	.LASF129
 3509 0b40 01       		.byte	0x1
 3510 0b41 A402     		.2byte	0x2a4
 3511 0b43 17010000 		.4byte	0x117
 3512 0b47 00000000 		.4byte	.LFB15
 3513 0b4b 40000000 		.4byte	.LFE15-.LFB15
 3514 0b4f 01       		.uleb128 0x1
 3515 0b50 9C       		.byte	0x9c
 3516 0b51 860B0000 		.4byte	0xb86
 3517 0b55 1D       		.uleb128 0x1d
 3518 0b56 00000000 		.4byte	.LASF130
 3519 0b5a 01       		.byte	0x1
 3520 0b5b A402     		.2byte	0x2a4
 3521 0b5d B2080000 		.4byte	0x8b2
 3522 0b61 02       		.uleb128 0x2
 3523 0b62 91       		.byte	0x91
 3524 0b63 6C       		.sleb128 -20
 3525 0b64 1E       		.uleb128 0x1e
 3526 0b65 79000000 		.4byte	.LASF120
 3527 0b69 01       		.byte	0x1
 3528 0b6a A602     		.2byte	0x2a6
 3529 0b6c 17010000 		.4byte	0x117
 3530 0b70 02       		.uleb128 0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 82


 3531 0b71 91       		.byte	0x91
 3532 0b72 74       		.sleb128 -12
 3533 0b73 1E       		.uleb128 0x1e
 3534 0b74 34070000 		.4byte	.LASF131
 3535 0b78 01       		.byte	0x1
 3536 0b79 A702     		.2byte	0x2a7
 3537 0b7b 17010000 		.4byte	0x117
 3538 0b7f 05       		.uleb128 0x5
 3539 0b80 03       		.byte	0x3
 3540 0b81 38000000 		.4byte	xLastTime.5533
 3541 0b85 00       		.byte	0
 3542 0b86 24       		.uleb128 0x24
 3543 0b87 C8040000 		.4byte	.LASF132
 3544 0b8b 01       		.byte	0x1
 3545 0b8c BB02     		.2byte	0x2bb
 3546 0b8e 01010000 		.4byte	0x101
 3547 0b92 00000000 		.4byte	.LFB16
 3548 0b96 84000000 		.4byte	.LFE16-.LFB16
 3549 0b9a 01       		.uleb128 0x1
 3550 0b9b 9C       		.byte	0x9c
 3551 0b9c EC0B0000 		.4byte	0xbec
 3552 0ba0 1D       		.uleb128 0x1d
 3553 0ba1 20080000 		.4byte	.LASF88
 3554 0ba5 01       		.byte	0x1
 3555 0ba6 BB02     		.2byte	0x2bb
 3556 0ba8 660A0000 		.4byte	0xa66
 3557 0bac 02       		.uleb128 0x2
 3558 0bad 91       		.byte	0x91
 3559 0bae 6C       		.sleb128 -20
 3560 0baf 1D       		.uleb128 0x1d
 3561 0bb0 5A020000 		.4byte	.LASF133
 3562 0bb4 01       		.byte	0x1
 3563 0bb5 BC02     		.2byte	0x2bc
 3564 0bb7 FB060000 		.4byte	0x6fb
 3565 0bbb 02       		.uleb128 0x2
 3566 0bbc 91       		.byte	0x91
 3567 0bbd 68       		.sleb128 -24
 3568 0bbe 1D       		.uleb128 0x1d
 3569 0bbf 79000000 		.4byte	.LASF120
 3570 0bc3 01       		.byte	0x1
 3571 0bc4 BD02     		.2byte	0x2bd
 3572 0bc6 FB060000 		.4byte	0x6fb
 3573 0bca 02       		.uleb128 0x2
 3574 0bcb 91       		.byte	0x91
 3575 0bcc 64       		.sleb128 -28
 3576 0bcd 1D       		.uleb128 0x1d
 3577 0bce 26000000 		.4byte	.LASF134
 3578 0bd2 01       		.byte	0x1
 3579 0bd3 BE02     		.2byte	0x2be
 3580 0bd5 FB060000 		.4byte	0x6fb
 3581 0bd9 02       		.uleb128 0x2
 3582 0bda 91       		.byte	0x91
 3583 0bdb 60       		.sleb128 -32
 3584 0bdc 1E       		.uleb128 0x1e
 3585 0bdd EB060000 		.4byte	.LASF135
 3586 0be1 01       		.byte	0x1
 3587 0be2 C002     		.2byte	0x2c0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 83


 3588 0be4 01010000 		.4byte	0x101
 3589 0be8 02       		.uleb128 0x2
 3590 0be9 91       		.byte	0x91
 3591 0bea 74       		.sleb128 -12
 3592 0beb 00       		.byte	0
 3593 0bec 1F       		.uleb128 0x1f
 3594 0bed 10070000 		.4byte	.LASF136
 3595 0bf1 01       		.byte	0x1
 3596 0bf2 E702     		.2byte	0x2e7
 3597 0bf4 00000000 		.4byte	.LFB17
 3598 0bf8 6C010000 		.4byte	.LFE17-.LFB17
 3599 0bfc 01       		.uleb128 0x1
 3600 0bfd 9C       		.byte	0x9c
 3601 0bfe 4E0C0000 		.4byte	0xc4e
 3602 0c02 1E       		.uleb128 0x1e
 3603 0c03 6D070000 		.4byte	.LASF111
 3604 0c07 01       		.byte	0x1
 3605 0c08 E902     		.2byte	0x2e9
 3606 0c0a 14060000 		.4byte	0x614
 3607 0c0e 02       		.uleb128 0x2
 3608 0c0f 91       		.byte	0x91
 3609 0c10 60       		.sleb128 -32
 3610 0c11 1E       		.uleb128 0x1e
 3611 0c12 20080000 		.4byte	.LASF88
 3612 0c16 01       		.byte	0x1
 3613 0c17 EA02     		.2byte	0x2ea
 3614 0c19 CC050000 		.4byte	0x5cc
 3615 0c1d 02       		.uleb128 0x2
 3616 0c1e 91       		.byte	0x91
 3617 0c1f 74       		.sleb128 -12
 3618 0c20 1E       		.uleb128 0x1e
 3619 0c21 70050000 		.4byte	.LASF126
 3620 0c25 01       		.byte	0x1
 3621 0c26 EB02     		.2byte	0x2eb
 3622 0c28 01010000 		.4byte	0x101
 3623 0c2c 02       		.uleb128 0x2
 3624 0c2d 91       		.byte	0x91
 3625 0c2e 5C       		.sleb128 -36
 3626 0c2f 1E       		.uleb128 0x1e
 3627 0c30 08080000 		.4byte	.LASF121
 3628 0c34 01       		.byte	0x1
 3629 0c35 EB02     		.2byte	0x2eb
 3630 0c37 01010000 		.4byte	0x101
 3631 0c3b 02       		.uleb128 0x2
 3632 0c3c 91       		.byte	0x91
 3633 0c3d 6C       		.sleb128 -20
 3634 0c3e 1E       		.uleb128 0x1e
 3635 0c3f 79000000 		.4byte	.LASF120
 3636 0c43 01       		.byte	0x1
 3637 0c44 EC02     		.2byte	0x2ec
 3638 0c46 17010000 		.4byte	0x117
 3639 0c4a 02       		.uleb128 0x2
 3640 0c4b 91       		.byte	0x91
 3641 0c4c 70       		.sleb128 -16
 3642 0c4d 00       		.byte	0
 3643 0c4e 1F       		.uleb128 0x1f
 3644 0c4f D2050000 		.4byte	.LASF137
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 84


 3645 0c53 01       		.byte	0x1
 3646 0c54 7D03     		.2byte	0x37d
 3647 0c56 00000000 		.4byte	.LFB18
 3648 0c5a C0000000 		.4byte	.LFE18-.LFB18
 3649 0c5e 01       		.uleb128 0x1
 3650 0c5f 9C       		.byte	0x9c
 3651 0c60 B00C0000 		.4byte	0xcb0
 3652 0c64 1E       		.uleb128 0x1e
 3653 0c65 BE060000 		.4byte	.LASF119
 3654 0c69 01       		.byte	0x1
 3655 0c6a 7F03     		.2byte	0x37f
 3656 0c6c 17010000 		.4byte	0x117
 3657 0c70 02       		.uleb128 0x2
 3658 0c71 91       		.byte	0x91
 3659 0c72 74       		.sleb128 -12
 3660 0c73 1E       		.uleb128 0x1e
 3661 0c74 C7070000 		.4byte	.LASF138
 3662 0c78 01       		.byte	0x1
 3663 0c79 7F03     		.2byte	0x37f
 3664 0c7b 17010000 		.4byte	0x117
 3665 0c7f 02       		.uleb128 0x2
 3666 0c80 91       		.byte	0x91
 3667 0c81 6C       		.sleb128 -20
 3668 0c82 1E       		.uleb128 0x1e
 3669 0c83 34080000 		.4byte	.LASF139
 3670 0c87 01       		.byte	0x1
 3671 0c88 8003     		.2byte	0x380
 3672 0c8a B00C0000 		.4byte	0xcb0
 3673 0c8e 02       		.uleb128 0x2
 3674 0c8f 91       		.byte	0x91
 3675 0c90 64       		.sleb128 -28
 3676 0c91 1E       		.uleb128 0x1e
 3677 0c92 20080000 		.4byte	.LASF88
 3678 0c96 01       		.byte	0x1
 3679 0c97 8103     		.2byte	0x381
 3680 0c99 CC050000 		.4byte	0x5cc
 3681 0c9d 02       		.uleb128 0x2
 3682 0c9e 91       		.byte	0x91
 3683 0c9f 70       		.sleb128 -16
 3684 0ca0 1E       		.uleb128 0x1e
 3685 0ca1 08080000 		.4byte	.LASF121
 3686 0ca5 01       		.byte	0x1
 3687 0ca6 8203     		.2byte	0x382
 3688 0ca8 01010000 		.4byte	0x101
 3689 0cac 02       		.uleb128 0x2
 3690 0cad 91       		.byte	0x91
 3691 0cae 68       		.sleb128 -24
 3692 0caf 00       		.byte	0
 3693 0cb0 06       		.uleb128 0x6
 3694 0cb1 04       		.byte	0x4
 3695 0cb2 D2040000 		.4byte	0x4d2
 3696 0cb6 1F       		.uleb128 0x1f
 3697 0cb7 62080000 		.4byte	.LASF140
 3698 0cbb 01       		.byte	0x1
 3699 0cbc B903     		.2byte	0x3b9
 3700 0cbe 00000000 		.4byte	.LFB19
 3701 0cc2 88000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 85


 3702 0cc6 01       		.uleb128 0x1
 3703 0cc7 9C       		.byte	0x9c
 3704 0cc8 FB0C0000 		.4byte	0xcfb
 3705 0ccc 1B       		.uleb128 0x1b
 3706 0ccd 2E000000 		.4byte	.LBB4
 3707 0cd1 18000000 		.4byte	.LBE4-.LBB4
 3708 0cd5 1E       		.uleb128 0x1e
 3709 0cd6 82000000 		.4byte	.LASF141
 3710 0cda 01       		.byte	0x1
 3711 0cdb CB03     		.2byte	0x3cb
 3712 0cdd 86030000 		.4byte	0x386
 3713 0ce1 05       		.uleb128 0x5
 3714 0ce2 03       		.byte	0x3
 3715 0ce3 B4000000 		.4byte	xStaticTimerQueue.5581
 3716 0ce7 1E       		.uleb128 0x1e
 3717 0ce8 29060000 		.4byte	.LASF142
 3718 0cec 01       		.byte	0x1
 3719 0ced CC03     		.2byte	0x3cc
 3720 0cef FB0C0000 		.4byte	0xcfb
 3721 0cf3 05       		.uleb128 0x5
 3722 0cf4 03       		.byte	0x3
 3723 0cf5 3C000000 		.4byte	ucStaticTimerQueueStorage.5582
 3724 0cf9 00       		.byte	0
 3725 0cfa 00       		.byte	0
 3726 0cfb 0C       		.uleb128 0xc
 3727 0cfc B9000000 		.4byte	0xb9
 3728 0d00 0B0D0000 		.4byte	0xd0b
 3729 0d04 0D       		.uleb128 0xd
 3730 0d05 9E000000 		.4byte	0x9e
 3731 0d09 77       		.byte	0x77
 3732 0d0a 00       		.byte	0
 3733 0d0b 1C       		.uleb128 0x1c
 3734 0d0c AD030000 		.4byte	.LASF143
 3735 0d10 01       		.byte	0x1
 3736 0d11 EC03     		.2byte	0x3ec
 3737 0d13 01010000 		.4byte	0x101
 3738 0d17 00000000 		.4byte	.LFB20
 3739 0d1b 48000000 		.4byte	.LFE20-.LFB20
 3740 0d1f 01       		.uleb128 0x1
 3741 0d20 9C       		.byte	0x9c
 3742 0d21 530D0000 		.4byte	0xd53
 3743 0d25 1D       		.uleb128 0x1d
 3744 0d26 96040000 		.4byte	.LASF106
 3745 0d2a 01       		.byte	0x1
 3746 0d2b EC03     		.2byte	0x3ec
 3747 0d2d 0F050000 		.4byte	0x50f
 3748 0d31 02       		.uleb128 0x2
 3749 0d32 91       		.byte	0x91
 3750 0d33 6C       		.sleb128 -20
 3751 0d34 1E       		.uleb128 0x1e
 3752 0d35 E5070000 		.4byte	.LASF94
 3753 0d39 01       		.byte	0x1
 3754 0d3a EE03     		.2byte	0x3ee
 3755 0d3c 01010000 		.4byte	0x101
 3756 0d40 02       		.uleb128 0x2
 3757 0d41 91       		.byte	0x91
 3758 0d42 74       		.sleb128 -12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 86


 3759 0d43 1E       		.uleb128 0x1e
 3760 0d44 20080000 		.4byte	.LASF88
 3761 0d48 01       		.byte	0x1
 3762 0d49 EF03     		.2byte	0x3ef
 3763 0d4b CC050000 		.4byte	0x5cc
 3764 0d4f 02       		.uleb128 0x2
 3765 0d50 91       		.byte	0x91
 3766 0d51 70       		.sleb128 -16
 3767 0d52 00       		.byte	0
 3768 0d53 1C       		.uleb128 0x1c
 3769 0d54 D6030000 		.4byte	.LASF144
 3770 0d58 01       		.byte	0x1
 3771 0d59 0504     		.2byte	0x405
 3772 0d5b A5000000 		.4byte	0xa5
 3773 0d5f 00000000 		.4byte	.LFB21
 3774 0d63 34000000 		.4byte	.LFE21-.LFB21
 3775 0d67 01       		.uleb128 0x1
 3776 0d68 9C       		.byte	0x9c
 3777 0d69 9B0D0000 		.4byte	0xd9b
 3778 0d6d 1D       		.uleb128 0x1d
 3779 0d6e 96040000 		.4byte	.LASF106
 3780 0d72 01       		.byte	0x1
 3781 0d73 0504     		.2byte	0x405
 3782 0d75 9B0D0000 		.4byte	0xd9b
 3783 0d79 02       		.uleb128 0x2
 3784 0d7a 91       		.byte	0x91
 3785 0d7b 6C       		.sleb128 -20
 3786 0d7c 1E       		.uleb128 0x1e
 3787 0d7d 20080000 		.4byte	.LASF88
 3788 0d81 01       		.byte	0x1
 3789 0d82 0704     		.2byte	0x407
 3790 0d84 660A0000 		.4byte	0xa66
 3791 0d88 02       		.uleb128 0x2
 3792 0d89 91       		.byte	0x91
 3793 0d8a 74       		.sleb128 -12
 3794 0d8b 1E       		.uleb128 0x1e
 3795 0d8c 95030000 		.4byte	.LASF145
 3796 0d90 01       		.byte	0x1
 3797 0d91 0804     		.2byte	0x408
 3798 0d93 A5000000 		.4byte	0xa5
 3799 0d97 02       		.uleb128 0x2
 3800 0d98 91       		.byte	0x91
 3801 0d99 70       		.sleb128 -16
 3802 0d9a 00       		.byte	0
 3803 0d9b 07       		.uleb128 0x7
 3804 0d9c 0F050000 		.4byte	0x50f
 3805 0da0 22       		.uleb128 0x22
 3806 0da1 5F050000 		.4byte	.LASF147
 3807 0da5 01       		.byte	0x1
 3808 0da6 1604     		.2byte	0x416
 3809 0da8 00000000 		.4byte	.LFB22
 3810 0dac 34000000 		.4byte	.LFE22-.LFB22
 3811 0db0 01       		.uleb128 0x1
 3812 0db1 9C       		.byte	0x9c
 3813 0db2 E40D0000 		.4byte	0xde4
 3814 0db6 1D       		.uleb128 0x1d
 3815 0db7 96040000 		.4byte	.LASF106
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 87


 3816 0dbb 01       		.byte	0x1
 3817 0dbc 1604     		.2byte	0x416
 3818 0dbe 0F050000 		.4byte	0x50f
 3819 0dc2 02       		.uleb128 0x2
 3820 0dc3 91       		.byte	0x91
 3821 0dc4 6C       		.sleb128 -20
 3822 0dc5 1D       		.uleb128 0x1d
 3823 0dc6 BF050000 		.4byte	.LASF148
 3824 0dca 01       		.byte	0x1
 3825 0dcb 1704     		.2byte	0x417
 3826 0dcd A5000000 		.4byte	0xa5
 3827 0dd1 02       		.uleb128 0x2
 3828 0dd2 91       		.byte	0x91
 3829 0dd3 68       		.sleb128 -24
 3830 0dd4 1E       		.uleb128 0x1e
 3831 0dd5 20080000 		.4byte	.LASF88
 3832 0dd9 01       		.byte	0x1
 3833 0dda 1904     		.2byte	0x419
 3834 0ddc 660A0000 		.4byte	0xa66
 3835 0de0 02       		.uleb128 0x2
 3836 0de1 91       		.byte	0x91
 3837 0de2 74       		.sleb128 -12
 3838 0de3 00       		.byte	0
 3839 0de4 1A       		.uleb128 0x1a
 3840 0de5 A4040000 		.4byte	.LASF149
 3841 0de9 01       		.byte	0x1
 3842 0dea 86       		.byte	0x86
 3843 0deb D2040000 		.4byte	0x4d2
 3844 0def 05       		.uleb128 0x5
 3845 0df0 03       		.byte	0x3
 3846 0df1 00000000 		.4byte	xActiveTimerList1
 3847 0df5 1A       		.uleb128 0x1a
 3848 0df6 B6040000 		.4byte	.LASF150
 3849 0dfa 01       		.byte	0x1
 3850 0dfb 87       		.byte	0x87
 3851 0dfc D2040000 		.4byte	0x4d2
 3852 0e00 05       		.uleb128 0x5
 3853 0e01 03       		.byte	0x3
 3854 0e02 14000000 		.4byte	xActiveTimerList2
 3855 0e06 1A       		.uleb128 0x1a
 3856 0e07 3E070000 		.4byte	.LASF151
 3857 0e0b 01       		.byte	0x1
 3858 0e0c 88       		.byte	0x88
 3859 0e0d B00C0000 		.4byte	0xcb0
 3860 0e11 05       		.uleb128 0x5
 3861 0e12 03       		.byte	0x3
 3862 0e13 28000000 		.4byte	pxCurrentTimerList
 3863 0e17 1A       		.uleb128 0x1a
 3864 0e18 10040000 		.4byte	.LASF152
 3865 0e1c 01       		.byte	0x1
 3866 0e1d 89       		.byte	0x89
 3867 0e1e B00C0000 		.4byte	0xcb0
 3868 0e22 05       		.uleb128 0x5
 3869 0e23 03       		.byte	0x3
 3870 0e24 2C000000 		.4byte	pxOverflowTimerList
 3871 0e28 1A       		.uleb128 0x1a
 3872 0e29 40020000 		.4byte	.LASF153
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 88


 3873 0e2d 01       		.byte	0x1
 3874 0e2e 8C       		.byte	0x8c
 3875 0e2f F9040000 		.4byte	0x4f9
 3876 0e33 05       		.uleb128 0x5
 3877 0e34 03       		.byte	0x3
 3878 0e35 30000000 		.4byte	xTimerQueue
 3879 0e39 1A       		.uleb128 0x1a
 3880 0e3a A0060000 		.4byte	.LASF154
 3881 0e3e 01       		.byte	0x1
 3882 0e3f 8D       		.byte	0x8d
 3883 0e40 DD040000 		.4byte	0x4dd
 3884 0e44 05       		.uleb128 0x5
 3885 0e45 03       		.byte	0x3
 3886 0e46 34000000 		.4byte	xTimerTaskHandle
 3887 0e4a 25       		.uleb128 0x25
 3888 0e4b 7800     		.ascii	"x\000"
 3889 0e4d 0C       		.byte	0xc
 3890 0e4e 04       		.byte	0x4
 3891 0e4f C4000000 		.4byte	0xc4
 3892 0e53 05       		.uleb128 0x5
 3893 0e54 03       		.byte	0x3
 3894 0e55 00000000 		.4byte	x
 3895 0e59 00       		.byte	0
 3896              		.section	.debug_abbrev,"",%progbits
 3897              	.Ldebug_abbrev0:
 3898 0000 01       		.uleb128 0x1
 3899 0001 11       		.uleb128 0x11
 3900 0002 01       		.byte	0x1
 3901 0003 25       		.uleb128 0x25
 3902 0004 0E       		.uleb128 0xe
 3903 0005 13       		.uleb128 0x13
 3904 0006 0B       		.uleb128 0xb
 3905 0007 03       		.uleb128 0x3
 3906 0008 0E       		.uleb128 0xe
 3907 0009 1B       		.uleb128 0x1b
 3908 000a 0E       		.uleb128 0xe
 3909 000b 55       		.uleb128 0x55
 3910 000c 17       		.uleb128 0x17
 3911 000d 11       		.uleb128 0x11
 3912 000e 01       		.uleb128 0x1
 3913 000f 10       		.uleb128 0x10
 3914 0010 17       		.uleb128 0x17
 3915 0011 00       		.byte	0
 3916 0012 00       		.byte	0
 3917 0013 02       		.uleb128 0x2
 3918 0014 16       		.uleb128 0x16
 3919 0015 00       		.byte	0
 3920 0016 03       		.uleb128 0x3
 3921 0017 0E       		.uleb128 0xe
 3922 0018 3A       		.uleb128 0x3a
 3923 0019 0B       		.uleb128 0xb
 3924 001a 3B       		.uleb128 0x3b
 3925 001b 0B       		.uleb128 0xb
 3926 001c 49       		.uleb128 0x49
 3927 001d 13       		.uleb128 0x13
 3928 001e 00       		.byte	0
 3929 001f 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 89


 3930 0020 03       		.uleb128 0x3
 3931 0021 24       		.uleb128 0x24
 3932 0022 00       		.byte	0
 3933 0023 0B       		.uleb128 0xb
 3934 0024 0B       		.uleb128 0xb
 3935 0025 3E       		.uleb128 0x3e
 3936 0026 0B       		.uleb128 0xb
 3937 0027 03       		.uleb128 0x3
 3938 0028 0E       		.uleb128 0xe
 3939 0029 00       		.byte	0
 3940 002a 00       		.byte	0
 3941 002b 04       		.uleb128 0x4
 3942 002c 24       		.uleb128 0x24
 3943 002d 00       		.byte	0
 3944 002e 0B       		.uleb128 0xb
 3945 002f 0B       		.uleb128 0xb
 3946 0030 3E       		.uleb128 0x3e
 3947 0031 0B       		.uleb128 0xb
 3948 0032 03       		.uleb128 0x3
 3949 0033 08       		.uleb128 0x8
 3950 0034 00       		.byte	0
 3951 0035 00       		.byte	0
 3952 0036 05       		.uleb128 0x5
 3953 0037 0F       		.uleb128 0xf
 3954 0038 00       		.byte	0
 3955 0039 0B       		.uleb128 0xb
 3956 003a 0B       		.uleb128 0xb
 3957 003b 00       		.byte	0
 3958 003c 00       		.byte	0
 3959 003d 06       		.uleb128 0x6
 3960 003e 0F       		.uleb128 0xf
 3961 003f 00       		.byte	0
 3962 0040 0B       		.uleb128 0xb
 3963 0041 0B       		.uleb128 0xb
 3964 0042 49       		.uleb128 0x49
 3965 0043 13       		.uleb128 0x13
 3966 0044 00       		.byte	0
 3967 0045 00       		.byte	0
 3968 0046 07       		.uleb128 0x7
 3969 0047 26       		.uleb128 0x26
 3970 0048 00       		.byte	0
 3971 0049 49       		.uleb128 0x49
 3972 004a 13       		.uleb128 0x13
 3973 004b 00       		.byte	0
 3974 004c 00       		.byte	0
 3975 004d 08       		.uleb128 0x8
 3976 004e 15       		.uleb128 0x15
 3977 004f 01       		.byte	0x1
 3978 0050 27       		.uleb128 0x27
 3979 0051 19       		.uleb128 0x19
 3980 0052 01       		.uleb128 0x1
 3981 0053 13       		.uleb128 0x13
 3982 0054 00       		.byte	0
 3983 0055 00       		.byte	0
 3984 0056 09       		.uleb128 0x9
 3985 0057 05       		.uleb128 0x5
 3986 0058 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 90


 3987 0059 49       		.uleb128 0x49
 3988 005a 13       		.uleb128 0x13
 3989 005b 00       		.byte	0
 3990 005c 00       		.byte	0
 3991 005d 0A       		.uleb128 0xa
 3992 005e 13       		.uleb128 0x13
 3993 005f 01       		.byte	0x1
 3994 0060 03       		.uleb128 0x3
 3995 0061 0E       		.uleb128 0xe
 3996 0062 0B       		.uleb128 0xb
 3997 0063 0B       		.uleb128 0xb
 3998 0064 3A       		.uleb128 0x3a
 3999 0065 0B       		.uleb128 0xb
 4000 0066 3B       		.uleb128 0x3b
 4001 0067 05       		.uleb128 0x5
 4002 0068 01       		.uleb128 0x1
 4003 0069 13       		.uleb128 0x13
 4004 006a 00       		.byte	0
 4005 006b 00       		.byte	0
 4006 006c 0B       		.uleb128 0xb
 4007 006d 0D       		.uleb128 0xd
 4008 006e 00       		.byte	0
 4009 006f 03       		.uleb128 0x3
 4010 0070 0E       		.uleb128 0xe
 4011 0071 3A       		.uleb128 0x3a
 4012 0072 0B       		.uleb128 0xb
 4013 0073 3B       		.uleb128 0x3b
 4014 0074 05       		.uleb128 0x5
 4015 0075 49       		.uleb128 0x49
 4016 0076 13       		.uleb128 0x13
 4017 0077 38       		.uleb128 0x38
 4018 0078 0B       		.uleb128 0xb
 4019 0079 00       		.byte	0
 4020 007a 00       		.byte	0
 4021 007b 0C       		.uleb128 0xc
 4022 007c 01       		.uleb128 0x1
 4023 007d 01       		.byte	0x1
 4024 007e 49       		.uleb128 0x49
 4025 007f 13       		.uleb128 0x13
 4026 0080 01       		.uleb128 0x1
 4027 0081 13       		.uleb128 0x13
 4028 0082 00       		.byte	0
 4029 0083 00       		.byte	0
 4030 0084 0D       		.uleb128 0xd
 4031 0085 21       		.uleb128 0x21
 4032 0086 00       		.byte	0
 4033 0087 49       		.uleb128 0x49
 4034 0088 13       		.uleb128 0x13
 4035 0089 2F       		.uleb128 0x2f
 4036 008a 0B       		.uleb128 0xb
 4037 008b 00       		.byte	0
 4038 008c 00       		.byte	0
 4039 008d 0E       		.uleb128 0xe
 4040 008e 16       		.uleb128 0x16
 4041 008f 00       		.byte	0
 4042 0090 03       		.uleb128 0x3
 4043 0091 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 91


 4044 0092 3A       		.uleb128 0x3a
 4045 0093 0B       		.uleb128 0xb
 4046 0094 3B       		.uleb128 0x3b
 4047 0095 05       		.uleb128 0x5
 4048 0096 49       		.uleb128 0x49
 4049 0097 13       		.uleb128 0x13
 4050 0098 00       		.byte	0
 4051 0099 00       		.byte	0
 4052 009a 0F       		.uleb128 0xf
 4053 009b 17       		.uleb128 0x17
 4054 009c 01       		.byte	0x1
 4055 009d 0B       		.uleb128 0xb
 4056 009e 0B       		.uleb128 0xb
 4057 009f 3A       		.uleb128 0x3a
 4058 00a0 0B       		.uleb128 0xb
 4059 00a1 3B       		.uleb128 0x3b
 4060 00a2 05       		.uleb128 0x5
 4061 00a3 01       		.uleb128 0x1
 4062 00a4 13       		.uleb128 0x13
 4063 00a5 00       		.byte	0
 4064 00a6 00       		.byte	0
 4065 00a7 10       		.uleb128 0x10
 4066 00a8 0D       		.uleb128 0xd
 4067 00a9 00       		.byte	0
 4068 00aa 03       		.uleb128 0x3
 4069 00ab 0E       		.uleb128 0xe
 4070 00ac 3A       		.uleb128 0x3a
 4071 00ad 0B       		.uleb128 0xb
 4072 00ae 3B       		.uleb128 0x3b
 4073 00af 05       		.uleb128 0x5
 4074 00b0 49       		.uleb128 0x49
 4075 00b1 13       		.uleb128 0x13
 4076 00b2 00       		.byte	0
 4077 00b3 00       		.byte	0
 4078 00b4 11       		.uleb128 0x11
 4079 00b5 0D       		.uleb128 0xd
 4080 00b6 00       		.byte	0
 4081 00b7 03       		.uleb128 0x3
 4082 00b8 08       		.uleb128 0x8
 4083 00b9 3A       		.uleb128 0x3a
 4084 00ba 0B       		.uleb128 0xb
 4085 00bb 3B       		.uleb128 0x3b
 4086 00bc 05       		.uleb128 0x5
 4087 00bd 49       		.uleb128 0x49
 4088 00be 13       		.uleb128 0x13
 4089 00bf 38       		.uleb128 0x38
 4090 00c0 0B       		.uleb128 0xb
 4091 00c1 00       		.byte	0
 4092 00c2 00       		.byte	0
 4093 00c3 12       		.uleb128 0x12
 4094 00c4 13       		.uleb128 0x13
 4095 00c5 01       		.byte	0x1
 4096 00c6 03       		.uleb128 0x3
 4097 00c7 0E       		.uleb128 0xe
 4098 00c8 0B       		.uleb128 0xb
 4099 00c9 0B       		.uleb128 0xb
 4100 00ca 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 92


 4101 00cb 0B       		.uleb128 0xb
 4102 00cc 3B       		.uleb128 0x3b
 4103 00cd 0B       		.uleb128 0xb
 4104 00ce 01       		.uleb128 0x1
 4105 00cf 13       		.uleb128 0x13
 4106 00d0 00       		.byte	0
 4107 00d1 00       		.byte	0
 4108 00d2 13       		.uleb128 0x13
 4109 00d3 0D       		.uleb128 0xd
 4110 00d4 00       		.byte	0
 4111 00d5 03       		.uleb128 0x3
 4112 00d6 0E       		.uleb128 0xe
 4113 00d7 3A       		.uleb128 0x3a
 4114 00d8 0B       		.uleb128 0xb
 4115 00d9 3B       		.uleb128 0x3b
 4116 00da 0B       		.uleb128 0xb
 4117 00db 49       		.uleb128 0x49
 4118 00dc 13       		.uleb128 0x13
 4119 00dd 38       		.uleb128 0x38
 4120 00de 0B       		.uleb128 0xb
 4121 00df 00       		.byte	0
 4122 00e0 00       		.byte	0
 4123 00e1 14       		.uleb128 0x14
 4124 00e2 35       		.uleb128 0x35
 4125 00e3 00       		.byte	0
 4126 00e4 49       		.uleb128 0x49
 4127 00e5 13       		.uleb128 0x13
 4128 00e6 00       		.byte	0
 4129 00e7 00       		.byte	0
 4130 00e8 15       		.uleb128 0x15
 4131 00e9 13       		.uleb128 0x13
 4132 00ea 00       		.byte	0
 4133 00eb 03       		.uleb128 0x3
 4134 00ec 0E       		.uleb128 0xe
 4135 00ed 3C       		.uleb128 0x3c
 4136 00ee 19       		.uleb128 0x19
 4137 00ef 00       		.byte	0
 4138 00f0 00       		.byte	0
 4139 00f1 16       		.uleb128 0x16
 4140 00f2 17       		.uleb128 0x17
 4141 00f3 01       		.byte	0x1
 4142 00f4 0B       		.uleb128 0xb
 4143 00f5 0B       		.uleb128 0xb
 4144 00f6 3A       		.uleb128 0x3a
 4145 00f7 0B       		.uleb128 0xb
 4146 00f8 3B       		.uleb128 0x3b
 4147 00f9 0B       		.uleb128 0xb
 4148 00fa 01       		.uleb128 0x1
 4149 00fb 13       		.uleb128 0x13
 4150 00fc 00       		.byte	0
 4151 00fd 00       		.byte	0
 4152 00fe 17       		.uleb128 0x17
 4153 00ff 0D       		.uleb128 0xd
 4154 0100 00       		.byte	0
 4155 0101 03       		.uleb128 0x3
 4156 0102 0E       		.uleb128 0xe
 4157 0103 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 93


 4158 0104 0B       		.uleb128 0xb
 4159 0105 3B       		.uleb128 0x3b
 4160 0106 0B       		.uleb128 0xb
 4161 0107 49       		.uleb128 0x49
 4162 0108 13       		.uleb128 0x13
 4163 0109 00       		.byte	0
 4164 010a 00       		.byte	0
 4165 010b 18       		.uleb128 0x18
 4166 010c 0D       		.uleb128 0xd
 4167 010d 00       		.byte	0
 4168 010e 03       		.uleb128 0x3
 4169 010f 08       		.uleb128 0x8
 4170 0110 3A       		.uleb128 0x3a
 4171 0111 0B       		.uleb128 0xb
 4172 0112 3B       		.uleb128 0x3b
 4173 0113 0B       		.uleb128 0xb
 4174 0114 49       		.uleb128 0x49
 4175 0115 13       		.uleb128 0x13
 4176 0116 38       		.uleb128 0x38
 4177 0117 0B       		.uleb128 0xb
 4178 0118 00       		.byte	0
 4179 0119 00       		.byte	0
 4180 011a 19       		.uleb128 0x19
 4181 011b 2E       		.uleb128 0x2e
 4182 011c 01       		.byte	0x1
 4183 011d 3F       		.uleb128 0x3f
 4184 011e 19       		.uleb128 0x19
 4185 011f 03       		.uleb128 0x3
 4186 0120 0E       		.uleb128 0xe
 4187 0121 3A       		.uleb128 0x3a
 4188 0122 0B       		.uleb128 0xb
 4189 0123 3B       		.uleb128 0x3b
 4190 0124 0B       		.uleb128 0xb
 4191 0125 27       		.uleb128 0x27
 4192 0126 19       		.uleb128 0x19
 4193 0127 49       		.uleb128 0x49
 4194 0128 13       		.uleb128 0x13
 4195 0129 11       		.uleb128 0x11
 4196 012a 01       		.uleb128 0x1
 4197 012b 12       		.uleb128 0x12
 4198 012c 06       		.uleb128 0x6
 4199 012d 40       		.uleb128 0x40
 4200 012e 18       		.uleb128 0x18
 4201 012f 9642     		.uleb128 0x2116
 4202 0131 19       		.uleb128 0x19
 4203 0132 01       		.uleb128 0x1
 4204 0133 13       		.uleb128 0x13
 4205 0134 00       		.byte	0
 4206 0135 00       		.byte	0
 4207 0136 1A       		.uleb128 0x1a
 4208 0137 34       		.uleb128 0x34
 4209 0138 00       		.byte	0
 4210 0139 03       		.uleb128 0x3
 4211 013a 0E       		.uleb128 0xe
 4212 013b 3A       		.uleb128 0x3a
 4213 013c 0B       		.uleb128 0xb
 4214 013d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 94


 4215 013e 0B       		.uleb128 0xb
 4216 013f 49       		.uleb128 0x49
 4217 0140 13       		.uleb128 0x13
 4218 0141 02       		.uleb128 0x2
 4219 0142 18       		.uleb128 0x18
 4220 0143 00       		.byte	0
 4221 0144 00       		.byte	0
 4222 0145 1B       		.uleb128 0x1b
 4223 0146 0B       		.uleb128 0xb
 4224 0147 01       		.byte	0x1
 4225 0148 11       		.uleb128 0x11
 4226 0149 01       		.uleb128 0x1
 4227 014a 12       		.uleb128 0x12
 4228 014b 06       		.uleb128 0x6
 4229 014c 00       		.byte	0
 4230 014d 00       		.byte	0
 4231 014e 1C       		.uleb128 0x1c
 4232 014f 2E       		.uleb128 0x2e
 4233 0150 01       		.byte	0x1
 4234 0151 3F       		.uleb128 0x3f
 4235 0152 19       		.uleb128 0x19
 4236 0153 03       		.uleb128 0x3
 4237 0154 0E       		.uleb128 0xe
 4238 0155 3A       		.uleb128 0x3a
 4239 0156 0B       		.uleb128 0xb
 4240 0157 3B       		.uleb128 0x3b
 4241 0158 05       		.uleb128 0x5
 4242 0159 27       		.uleb128 0x27
 4243 015a 19       		.uleb128 0x19
 4244 015b 49       		.uleb128 0x49
 4245 015c 13       		.uleb128 0x13
 4246 015d 11       		.uleb128 0x11
 4247 015e 01       		.uleb128 0x1
 4248 015f 12       		.uleb128 0x12
 4249 0160 06       		.uleb128 0x6
 4250 0161 40       		.uleb128 0x40
 4251 0162 18       		.uleb128 0x18
 4252 0163 9642     		.uleb128 0x2116
 4253 0165 19       		.uleb128 0x19
 4254 0166 01       		.uleb128 0x1
 4255 0167 13       		.uleb128 0x13
 4256 0168 00       		.byte	0
 4257 0169 00       		.byte	0
 4258 016a 1D       		.uleb128 0x1d
 4259 016b 05       		.uleb128 0x5
 4260 016c 00       		.byte	0
 4261 016d 03       		.uleb128 0x3
 4262 016e 0E       		.uleb128 0xe
 4263 016f 3A       		.uleb128 0x3a
 4264 0170 0B       		.uleb128 0xb
 4265 0171 3B       		.uleb128 0x3b
 4266 0172 05       		.uleb128 0x5
 4267 0173 49       		.uleb128 0x49
 4268 0174 13       		.uleb128 0x13
 4269 0175 02       		.uleb128 0x2
 4270 0176 18       		.uleb128 0x18
 4271 0177 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 95


 4272 0178 00       		.byte	0
 4273 0179 1E       		.uleb128 0x1e
 4274 017a 34       		.uleb128 0x34
 4275 017b 00       		.byte	0
 4276 017c 03       		.uleb128 0x3
 4277 017d 0E       		.uleb128 0xe
 4278 017e 3A       		.uleb128 0x3a
 4279 017f 0B       		.uleb128 0xb
 4280 0180 3B       		.uleb128 0x3b
 4281 0181 05       		.uleb128 0x5
 4282 0182 49       		.uleb128 0x49
 4283 0183 13       		.uleb128 0x13
 4284 0184 02       		.uleb128 0x2
 4285 0185 18       		.uleb128 0x18
 4286 0186 00       		.byte	0
 4287 0187 00       		.byte	0
 4288 0188 1F       		.uleb128 0x1f
 4289 0189 2E       		.uleb128 0x2e
 4290 018a 01       		.byte	0x1
 4291 018b 03       		.uleb128 0x3
 4292 018c 0E       		.uleb128 0xe
 4293 018d 3A       		.uleb128 0x3a
 4294 018e 0B       		.uleb128 0xb
 4295 018f 3B       		.uleb128 0x3b
 4296 0190 05       		.uleb128 0x5
 4297 0191 27       		.uleb128 0x27
 4298 0192 19       		.uleb128 0x19
 4299 0193 11       		.uleb128 0x11
 4300 0194 01       		.uleb128 0x1
 4301 0195 12       		.uleb128 0x12
 4302 0196 06       		.uleb128 0x6
 4303 0197 40       		.uleb128 0x40
 4304 0198 18       		.uleb128 0x18
 4305 0199 9642     		.uleb128 0x2116
 4306 019b 19       		.uleb128 0x19
 4307 019c 01       		.uleb128 0x1
 4308 019d 13       		.uleb128 0x13
 4309 019e 00       		.byte	0
 4310 019f 00       		.byte	0
 4311 01a0 20       		.uleb128 0x20
 4312 01a1 2E       		.uleb128 0x2e
 4313 01a2 00       		.byte	0
 4314 01a3 3F       		.uleb128 0x3f
 4315 01a4 19       		.uleb128 0x19
 4316 01a5 03       		.uleb128 0x3
 4317 01a6 0E       		.uleb128 0xe
 4318 01a7 3A       		.uleb128 0x3a
 4319 01a8 0B       		.uleb128 0xb
 4320 01a9 3B       		.uleb128 0x3b
 4321 01aa 05       		.uleb128 0x5
 4322 01ab 27       		.uleb128 0x27
 4323 01ac 19       		.uleb128 0x19
 4324 01ad 49       		.uleb128 0x49
 4325 01ae 13       		.uleb128 0x13
 4326 01af 11       		.uleb128 0x11
 4327 01b0 01       		.uleb128 0x1
 4328 01b1 12       		.uleb128 0x12
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 96


 4329 01b2 06       		.uleb128 0x6
 4330 01b3 40       		.uleb128 0x40
 4331 01b4 18       		.uleb128 0x18
 4332 01b5 9742     		.uleb128 0x2117
 4333 01b7 19       		.uleb128 0x19
 4334 01b8 00       		.byte	0
 4335 01b9 00       		.byte	0
 4336 01ba 21       		.uleb128 0x21
 4337 01bb 2E       		.uleb128 0x2e
 4338 01bc 01       		.byte	0x1
 4339 01bd 3F       		.uleb128 0x3f
 4340 01be 19       		.uleb128 0x19
 4341 01bf 03       		.uleb128 0x3
 4342 01c0 0E       		.uleb128 0xe
 4343 01c1 3A       		.uleb128 0x3a
 4344 01c2 0B       		.uleb128 0xb
 4345 01c3 3B       		.uleb128 0x3b
 4346 01c4 05       		.uleb128 0x5
 4347 01c5 27       		.uleb128 0x27
 4348 01c6 19       		.uleb128 0x19
 4349 01c7 49       		.uleb128 0x49
 4350 01c8 13       		.uleb128 0x13
 4351 01c9 11       		.uleb128 0x11
 4352 01ca 01       		.uleb128 0x1
 4353 01cb 12       		.uleb128 0x12
 4354 01cc 06       		.uleb128 0x6
 4355 01cd 40       		.uleb128 0x40
 4356 01ce 18       		.uleb128 0x18
 4357 01cf 9742     		.uleb128 0x2117
 4358 01d1 19       		.uleb128 0x19
 4359 01d2 01       		.uleb128 0x1
 4360 01d3 13       		.uleb128 0x13
 4361 01d4 00       		.byte	0
 4362 01d5 00       		.byte	0
 4363 01d6 22       		.uleb128 0x22
 4364 01d7 2E       		.uleb128 0x2e
 4365 01d8 01       		.byte	0x1
 4366 01d9 3F       		.uleb128 0x3f
 4367 01da 19       		.uleb128 0x19
 4368 01db 03       		.uleb128 0x3
 4369 01dc 0E       		.uleb128 0xe
 4370 01dd 3A       		.uleb128 0x3a
 4371 01de 0B       		.uleb128 0xb
 4372 01df 3B       		.uleb128 0x3b
 4373 01e0 05       		.uleb128 0x5
 4374 01e1 27       		.uleb128 0x27
 4375 01e2 19       		.uleb128 0x19
 4376 01e3 11       		.uleb128 0x11
 4377 01e4 01       		.uleb128 0x1
 4378 01e5 12       		.uleb128 0x12
 4379 01e6 06       		.uleb128 0x6
 4380 01e7 40       		.uleb128 0x40
 4381 01e8 18       		.uleb128 0x18
 4382 01e9 9642     		.uleb128 0x2116
 4383 01eb 19       		.uleb128 0x19
 4384 01ec 01       		.uleb128 0x1
 4385 01ed 13       		.uleb128 0x13
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 97


 4386 01ee 00       		.byte	0
 4387 01ef 00       		.byte	0
 4388 01f0 23       		.uleb128 0x23
 4389 01f1 2E       		.uleb128 0x2e
 4390 01f2 01       		.byte	0x1
 4391 01f3 03       		.uleb128 0x3
 4392 01f4 0E       		.uleb128 0xe
 4393 01f5 3A       		.uleb128 0x3a
 4394 01f6 0B       		.uleb128 0xb
 4395 01f7 3B       		.uleb128 0x3b
 4396 01f8 05       		.uleb128 0x5
 4397 01f9 27       		.uleb128 0x27
 4398 01fa 19       		.uleb128 0x19
 4399 01fb 49       		.uleb128 0x49
 4400 01fc 13       		.uleb128 0x13
 4401 01fd 11       		.uleb128 0x11
 4402 01fe 01       		.uleb128 0x1
 4403 01ff 12       		.uleb128 0x12
 4404 0200 06       		.uleb128 0x6
 4405 0201 40       		.uleb128 0x40
 4406 0202 18       		.uleb128 0x18
 4407 0203 9742     		.uleb128 0x2117
 4408 0205 19       		.uleb128 0x19
 4409 0206 01       		.uleb128 0x1
 4410 0207 13       		.uleb128 0x13
 4411 0208 00       		.byte	0
 4412 0209 00       		.byte	0
 4413 020a 24       		.uleb128 0x24
 4414 020b 2E       		.uleb128 0x2e
 4415 020c 01       		.byte	0x1
 4416 020d 03       		.uleb128 0x3
 4417 020e 0E       		.uleb128 0xe
 4418 020f 3A       		.uleb128 0x3a
 4419 0210 0B       		.uleb128 0xb
 4420 0211 3B       		.uleb128 0x3b
 4421 0212 05       		.uleb128 0x5
 4422 0213 27       		.uleb128 0x27
 4423 0214 19       		.uleb128 0x19
 4424 0215 49       		.uleb128 0x49
 4425 0216 13       		.uleb128 0x13
 4426 0217 11       		.uleb128 0x11
 4427 0218 01       		.uleb128 0x1
 4428 0219 12       		.uleb128 0x12
 4429 021a 06       		.uleb128 0x6
 4430 021b 40       		.uleb128 0x40
 4431 021c 18       		.uleb128 0x18
 4432 021d 9642     		.uleb128 0x2116
 4433 021f 19       		.uleb128 0x19
 4434 0220 01       		.uleb128 0x1
 4435 0221 13       		.uleb128 0x13
 4436 0222 00       		.byte	0
 4437 0223 00       		.byte	0
 4438 0224 25       		.uleb128 0x25
 4439 0225 34       		.uleb128 0x34
 4440 0226 00       		.byte	0
 4441 0227 03       		.uleb128 0x3
 4442 0228 08       		.uleb128 0x8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 98


 4443 0229 3A       		.uleb128 0x3a
 4444 022a 0B       		.uleb128 0xb
 4445 022b 3B       		.uleb128 0x3b
 4446 022c 0B       		.uleb128 0xb
 4447 022d 49       		.uleb128 0x49
 4448 022e 13       		.uleb128 0x13
 4449 022f 3F       		.uleb128 0x3f
 4450 0230 19       		.uleb128 0x19
 4451 0231 02       		.uleb128 0x2
 4452 0232 18       		.uleb128 0x18
 4453 0233 00       		.byte	0
 4454 0234 00       		.byte	0
 4455 0235 00       		.byte	0
 4456              		.section	.debug_aranges,"",%progbits
 4457 0000 CC000000 		.4byte	0xcc
 4458 0004 0200     		.2byte	0x2
 4459 0006 00000000 		.4byte	.Ldebug_info0
 4460 000a 04       		.byte	0x4
 4461 000b 00       		.byte	0
 4462 000c 0000     		.2byte	0
 4463 000e 0000     		.2byte	0
 4464 0010 00000000 		.4byte	.LFB0
 4465 0014 84000000 		.4byte	.LFE0-.LFB0
 4466 0018 00000000 		.4byte	.LFB1
 4467 001c 46000000 		.4byte	.LFE1-.LFB1
 4468 0020 00000000 		.4byte	.LFB2
 4469 0024 64000000 		.4byte	.LFE2-.LFB2
 4470 0028 00000000 		.4byte	.LFB3
 4471 002c 6C000000 		.4byte	.LFE3-.LFB3
 4472 0030 00000000 		.4byte	.LFB4
 4473 0034 A0000000 		.4byte	.LFE4-.LFB4
 4474 0038 00000000 		.4byte	.LFB5
 4475 003c 24000000 		.4byte	.LFE5-.LFB5
 4476 0040 00000000 		.4byte	.LFB6
 4477 0044 28000000 		.4byte	.LFE6-.LFB6
 4478 0048 00000000 		.4byte	.LFB7
 4479 004c 5C000000 		.4byte	.LFE7-.LFB7
 4480 0050 00000000 		.4byte	.LFB8
 4481 0054 48000000 		.4byte	.LFE8-.LFB8
 4482 0058 00000000 		.4byte	.LFB9
 4483 005c 2C000000 		.4byte	.LFE9-.LFB9
 4484 0060 00000000 		.4byte	.LFB10
 4485 0064 28000000 		.4byte	.LFE10-.LFB10
 4486 0068 00000000 		.4byte	.LFB11
 4487 006c 90000000 		.4byte	.LFE11-.LFB11
 4488 0070 00000000 		.4byte	.LFB12
 4489 0074 28000000 		.4byte	.LFE12-.LFB12
 4490 0078 00000000 		.4byte	.LFB13
 4491 007c 90000000 		.4byte	.LFE13-.LFB13
 4492 0080 00000000 		.4byte	.LFB14
 4493 0084 44000000 		.4byte	.LFE14-.LFB14
 4494 0088 00000000 		.4byte	.LFB15
 4495 008c 40000000 		.4byte	.LFE15-.LFB15
 4496 0090 00000000 		.4byte	.LFB16
 4497 0094 84000000 		.4byte	.LFE16-.LFB16
 4498 0098 00000000 		.4byte	.LFB17
 4499 009c 6C010000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 99


 4500 00a0 00000000 		.4byte	.LFB18
 4501 00a4 C0000000 		.4byte	.LFE18-.LFB18
 4502 00a8 00000000 		.4byte	.LFB19
 4503 00ac 88000000 		.4byte	.LFE19-.LFB19
 4504 00b0 00000000 		.4byte	.LFB20
 4505 00b4 48000000 		.4byte	.LFE20-.LFB20
 4506 00b8 00000000 		.4byte	.LFB21
 4507 00bc 34000000 		.4byte	.LFE21-.LFB21
 4508 00c0 00000000 		.4byte	.LFB22
 4509 00c4 34000000 		.4byte	.LFE22-.LFB22
 4510 00c8 00000000 		.4byte	0
 4511 00cc 00000000 		.4byte	0
 4512              		.section	.debug_ranges,"",%progbits
 4513              	.Ldebug_ranges0:
 4514 0000 00000000 		.4byte	.LFB0
 4515 0004 84000000 		.4byte	.LFE0
 4516 0008 00000000 		.4byte	.LFB1
 4517 000c 46000000 		.4byte	.LFE1
 4518 0010 00000000 		.4byte	.LFB2
 4519 0014 64000000 		.4byte	.LFE2
 4520 0018 00000000 		.4byte	.LFB3
 4521 001c 6C000000 		.4byte	.LFE3
 4522 0020 00000000 		.4byte	.LFB4
 4523 0024 A0000000 		.4byte	.LFE4
 4524 0028 00000000 		.4byte	.LFB5
 4525 002c 24000000 		.4byte	.LFE5
 4526 0030 00000000 		.4byte	.LFB6
 4527 0034 28000000 		.4byte	.LFE6
 4528 0038 00000000 		.4byte	.LFB7
 4529 003c 5C000000 		.4byte	.LFE7
 4530 0040 00000000 		.4byte	.LFB8
 4531 0044 48000000 		.4byte	.LFE8
 4532 0048 00000000 		.4byte	.LFB9
 4533 004c 2C000000 		.4byte	.LFE9
 4534 0050 00000000 		.4byte	.LFB10
 4535 0054 28000000 		.4byte	.LFE10
 4536 0058 00000000 		.4byte	.LFB11
 4537 005c 90000000 		.4byte	.LFE11
 4538 0060 00000000 		.4byte	.LFB12
 4539 0064 28000000 		.4byte	.LFE12
 4540 0068 00000000 		.4byte	.LFB13
 4541 006c 90000000 		.4byte	.LFE13
 4542 0070 00000000 		.4byte	.LFB14
 4543 0074 44000000 		.4byte	.LFE14
 4544 0078 00000000 		.4byte	.LFB15
 4545 007c 40000000 		.4byte	.LFE15
 4546 0080 00000000 		.4byte	.LFB16
 4547 0084 84000000 		.4byte	.LFE16
 4548 0088 00000000 		.4byte	.LFB17
 4549 008c 6C010000 		.4byte	.LFE17
 4550 0090 00000000 		.4byte	.LFB18
 4551 0094 C0000000 		.4byte	.LFE18
 4552 0098 00000000 		.4byte	.LFB19
 4553 009c 88000000 		.4byte	.LFE19
 4554 00a0 00000000 		.4byte	.LFB20
 4555 00a4 48000000 		.4byte	.LFE20
 4556 00a8 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 100


 4557 00ac 34000000 		.4byte	.LFE21
 4558 00b0 00000000 		.4byte	.LFB22
 4559 00b4 34000000 		.4byte	.LFE22
 4560 00b8 00000000 		.4byte	0
 4561 00bc 00000000 		.4byte	0
 4562              		.section	.debug_line,"",%progbits
 4563              	.Ldebug_line0:
 4564 0000 C2050000 		.section	.debug_str,"MS",%progbits,1
 4564      02006002 
 4564      00000201 
 4564      FB0E0D00 
 4564      01010101 
 4565              	.LASF130:
 4566 0000 70785469 		.ascii	"pxTimerListsWereSwitched\000"
 4566      6D65724C 
 4566      69737473 
 4566      57657265 
 4566      53776974 
 4567              	.LASF44:
 4568 0019 53746174 		.ascii	"StaticTask_t\000"
 4568      69635461 
 4568      736B5F74 
 4568      00
 4569              	.LASF134:
 4570 0026 78436F6D 		.ascii	"xCommandTime\000"
 4570      6D616E64 
 4570      54696D65 
 4570      00
 4571              	.LASF64:
 4572 0033 75784E75 		.ascii	"uxNumberOfItems\000"
 4572      6D626572 
 4572      4F664974 
 4572      656D7300 
 4573              	.LASF79:
 4574 0043 7854696D 		.ascii	"xTimerPeriodInTicks\000"
 4574      65725065 
 4574      72696F64 
 4574      496E5469 
 4574      636B7300 
 4575              	.LASF81:
 4576 0057 70784361 		.ascii	"pxCallbackFunction\000"
 4576      6C6C6261 
 4576      636B4675 
 4576      6E637469 
 4576      6F6E00
 4577              	.LASF127:
 4578 006a 70784C69 		.ascii	"pxListWasEmpty\000"
 4578      73745761 
 4578      73456D70 
 4578      747900
 4579              	.LASF120:
 4580 0079 7854696D 		.ascii	"xTimeNow\000"
 4580      654E6F77 
 4580      00
 4581              	.LASF141:
 4582 0082 78537461 		.ascii	"xStaticTimerQueue\000"
 4582      74696354 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 101


 4582      696D6572 
 4582      51756575 
 4582      6500
 4583              	.LASF73:
 4584 0094 74736B54 		.ascii	"tskTaskControlBlock\000"
 4584      61736B43 
 4584      6F6E7472 
 4584      6F6C426C 
 4584      6F636B00 
 4585              	.LASF90:
 4586 00a8 7854696D 		.ascii	"xTimerParameters\000"
 4586      65725061 
 4586      72616D65 
 4586      74657273 
 4586      00
 4587              	.LASF109:
 4588 00b9 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 4588      67686572 
 4588      5072696F 
 4588      72697479 
 4588      5461736B 
 4589              	.LASF0:
 4590 00d3 756E7369 		.ascii	"unsigned int\000"
 4590      676E6564 
 4590      20696E74 
 4590      00
 4591              	.LASF65:
 4592 00e0 7078496E 		.ascii	"pxIndex\000"
 4592      64657800 
 4593              	.LASF20:
 4594 00e8 53746163 		.ascii	"StackType_t\000"
 4594      6B547970 
 4594      655F7400 
 4595              	.LASF77:
 4596 00f4 70635469 		.ascii	"pcTimerName\000"
 4596      6D65724E 
 4596      616D6500 
 4597              	.LASF57:
 4598 0100 784C4953 		.ascii	"xLIST_ITEM\000"
 4598      545F4954 
 4598      454D00
 4599              	.LASF157:
 4600 010b 443A5C55 		.ascii	"D:\\Users\\Jason\\Documents\\Jason's Work\\Labs\\EC"
 4600      73657273 
 4600      5C4A6173 
 4600      6F6E5C44 
 4600      6F63756D 
 4601 0138 45473732 		.ascii	"EG721Project\\PSoCProject\\PSoC_4_BLE_CapSense_Prox"
 4601      3150726F 
 4601      6A656374 
 4601      5C50536F 
 4601      4350726F 
 4602 0169 696D6974 		.ascii	"imity.cydsn\000"
 4602      792E6379 
 4602      64736E00 
 4603              	.LASF43:
 4604 0175 75784475 		.ascii	"uxDummy20\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 102


 4604      6D6D7932 
 4604      3000
 4605              	.LASF155:
 4606 017f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4606      43313120 
 4606      352E342E 
 4606      31203230 
 4606      31363036 
 4607 01b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4607      20726576 
 4607      6973696F 
 4607      6E203233 
 4607      37373135 
 4608 01e5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4608      66756E63 
 4608      74696F6E 
 4608      2D736563 
 4608      74696F6E 
 4609              	.LASF123:
 4610 020d 70765061 		.ascii	"pvParameters\000"
 4610      72616D65 
 4610      74657273 
 4610      00
 4611              	.LASF29:
 4612 021a 53746174 		.ascii	"StaticMiniListItem_t\000"
 4612      69634D69 
 4612      6E694C69 
 4612      73744974 
 4612      656D5F74 
 4613              	.LASF89:
 4614 022f 54696D65 		.ascii	"TimerParameter_t\000"
 4614      72506172 
 4614      616D6574 
 4614      65725F74 
 4614      00
 4615              	.LASF153:
 4616 0240 7854696D 		.ascii	"xTimerQueue\000"
 4616      65725175 
 4616      65756500 
 4617              	.LASF56:
 4618 024c 53746174 		.ascii	"StaticTimer_t\000"
 4618      69635469 
 4618      6D65725F 
 4618      7400
 4619              	.LASF133:
 4620 025a 784E6578 		.ascii	"xNextExpiryTime\000"
 4620      74457870 
 4620      69727954 
 4620      696D6500 
 4621              	.LASF52:
 4622 026a 78535441 		.ascii	"xSTATIC_TIMER\000"
 4622      5449435F 
 4622      54494D45 
 4622      5200
 4623              	.LASF83:
 4624 0278 54696D65 		.ascii	"TimerCallbackFunction_t\000"
 4624      7243616C 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 103


 4624      6C626163 
 4624      6B46756E 
 4624      6374696F 
 4625              	.LASF107:
 4626 0290 78436F6D 		.ascii	"xCommandID\000"
 4626      6D616E64 
 4626      494400
 4627              	.LASF114:
 4628 029b 75785265 		.ascii	"uxReturn\000"
 4628      7475726E 
 4628      00
 4629              	.LASF98:
 4630 02a4 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 4630      65724372 
 4630      65617465 
 4630      54696D65 
 4630      72546173 
 4631              	.LASF97:
 4632 02ba 756C5469 		.ascii	"ulTimerTaskStackSize\000"
 4632      6D657254 
 4632      61736B53 
 4632      7461636B 
 4632      53697A65 
 4633              	.LASF18:
 4634 02cf 75696E74 		.ascii	"uint32_t\000"
 4634      33325F74 
 4634      00
 4635              	.LASF113:
 4636 02d8 75785469 		.ascii	"uxTimerGetReloadMode\000"
 4636      6D657247 
 4636      65745265 
 4636      6C6F6164 
 4636      4D6F6465 
 4637              	.LASF158:
 4638 02ed 7854696D 		.ascii	"xTimerGetTimerDaemonTaskHandle\000"
 4638      65724765 
 4638      7454696D 
 4638      65724461 
 4638      656D6F6E 
 4639              	.LASF75:
 4640 030c 54696D65 		.ascii	"TimerHandle_t\000"
 4640      7248616E 
 4640      646C655F 
 4640      7400
 4641              	.LASF102:
 4642 031a 7854696D 		.ascii	"xTimerCreateStatic\000"
 4642      65724372 
 4642      65617465 
 4642      53746174 
 4642      696300
 4643              	.LASF118:
 4644 032d 70727650 		.ascii	"prvProcessExpiredTimer\000"
 4644      726F6365 
 4644      73734578 
 4644      70697265 
 4644      6454696D 
 4645              	.LASF74:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 104


 4646 0344 51756575 		.ascii	"QueueDefinition\000"
 4646      65446566 
 4646      696E6974 
 4646      696F6E00 
 4647              	.LASF13:
 4648 0354 6C6F6E67 		.ascii	"long long unsigned int\000"
 4648      206C6F6E 
 4648      6720756E 
 4648      7369676E 
 4648      65642069 
 4649              	.LASF54:
 4650 036b 70764475 		.ascii	"pvDummy6\000"
 4650      6D6D7936 
 4650      00
 4651              	.LASF101:
 4652 0374 70784E65 		.ascii	"pxNewTimer\000"
 4652      7754696D 
 4652      657200
 4653              	.LASF60:
 4654 037f 70785072 		.ascii	"pxPrevious\000"
 4654      6576696F 
 4654      757300
 4655              	.LASF8:
 4656 038a 5F5F7569 		.ascii	"__uint16_t\000"
 4656      6E743136 
 4656      5F7400
 4657              	.LASF145:
 4658 0395 70765265 		.ascii	"pvReturn\000"
 4658      7475726E 
 4658      00
 4659              	.LASF108:
 4660 039e 784F7074 		.ascii	"xOptionalValue\000"
 4660      696F6E61 
 4660      6C56616C 
 4660      756500
 4661              	.LASF143:
 4662 03ad 7854696D 		.ascii	"xTimerIsTimerActive\000"
 4662      65724973 
 4662      54696D65 
 4662      72416374 
 4662      69766500 
 4663              	.LASF91:
 4664 03c1 746D7254 		.ascii	"tmrTimerQueueMessage\000"
 4664      696D6572 
 4664      51756575 
 4664      654D6573 
 4664      73616765 
 4665              	.LASF144:
 4666 03d6 70765469 		.ascii	"pvTimerGetTimerID\000"
 4666      6D657247 
 4666      65745469 
 4666      6D657249 
 4666      4400
 4667              	.LASF4:
 4668 03e8 73697A65 		.ascii	"size_t\000"
 4668      5F7400
 4669              	.LASF68:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 105


 4670 03ef 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 4670      495F4C49 
 4670      53545F49 
 4670      54454D00 
 4671              	.LASF26:
 4672 03ff 53746174 		.ascii	"StaticListItem_t\000"
 4672      69634C69 
 4672      73744974 
 4672      656D5F74 
 4672      00
 4673              	.LASF152:
 4674 0410 70784F76 		.ascii	"pxOverflowTimerList\000"
 4674      6572666C 
 4674      6F775469 
 4674      6D65724C 
 4674      69737400 
 4675              	.LASF63:
 4676 0424 784C4953 		.ascii	"xLIST\000"
 4676      5400
 4677              	.LASF96:
 4678 042a 70785469 		.ascii	"pxTimerTaskStackBuffer\000"
 4678      6D657254 
 4678      61736B53 
 4678      7461636B 
 4678      42756666 
 4679              	.LASF117:
 4680 0441 70727649 		.ascii	"prvInitialiseNewTimer\000"
 4680      6E697469 
 4680      616C6973 
 4680      654E6577 
 4680      54696D65 
 4681              	.LASF47:
 4682 0457 70764475 		.ascii	"pvDummy1\000"
 4682      6D6D7931 
 4682      00
 4683              	.LASF45:
 4684 0460 70764475 		.ascii	"pvDummy2\000"
 4684      6D6D7932 
 4684      00
 4685              	.LASF25:
 4686 0469 70764475 		.ascii	"pvDummy3\000"
 4686      6D6D7933 
 4686      00
 4687              	.LASF53:
 4688 0472 70764475 		.ascii	"pvDummy5\000"
 4688      6D6D7935 
 4688      00
 4689              	.LASF31:
 4690 047b 75784475 		.ascii	"uxDummy2\000"
 4690      6D6D7932 
 4690      00
 4691              	.LASF48:
 4692 0484 75784475 		.ascii	"uxDummy4\000"
 4692      6D6D7934 
 4692      00
 4693              	.LASF37:
 4694 048d 75784475 		.ascii	"uxDummy5\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 106


 4694      6D6D7935 
 4694      00
 4695              	.LASF106:
 4696 0496 7854696D 		.ascii	"xTimer\000"
 4696      657200
 4697              	.LASF84:
 4698 049d 7854494D 		.ascii	"xTIMER\000"
 4698      455200
 4699              	.LASF149:
 4700 04a4 78416374 		.ascii	"xActiveTimerList1\000"
 4700      69766554 
 4700      696D6572 
 4700      4C697374 
 4700      3100
 4701              	.LASF150:
 4702 04b6 78416374 		.ascii	"xActiveTimerList2\000"
 4702      69766554 
 4702      696D6572 
 4702      4C697374 
 4702      3200
 4703              	.LASF132:
 4704 04c8 70727649 		.ascii	"prvInsertTimerInActiveList\000"
 4704      6E736572 
 4704      7454696D 
 4704      6572496E 
 4704      41637469 
 4705              	.LASF15:
 4706 04e3 63686172 		.ascii	"char\000"
 4706      00
 4707              	.LASF67:
 4708 04e8 4C697374 		.ascii	"ListItem_t\000"
 4708      4974656D 
 4708      5F7400
 4709              	.LASF22:
 4710 04f3 55426173 		.ascii	"UBaseType_t\000"
 4710      65547970 
 4710      655F7400 
 4711              	.LASF115:
 4712 04ff 7854696D 		.ascii	"xTimerGetExpiryTime\000"
 4712      65724765 
 4712      74457870 
 4712      69727954 
 4712      696D6500 
 4713              	.LASF72:
 4714 0513 51756575 		.ascii	"QueueHandle_t\000"
 4714      6548616E 
 4714      646C655F 
 4714      7400
 4715              	.LASF99:
 4716 0521 7854696D 		.ascii	"xTimerCreate\000"
 4716      65724372 
 4716      65617465 
 4716      00
 4717              	.LASF129:
 4718 052e 70727653 		.ascii	"prvSampleTimeNow\000"
 4718      616D706C 
 4718      6554696D 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 107


 4718      654E6F77 
 4718      00
 4719              	.LASF66:
 4720 053f 784C6973 		.ascii	"xListEnd\000"
 4720      74456E64 
 4720      00
 4721              	.LASF69:
 4722 0548 4D696E69 		.ascii	"MiniListItem_t\000"
 4722      4C697374 
 4722      4974656D 
 4722      5F7400
 4723              	.LASF16:
 4724 0557 75696E74 		.ascii	"uint8_t\000"
 4724      385F7400 
 4725              	.LASF147:
 4726 055f 7654696D 		.ascii	"vTimerSetTimerID\000"
 4726      65725365 
 4726      7454696D 
 4726      65724944 
 4726      00
 4727              	.LASF126:
 4728 0570 7854696D 		.ascii	"xTimerListsWereSwitched\000"
 4728      65724C69 
 4728      73747357 
 4728      65726553 
 4728      77697463 
 4729              	.LASF30:
 4730 0588 78535441 		.ascii	"xSTATIC_LIST\000"
 4730      5449435F 
 4730      4C495354 
 4730      00
 4731              	.LASF35:
 4732 0595 70784475 		.ascii	"pxDummy1\000"
 4732      6D6D7931 
 4732      00
 4733              	.LASF42:
 4734 059e 75634475 		.ascii	"ucDummy19\000"
 4734      6D6D7931 
 4734      3900
 4735              	.LASF1:
 4736 05a8 6C6F6E67 		.ascii	"long long int\000"
 4736      206C6F6E 
 4736      6720696E 
 4736      7400
 4737              	.LASF38:
 4738 05b6 70784475 		.ascii	"pxDummy6\000"
 4738      6D6D7936 
 4738      00
 4739              	.LASF148:
 4740 05bf 70764E65 		.ascii	"pvNewID\000"
 4740      77494400 
 4741              	.LASF21:
 4742 05c7 42617365 		.ascii	"BaseType_t\000"
 4742      54797065 
 4742      5F7400
 4743              	.LASF137:
 4744 05d2 70727653 		.ascii	"prvSwitchTimerLists\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 108


 4744      77697463 
 4744      6854696D 
 4744      65724C69 
 4744      73747300 
 4745              	.LASF19:
 4746 05e6 5461736B 		.ascii	"TaskFunction_t\000"
 4746      46756E63 
 4746      74696F6E 
 4746      5F7400
 4747              	.LASF59:
 4748 05f5 70784E65 		.ascii	"pxNext\000"
 4748      787400
 4749              	.LASF51:
 4750 05fc 53746174 		.ascii	"StaticQueue_t\000"
 4750      69635175 
 4750      6575655F 
 4750      7400
 4751              	.LASF71:
 4752 060a 5461736B 		.ascii	"TaskHandle_t\000"
 4752      48616E64 
 4752      6C655F74 
 4752      00
 4753              	.LASF70:
 4754 0617 4C697374 		.ascii	"List_t\000"
 4754      5F7400
 4755              	.LASF23:
 4756 061e 5469636B 		.ascii	"TickType_t\000"
 4756      54797065 
 4756      5F7400
 4757              	.LASF142:
 4758 0629 75635374 		.ascii	"ucStaticTimerQueueStorage\000"
 4758      61746963 
 4758      54696D65 
 4758      72517565 
 4758      75655374 
 4759              	.LASF78:
 4760 0643 7854696D 		.ascii	"xTimerListItem\000"
 4760      65724C69 
 4760      73744974 
 4760      656D00
 4761              	.LASF2:
 4762 0652 6C6F6E67 		.ascii	"long double\000"
 4762      20646F75 
 4762      626C6500 
 4763              	.LASF17:
 4764 065e 75696E74 		.ascii	"uint16_t\000"
 4764      31365F74 
 4764      00
 4765              	.LASF49:
 4766 0667 75634475 		.ascii	"ucDummy5\000"
 4766      6D6D7935 
 4766      00
 4767              	.LASF50:
 4768 0670 75634475 		.ascii	"ucDummy6\000"
 4768      6D6D7936 
 4768      00
 4769              	.LASF39:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 109


 4770 0679 75634475 		.ascii	"ucDummy7\000"
 4770      6D6D7937 
 4770      00
 4771              	.LASF55:
 4772 0682 75634475 		.ascii	"ucDummy8\000"
 4772      6D6D7938 
 4772      00
 4773              	.LASF105:
 4774 068b 7854696D 		.ascii	"xTimerGenericCommand\000"
 4774      65724765 
 4774      6E657269 
 4774      63436F6D 
 4774      6D616E64 
 4775              	.LASF154:
 4776 06a0 7854696D 		.ascii	"xTimerTaskHandle\000"
 4776      65725461 
 4776      736B4861 
 4776      6E646C65 
 4776      00
 4777              	.LASF122:
 4778 06b1 70727654 		.ascii	"prvTimerTask\000"
 4778      696D6572 
 4778      5461736B 
 4778      00
 4779              	.LASF119:
 4780 06be 784E6578 		.ascii	"xNextExpireTime\000"
 4780      74457870 
 4780      69726554 
 4780      696D6500 
 4781              	.LASF104:
 4782 06ce 7853697A 		.ascii	"xSize\000"
 4782      6500
 4783              	.LASF100:
 4784 06d4 75784175 		.ascii	"uxAutoReload\000"
 4784      746F5265 
 4784      6C6F6164 
 4784      00
 4785              	.LASF7:
 4786 06e1 73686F72 		.ascii	"short int\000"
 4786      7420696E 
 4786      7400
 4787              	.LASF135:
 4788 06eb 7850726F 		.ascii	"xProcessTimerNow\000"
 4788      63657373 
 4788      54696D65 
 4788      724E6F77 
 4788      00
 4789              	.LASF82:
 4790 06fc 75635374 		.ascii	"ucStatus\000"
 4790      61747573 
 4790      00
 4791              	.LASF58:
 4792 0705 78497465 		.ascii	"xItemValue\000"
 4792      6D56616C 
 4792      756500
 4793              	.LASF136:
 4794 0710 70727650 		.ascii	"prvProcessReceivedCommands\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 110


 4794      726F6365 
 4794      73735265 
 4794      63656976 
 4794      6564436F 
 4795              	.LASF10:
 4796 072b 6C6F6E67 		.ascii	"long int\000"
 4796      20696E74 
 4796      00
 4797              	.LASF131:
 4798 0734 784C6173 		.ascii	"xLastTime\000"
 4798      7454696D 
 4798      6500
 4799              	.LASF151:
 4800 073e 70784375 		.ascii	"pxCurrentTimerList\000"
 4800      7272656E 
 4800      7454696D 
 4800      65724C69 
 4800      737400
 4801              	.LASF156:
 4802 0751 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\timers.c\000"
 4802      72656552 
 4802      544F535C 
 4802      536F7572 
 4802      63655C74 
 4803              	.LASF111:
 4804 076d 784D6573 		.ascii	"xMessage\000"
 4804      73616765 
 4804      00
 4805              	.LASF80:
 4806 0776 70765469 		.ascii	"pvTimerID\000"
 4806      6D657249 
 4806      4400
 4807              	.LASF34:
 4808 0780 78535441 		.ascii	"xSTATIC_TCB\000"
 4808      5449435F 
 4808      54434200 
 4809              	.LASF5:
 4810 078c 5F5F7569 		.ascii	"__uint8_t\000"
 4810      6E74385F 
 4810      7400
 4811              	.LASF85:
 4812 0796 54696D65 		.ascii	"Timer_t\000"
 4812      725F7400 
 4813              	.LASF92:
 4814 079e 784D6573 		.ascii	"xMessageID\000"
 4814      73616765 
 4814      494400
 4815              	.LASF93:
 4816 07a9 4461656D 		.ascii	"DaemonTaskMessage_t\000"
 4816      6F6E5461 
 4816      736B4D65 
 4816      73736167 
 4816      655F7400 
 4817              	.LASF41:
 4818 07bd 756C4475 		.ascii	"ulDummy18\000"
 4818      6D6D7931 
 4818      3800
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 111


 4819              	.LASF138:
 4820 07c7 7852656C 		.ascii	"xReloadTime\000"
 4820      6F616454 
 4820      696D6500 
 4821              	.LASF27:
 4822 07d3 78535441 		.ascii	"xSTATIC_LIST_ITEM\000"
 4822      5449435F 
 4822      4C495354 
 4822      5F495445 
 4822      4D00
 4823              	.LASF94:
 4824 07e5 78526574 		.ascii	"xReturn\000"
 4824      75726E00 
 4825              	.LASF14:
 4826 07ed 73697A65 		.ascii	"sizetype\000"
 4826      74797065 
 4826      00
 4827              	.LASF12:
 4828 07f6 6C6F6E67 		.ascii	"long unsigned int\000"
 4828      20756E73 
 4828      69676E65 
 4828      6420696E 
 4828      7400
 4829              	.LASF121:
 4830 0808 78526573 		.ascii	"xResult\000"
 4830      756C7400 
 4831              	.LASF112:
 4832 0810 7854696D 		.ascii	"xTimerGetPeriod\000"
 4832      65724765 
 4832      74506572 
 4832      696F6400 
 4833              	.LASF88:
 4834 0820 70785469 		.ascii	"pxTimer\000"
 4834      6D657200 
 4835              	.LASF62:
 4836 0828 7078436F 		.ascii	"pxContainer\000"
 4836      6E746169 
 4836      6E657200 
 4837              	.LASF139:
 4838 0834 70785465 		.ascii	"pxTemp\000"
 4838      6D7000
 4839              	.LASF6:
 4840 083b 756E7369 		.ascii	"unsigned char\000"
 4840      676E6564 
 4840      20636861 
 4840      7200
 4841              	.LASF87:
 4842 0849 784D6573 		.ascii	"xMessageValue\000"
 4842      73616765 
 4842      56616C75 
 4842      6500
 4843              	.LASF11:
 4844 0857 5F5F7569 		.ascii	"__uint32_t\000"
 4844      6E743332 
 4844      5F7400
 4845              	.LASF140:
 4846 0862 70727643 		.ascii	"prvCheckForValidListAndQueue\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 112


 4846      6865636B 
 4846      466F7256 
 4846      616C6964 
 4846      4C697374 
 4847              	.LASF76:
 4848 087f 746D7254 		.ascii	"tmrTimerControl\000"
 4848      696D6572 
 4848      436F6E74 
 4848      726F6C00 
 4849              	.LASF95:
 4850 088f 70785469 		.ascii	"pxTimerTaskTCBBuffer\000"
 4850      6D657254 
 4850      61736B54 
 4850      43424275 
 4850      66666572 
 4851              	.LASF116:
 4852 08a4 70635469 		.ascii	"pcTimerGetName\000"
 4852      6D657247 
 4852      65744E61 
 4852      6D6500
 4853              	.LASF110:
 4854 08b3 78546963 		.ascii	"xTicksToWait\000"
 4854      6B73546F 
 4854      57616974 
 4854      00
 4855              	.LASF61:
 4856 08c0 70764F77 		.ascii	"pvOwner\000"
 4856      6E657200 
 4857              	.LASF40:
 4858 08c8 70764475 		.ascii	"pvDummy15\000"
 4858      6D6D7931 
 4858      3500
 4859              	.LASF24:
 4860 08d2 7844756D 		.ascii	"xDummy2\000"
 4860      6D793200 
 4861              	.LASF36:
 4862 08da 7844756D 		.ascii	"xDummy3\000"
 4862      6D793300 
 4863              	.LASF32:
 4864 08e2 7844756D 		.ascii	"xDummy4\000"
 4864      6D793400 
 4865              	.LASF125:
 4866 08ea 70727650 		.ascii	"prvProcessTimerOrBlockTask\000"
 4866      726F6365 
 4866      73735469 
 4866      6D65724F 
 4866      72426C6F 
 4867              	.LASF28:
 4868 0905 78535441 		.ascii	"xSTATIC_MINI_LIST_ITEM\000"
 4868      5449435F 
 4868      4D494E49 
 4868      5F4C4953 
 4868      545F4954 
 4869              	.LASF146:
 4870 091c 7654696D 		.ascii	"vTimerSetReloadMode\000"
 4870      65725365 
 4870      7452656C 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2RQUqt.s 			page 113


 4870      6F61644D 
 4870      6F646500 
 4871              	.LASF3:
 4872 0930 7369676E 		.ascii	"signed char\000"
 4872      65642063 
 4872      68617200 
 4873              	.LASF103:
 4874 093c 70785469 		.ascii	"pxTimerBuffer\000"
 4874      6D657242 
 4874      75666665 
 4874      7200
 4875              	.LASF9:
 4876 094a 73686F72 		.ascii	"short unsigned int\000"
 4876      7420756E 
 4876      7369676E 
 4876      65642069 
 4876      6E7400
 4877              	.LASF86:
 4878 095d 746D7254 		.ascii	"tmrTimerParameters\000"
 4878      696D6572 
 4878      50617261 
 4878      6D657465 
 4878      727300
 4879              	.LASF46:
 4880 0970 78535441 		.ascii	"xSTATIC_QUEUE\000"
 4880      5449435F 
 4880      51554555 
 4880      4500
 4881              	.LASF33:
 4882 097e 53746174 		.ascii	"StaticList_t\000"
 4882      69634C69 
 4882      73745F74 
 4882      00
 4883              	.LASF128:
 4884 098b 70727647 		.ascii	"prvGetNextExpireTime\000"
 4884      65744E65 
 4884      78744578 
 4884      70697265 
 4884      54696D65 
 4885              	.LASF124:
 4886 09a0 784C6973 		.ascii	"xListWasEmpty\000"
 4886      74576173 
 4886      456D7074 
 4886      7900
 4887              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
