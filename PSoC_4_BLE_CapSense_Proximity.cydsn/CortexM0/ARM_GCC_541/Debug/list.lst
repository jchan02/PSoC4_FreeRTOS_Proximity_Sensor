ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"list.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	x,2,2
  20              		.section	.text.vListInitialise,"ax",%progbits
  21              		.align	2
  22              		.global	vListInitialise
  23              		.code	16
  24              		.thumb_func
  25              		.type	vListInitialise, %function
  26              	vListInitialise:
  27              	.LFB0:
  28              		.file 1 "..\\FreeRTOS\\Source\\list.c"
   1:..\FreeRTOS\Source/list.c **** /*
   2:..\FreeRTOS\Source/list.c ****  * FreeRTOS Kernel V10.4.3
   3:..\FreeRTOS\Source/list.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source/list.c ****  *
   5:..\FreeRTOS\Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source/list.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source/list.c ****  *
  12:..\FreeRTOS\Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source/list.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source/list.c ****  *
  15:..\FreeRTOS\Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source/list.c ****  *
  22:..\FreeRTOS\Source/list.c ****  * https://www.FreeRTOS.org
  23:..\FreeRTOS\Source/list.c ****  * https://github.com/FreeRTOS
  24:..\FreeRTOS\Source/list.c ****  *
  25:..\FreeRTOS\Source/list.c ****  */
  26:..\FreeRTOS\Source/list.c **** 
  27:..\FreeRTOS\Source/list.c **** 
  28:..\FreeRTOS\Source/list.c **** #include <stdlib.h>
  29:..\FreeRTOS\Source/list.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 2


  30:..\FreeRTOS\Source/list.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  31:..\FreeRTOS\Source/list.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  32:..\FreeRTOS\Source/list.c ****  * task.h is included from an application file. */
  33:..\FreeRTOS\Source/list.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  34:..\FreeRTOS\Source/list.c **** 
  35:..\FreeRTOS\Source/list.c **** #include "FreeRTOS.h"
  36:..\FreeRTOS\Source/list.c **** #include "list.h"
  37:..\FreeRTOS\Source/list.c **** 
  38:..\FreeRTOS\Source/list.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  39:..\FreeRTOS\Source/list.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be
  40:..\FreeRTOS\Source/list.c ****  * defined for the header files above, but not in this file, in order to
  41:..\FreeRTOS\Source/list.c ****  * generate the correct privileged Vs unprivileged linkage and placement. */
  42:..\FreeRTOS\Source/list.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  43:..\FreeRTOS\Source/list.c **** 
  44:..\FreeRTOS\Source/list.c **** /*-----------------------------------------------------------
  45:..\FreeRTOS\Source/list.c **** * PUBLIC LIST API documented in list.h
  46:..\FreeRTOS\Source/list.c **** *----------------------------------------------------------*/
  47:..\FreeRTOS\Source/list.c **** 
  48:..\FreeRTOS\Source/list.c **** void vListInitialise( List_t * const pxList )
  49:..\FreeRTOS\Source/list.c **** {
  29              		.loc 1 49 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  50:..\FreeRTOS\Source/list.c ****     /* The list structure contains a list item which is used to mark the
  51:..\FreeRTOS\Source/list.c ****      * end of the list.  To initialise the list the list end is inserted
  52:..\FreeRTOS\Source/list.c ****      * as the only list entry. */
  53:..\FreeRTOS\Source/list.c ****     pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087 The mini li
  42              		.loc 1 53 0
  43 0008 7B68     		ldr	r3, [r7, #4]
  44 000a 0833     		adds	r3, r3, #8
  45 000c 1A00     		movs	r2, r3
  46 000e 7B68     		ldr	r3, [r7, #4]
  47 0010 5A60     		str	r2, [r3, #4]
  54:..\FreeRTOS\Source/list.c **** 
  55:..\FreeRTOS\Source/list.c ****     /* The list end value is the highest possible value in the list to
  56:..\FreeRTOS\Source/list.c ****      * ensure it remains at the end of the list. */
  57:..\FreeRTOS\Source/list.c ****     pxList->xListEnd.xItemValue = portMAX_DELAY;
  48              		.loc 1 57 0
  49 0012 7B68     		ldr	r3, [r7, #4]
  50 0014 0122     		movs	r2, #1
  51 0016 5242     		rsbs	r2, r2, #0
  52 0018 9A60     		str	r2, [r3, #8]
  58:..\FreeRTOS\Source/list.c **** 
  59:..\FreeRTOS\Source/list.c ****     /* The list end next and previous pointers point to itself so we know
  60:..\FreeRTOS\Source/list.c ****      * when the list is empty. */
  61:..\FreeRTOS\Source/list.c ****     pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );     /*lint !e826 !e740 !e9087
  53              		.loc 1 61 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 3


  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c 0833     		adds	r3, r3, #8
  56 001e 1A00     		movs	r2, r3
  57 0020 7B68     		ldr	r3, [r7, #4]
  58 0022 DA60     		str	r2, [r3, #12]
  62:..\FreeRTOS\Source/list.c ****     pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd ); /*lint !e826 !e740 !e9087
  59              		.loc 1 62 0
  60 0024 7B68     		ldr	r3, [r7, #4]
  61 0026 0833     		adds	r3, r3, #8
  62 0028 1A00     		movs	r2, r3
  63 002a 7B68     		ldr	r3, [r7, #4]
  64 002c 1A61     		str	r2, [r3, #16]
  63:..\FreeRTOS\Source/list.c **** 
  64:..\FreeRTOS\Source/list.c ****     pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  65              		.loc 1 64 0
  66 002e 7B68     		ldr	r3, [r7, #4]
  67 0030 0022     		movs	r2, #0
  68 0032 1A60     		str	r2, [r3]
  65:..\FreeRTOS\Source/list.c **** 
  66:..\FreeRTOS\Source/list.c ****     /* Write known values into the list if
  67:..\FreeRTOS\Source/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  68:..\FreeRTOS\Source/list.c ****     listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  69:..\FreeRTOS\Source/list.c ****     listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  70:..\FreeRTOS\Source/list.c **** }
  69              		.loc 1 70 0
  70 0034 C046     		nop
  71 0036 BD46     		mov	sp, r7
  72 0038 02B0     		add	sp, sp, #8
  73              		@ sp needed
  74 003a 80BD     		pop	{r7, pc}
  75              		.cfi_endproc
  76              	.LFE0:
  77              		.size	vListInitialise, .-vListInitialise
  78              		.section	.text.vListInitialiseItem,"ax",%progbits
  79              		.align	2
  80              		.global	vListInitialiseItem
  81              		.code	16
  82              		.thumb_func
  83              		.type	vListInitialiseItem, %function
  84              	vListInitialiseItem:
  85              	.LFB1:
  71:..\FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
  72:..\FreeRTOS\Source/list.c **** 
  73:..\FreeRTOS\Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  74:..\FreeRTOS\Source/list.c **** {
  86              		.loc 1 74 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 82B0     		sub	sp, sp, #8
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 4


  98 0006 7860     		str	r0, [r7, #4]
  75:..\FreeRTOS\Source/list.c ****     /* Make sure the list item is not recorded as being on a list. */
  76:..\FreeRTOS\Source/list.c ****     pxItem->pxContainer = NULL;
  99              		.loc 1 76 0
 100 0008 7B68     		ldr	r3, [r7, #4]
 101 000a 0022     		movs	r2, #0
 102 000c 1A61     		str	r2, [r3, #16]
  77:..\FreeRTOS\Source/list.c **** 
  78:..\FreeRTOS\Source/list.c ****     /* Write known values into the list item if
  79:..\FreeRTOS\Source/list.c ****      * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  80:..\FreeRTOS\Source/list.c ****     listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  81:..\FreeRTOS\Source/list.c ****     listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  82:..\FreeRTOS\Source/list.c **** }
 103              		.loc 1 82 0
 104 000e C046     		nop
 105 0010 BD46     		mov	sp, r7
 106 0012 02B0     		add	sp, sp, #8
 107              		@ sp needed
 108 0014 80BD     		pop	{r7, pc}
 109              		.cfi_endproc
 110              	.LFE1:
 111              		.size	vListInitialiseItem, .-vListInitialiseItem
 112 0016 C046     		.section	.text.vListInsertEnd,"ax",%progbits
 113              		.align	2
 114              		.global	vListInsertEnd
 115              		.code	16
 116              		.thumb_func
 117              		.type	vListInsertEnd, %function
 118              	vListInsertEnd:
 119              	.LFB2:
  83:..\FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
  84:..\FreeRTOS\Source/list.c **** 
  85:..\FreeRTOS\Source/list.c **** void vListInsertEnd( List_t * const pxList,
  86:..\FreeRTOS\Source/list.c ****                      ListItem_t * const pxNewListItem )
  87:..\FreeRTOS\Source/list.c **** {
 120              		.loc 1 87 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 16
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 84B0     		sub	sp, sp, #16
 129              		.cfi_def_cfa_offset 24
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 7860     		str	r0, [r7, #4]
 133 0008 3960     		str	r1, [r7]
  88:..\FreeRTOS\Source/list.c ****     ListItem_t * const pxIndex = pxList->pxIndex;
 134              		.loc 1 88 0
 135 000a 7B68     		ldr	r3, [r7, #4]
 136 000c 5B68     		ldr	r3, [r3, #4]
 137 000e FB60     		str	r3, [r7, #12]
  89:..\FreeRTOS\Source/list.c **** 
  90:..\FreeRTOS\Source/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
  91:..\FreeRTOS\Source/list.c ****      * the list data structures being overwritten in memory.  They will not catch
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 5


  92:..\FreeRTOS\Source/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
  93:..\FreeRTOS\Source/list.c ****     listTEST_LIST_INTEGRITY( pxList );
  94:..\FreeRTOS\Source/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
  95:..\FreeRTOS\Source/list.c **** 
  96:..\FreeRTOS\Source/list.c ****     /* Insert a new list item into pxList, but rather than sort the list,
  97:..\FreeRTOS\Source/list.c ****      * makes the new list item the last item to be removed by a call to
  98:..\FreeRTOS\Source/list.c ****      * listGET_OWNER_OF_NEXT_ENTRY(). */
  99:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxNext = pxIndex;
 138              		.loc 1 99 0
 139 0010 3B68     		ldr	r3, [r7]
 140 0012 FA68     		ldr	r2, [r7, #12]
 141 0014 5A60     		str	r2, [r3, #4]
 100:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 142              		.loc 1 100 0
 143 0016 FB68     		ldr	r3, [r7, #12]
 144 0018 9A68     		ldr	r2, [r3, #8]
 145 001a 3B68     		ldr	r3, [r7]
 146 001c 9A60     		str	r2, [r3, #8]
 101:..\FreeRTOS\Source/list.c **** 
 102:..\FreeRTOS\Source/list.c ****     /* Only used during decision coverage testing. */
 103:..\FreeRTOS\Source/list.c ****     mtCOVERAGE_TEST_DELAY();
 104:..\FreeRTOS\Source/list.c **** 
 105:..\FreeRTOS\Source/list.c ****     pxIndex->pxPrevious->pxNext = pxNewListItem;
 147              		.loc 1 105 0
 148 001e FB68     		ldr	r3, [r7, #12]
 149 0020 9B68     		ldr	r3, [r3, #8]
 150 0022 3A68     		ldr	r2, [r7]
 151 0024 5A60     		str	r2, [r3, #4]
 106:..\FreeRTOS\Source/list.c ****     pxIndex->pxPrevious = pxNewListItem;
 152              		.loc 1 106 0
 153 0026 FB68     		ldr	r3, [r7, #12]
 154 0028 3A68     		ldr	r2, [r7]
 155 002a 9A60     		str	r2, [r3, #8]
 107:..\FreeRTOS\Source/list.c **** 
 108:..\FreeRTOS\Source/list.c ****     /* Remember which list the item is in. */
 109:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxContainer = pxList;
 156              		.loc 1 109 0
 157 002c 3B68     		ldr	r3, [r7]
 158 002e 7A68     		ldr	r2, [r7, #4]
 159 0030 1A61     		str	r2, [r3, #16]
 110:..\FreeRTOS\Source/list.c **** 
 111:..\FreeRTOS\Source/list.c ****     ( pxList->uxNumberOfItems )++;
 160              		.loc 1 111 0
 161 0032 7B68     		ldr	r3, [r7, #4]
 162 0034 1B68     		ldr	r3, [r3]
 163 0036 5A1C     		adds	r2, r3, #1
 164 0038 7B68     		ldr	r3, [r7, #4]
 165 003a 1A60     		str	r2, [r3]
 112:..\FreeRTOS\Source/list.c **** }
 166              		.loc 1 112 0
 167 003c C046     		nop
 168 003e BD46     		mov	sp, r7
 169 0040 04B0     		add	sp, sp, #16
 170              		@ sp needed
 171 0042 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE2:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 6


 174              		.size	vListInsertEnd, .-vListInsertEnd
 175              		.section	.text.vListInsert,"ax",%progbits
 176              		.align	2
 177              		.global	vListInsert
 178              		.code	16
 179              		.thumb_func
 180              		.type	vListInsert, %function
 181              	vListInsert:
 182              	.LFB3:
 113:..\FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
 114:..\FreeRTOS\Source/list.c **** 
 115:..\FreeRTOS\Source/list.c **** void vListInsert( List_t * const pxList,
 116:..\FreeRTOS\Source/list.c ****                   ListItem_t * const pxNewListItem )
 117:..\FreeRTOS\Source/list.c **** {
 183              		.loc 1 117 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 7, -8
 190              		.cfi_offset 14, -4
 191 0002 84B0     		sub	sp, sp, #16
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_def_cfa_register 7
 195 0006 7860     		str	r0, [r7, #4]
 196 0008 3960     		str	r1, [r7]
 118:..\FreeRTOS\Source/list.c ****     ListItem_t * pxIterator;
 119:..\FreeRTOS\Source/list.c ****     const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 197              		.loc 1 119 0
 198 000a 3B68     		ldr	r3, [r7]
 199 000c 1B68     		ldr	r3, [r3]
 200 000e BB60     		str	r3, [r7, #8]
 120:..\FreeRTOS\Source/list.c **** 
 121:..\FreeRTOS\Source/list.c ****     /* Only effective when configASSERT() is also defined, these tests may catch
 122:..\FreeRTOS\Source/list.c ****      * the list data structures being overwritten in memory.  They will not catch
 123:..\FreeRTOS\Source/list.c ****      * data errors caused by incorrect configuration or use of FreeRTOS. */
 124:..\FreeRTOS\Source/list.c ****     listTEST_LIST_INTEGRITY( pxList );
 125:..\FreeRTOS\Source/list.c ****     listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 126:..\FreeRTOS\Source/list.c **** 
 127:..\FreeRTOS\Source/list.c ****     /* Insert the new list item into the list, sorted in xItemValue order.
 128:..\FreeRTOS\Source/list.c ****      *
 129:..\FreeRTOS\Source/list.c ****      * If the list already contains a list item with the same item value then the
 130:..\FreeRTOS\Source/list.c ****      * new list item should be placed after it.  This ensures that TCBs which are
 131:..\FreeRTOS\Source/list.c ****      * stored in ready lists (all of which have the same xItemValue value) get a
 132:..\FreeRTOS\Source/list.c ****      * share of the CPU.  However, if the xItemValue is the same as the back marker
 133:..\FreeRTOS\Source/list.c ****      * the iteration loop below will not end.  Therefore the value is checked
 134:..\FreeRTOS\Source/list.c ****      * first, and the algorithm slightly modified if necessary. */
 135:..\FreeRTOS\Source/list.c ****     if( xValueOfInsertion == portMAX_DELAY )
 201              		.loc 1 135 0
 202 0010 BB68     		ldr	r3, [r7, #8]
 203 0012 0133     		adds	r3, r3, #1
 204 0014 03D1     		bne	.L5
 136:..\FreeRTOS\Source/list.c ****     {
 137:..\FreeRTOS\Source/list.c ****         pxIterator = pxList->xListEnd.pxPrevious;
 205              		.loc 1 137 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 7


 206 0016 7B68     		ldr	r3, [r7, #4]
 207 0018 1B69     		ldr	r3, [r3, #16]
 208 001a FB60     		str	r3, [r7, #12]
 209 001c 0CE0     		b	.L6
 210              	.L5:
 138:..\FreeRTOS\Source/list.c ****     }
 139:..\FreeRTOS\Source/list.c ****     else
 140:..\FreeRTOS\Source/list.c ****     {
 141:..\FreeRTOS\Source/list.c ****         /* *** NOTE ***********************************************************
 142:..\FreeRTOS\Source/list.c ****         *  If you find your application is crashing here then likely causes are
 143:..\FreeRTOS\Source/list.c ****         *  listed below.  In addition see https://www.FreeRTOS.org/FAQHelp.html for
 144:..\FreeRTOS\Source/list.c ****         *  more tips, and ensure configASSERT() is defined!
 145:..\FreeRTOS\Source/list.c ****         *  https://www.FreeRTOS.org/a00110.html#configASSERT
 146:..\FreeRTOS\Source/list.c ****         *
 147:..\FreeRTOS\Source/list.c ****         *   1) Stack overflow -
 148:..\FreeRTOS\Source/list.c ****         *      see https://www.FreeRTOS.org/Stacks-and-stack-overflow-checking.html
 149:..\FreeRTOS\Source/list.c ****         *   2) Incorrect interrupt priority assignment, especially on Cortex-M
 150:..\FreeRTOS\Source/list.c ****         *      parts where numerically high priority values denote low actual
 151:..\FreeRTOS\Source/list.c ****         *      interrupt priorities, which can seem counter intuitive.  See
 152:..\FreeRTOS\Source/list.c ****         *      https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html and the definition
 153:..\FreeRTOS\Source/list.c ****         *      of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 154:..\FreeRTOS\Source/list.c ****         *      https://www.FreeRTOS.org/a00110.html
 155:..\FreeRTOS\Source/list.c ****         *   3) Calling an API function from within a critical section or when
 156:..\FreeRTOS\Source/list.c ****         *      the scheduler is suspended, or calling an API function that does
 157:..\FreeRTOS\Source/list.c ****         *      not end in "FromISR" from an interrupt.
 158:..\FreeRTOS\Source/list.c ****         *   4) Using a queue or semaphore before it has been initialised or
 159:..\FreeRTOS\Source/list.c ****         *      before the scheduler has been started (are interrupts firing
 160:..\FreeRTOS\Source/list.c ****         *      before vTaskStartScheduler() has been called?).
 161:..\FreeRTOS\Source/list.c ****         **********************************************************************/
 162:..\FreeRTOS\Source/list.c **** 
 163:..\FreeRTOS\Source/list.c ****         for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <=
 211              		.loc 1 163 0
 212 001e 7B68     		ldr	r3, [r7, #4]
 213 0020 0833     		adds	r3, r3, #8
 214 0022 FB60     		str	r3, [r7, #12]
 215 0024 02E0     		b	.L7
 216              	.L8:
 217              		.loc 1 163 0 is_stmt 0 discriminator 3
 218 0026 FB68     		ldr	r3, [r7, #12]
 219 0028 5B68     		ldr	r3, [r3, #4]
 220 002a FB60     		str	r3, [r7, #12]
 221              	.L7:
 222              		.loc 1 163 0 discriminator 1
 223 002c FB68     		ldr	r3, [r7, #12]
 224 002e 5B68     		ldr	r3, [r3, #4]
 225 0030 1A68     		ldr	r2, [r3]
 226 0032 BB68     		ldr	r3, [r7, #8]
 227 0034 9A42     		cmp	r2, r3
 228 0036 F6D9     		bls	.L8
 229              	.L6:
 164:..\FreeRTOS\Source/list.c ****         {
 165:..\FreeRTOS\Source/list.c ****             /* There is nothing to do here, just iterating to the wanted
 166:..\FreeRTOS\Source/list.c ****              * insertion position. */
 167:..\FreeRTOS\Source/list.c ****         }
 168:..\FreeRTOS\Source/list.c ****     }
 169:..\FreeRTOS\Source/list.c **** 
 170:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxNext = pxIterator->pxNext;
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 8


 230              		.loc 1 170 0 is_stmt 1
 231 0038 FB68     		ldr	r3, [r7, #12]
 232 003a 5A68     		ldr	r2, [r3, #4]
 233 003c 3B68     		ldr	r3, [r7]
 234 003e 5A60     		str	r2, [r3, #4]
 171:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 235              		.loc 1 171 0
 236 0040 3B68     		ldr	r3, [r7]
 237 0042 5B68     		ldr	r3, [r3, #4]
 238 0044 3A68     		ldr	r2, [r7]
 239 0046 9A60     		str	r2, [r3, #8]
 172:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxPrevious = pxIterator;
 240              		.loc 1 172 0
 241 0048 3B68     		ldr	r3, [r7]
 242 004a FA68     		ldr	r2, [r7, #12]
 243 004c 9A60     		str	r2, [r3, #8]
 173:..\FreeRTOS\Source/list.c ****     pxIterator->pxNext = pxNewListItem;
 244              		.loc 1 173 0
 245 004e FB68     		ldr	r3, [r7, #12]
 246 0050 3A68     		ldr	r2, [r7]
 247 0052 5A60     		str	r2, [r3, #4]
 174:..\FreeRTOS\Source/list.c **** 
 175:..\FreeRTOS\Source/list.c ****     /* Remember which list the item is in.  This allows fast removal of the
 176:..\FreeRTOS\Source/list.c ****      * item later. */
 177:..\FreeRTOS\Source/list.c ****     pxNewListItem->pxContainer = pxList;
 248              		.loc 1 177 0
 249 0054 3B68     		ldr	r3, [r7]
 250 0056 7A68     		ldr	r2, [r7, #4]
 251 0058 1A61     		str	r2, [r3, #16]
 178:..\FreeRTOS\Source/list.c **** 
 179:..\FreeRTOS\Source/list.c ****     ( pxList->uxNumberOfItems )++;
 252              		.loc 1 179 0
 253 005a 7B68     		ldr	r3, [r7, #4]
 254 005c 1B68     		ldr	r3, [r3]
 255 005e 5A1C     		adds	r2, r3, #1
 256 0060 7B68     		ldr	r3, [r7, #4]
 257 0062 1A60     		str	r2, [r3]
 180:..\FreeRTOS\Source/list.c **** }
 258              		.loc 1 180 0
 259 0064 C046     		nop
 260 0066 BD46     		mov	sp, r7
 261 0068 04B0     		add	sp, sp, #16
 262              		@ sp needed
 263 006a 80BD     		pop	{r7, pc}
 264              		.cfi_endproc
 265              	.LFE3:
 266              		.size	vListInsert, .-vListInsert
 267              		.section	.text.uxListRemove,"ax",%progbits
 268              		.align	2
 269              		.global	uxListRemove
 270              		.code	16
 271              		.thumb_func
 272              		.type	uxListRemove, %function
 273              	uxListRemove:
 274              	.LFB4:
 181:..\FreeRTOS\Source/list.c **** /*-----------------------------------------------------------*/
 182:..\FreeRTOS\Source/list.c **** 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 9


 183:..\FreeRTOS\Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 184:..\FreeRTOS\Source/list.c **** {
 275              		.loc 1 184 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 16
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 84B0     		sub	sp, sp, #16
 284              		.cfi_def_cfa_offset 24
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 287 0006 7860     		str	r0, [r7, #4]
 185:..\FreeRTOS\Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 186:..\FreeRTOS\Source/list.c ****  * item. */
 187:..\FreeRTOS\Source/list.c ****     List_t * const pxList = pxItemToRemove->pxContainer;
 288              		.loc 1 187 0
 289 0008 7B68     		ldr	r3, [r7, #4]
 290 000a 1B69     		ldr	r3, [r3, #16]
 291 000c FB60     		str	r3, [r7, #12]
 188:..\FreeRTOS\Source/list.c **** 
 189:..\FreeRTOS\Source/list.c ****     pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 292              		.loc 1 189 0
 293 000e 7B68     		ldr	r3, [r7, #4]
 294 0010 5B68     		ldr	r3, [r3, #4]
 295 0012 7A68     		ldr	r2, [r7, #4]
 296 0014 9268     		ldr	r2, [r2, #8]
 297 0016 9A60     		str	r2, [r3, #8]
 190:..\FreeRTOS\Source/list.c ****     pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 298              		.loc 1 190 0
 299 0018 7B68     		ldr	r3, [r7, #4]
 300 001a 9B68     		ldr	r3, [r3, #8]
 301 001c 7A68     		ldr	r2, [r7, #4]
 302 001e 5268     		ldr	r2, [r2, #4]
 303 0020 5A60     		str	r2, [r3, #4]
 191:..\FreeRTOS\Source/list.c **** 
 192:..\FreeRTOS\Source/list.c ****     /* Only used during decision coverage testing. */
 193:..\FreeRTOS\Source/list.c ****     mtCOVERAGE_TEST_DELAY();
 194:..\FreeRTOS\Source/list.c **** 
 195:..\FreeRTOS\Source/list.c ****     /* Make sure the index is left pointing to a valid item. */
 196:..\FreeRTOS\Source/list.c ****     if( pxList->pxIndex == pxItemToRemove )
 304              		.loc 1 196 0
 305 0022 FB68     		ldr	r3, [r7, #12]
 306 0024 5A68     		ldr	r2, [r3, #4]
 307 0026 7B68     		ldr	r3, [r7, #4]
 308 0028 9A42     		cmp	r2, r3
 309 002a 03D1     		bne	.L10
 197:..\FreeRTOS\Source/list.c ****     {
 198:..\FreeRTOS\Source/list.c ****         pxList->pxIndex = pxItemToRemove->pxPrevious;
 310              		.loc 1 198 0
 311 002c 7B68     		ldr	r3, [r7, #4]
 312 002e 9A68     		ldr	r2, [r3, #8]
 313 0030 FB68     		ldr	r3, [r7, #12]
 314 0032 5A60     		str	r2, [r3, #4]
 315              	.L10:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 10


 199:..\FreeRTOS\Source/list.c ****     }
 200:..\FreeRTOS\Source/list.c ****     else
 201:..\FreeRTOS\Source/list.c ****     {
 202:..\FreeRTOS\Source/list.c ****         mtCOVERAGE_TEST_MARKER();
 203:..\FreeRTOS\Source/list.c ****     }
 204:..\FreeRTOS\Source/list.c **** 
 205:..\FreeRTOS\Source/list.c ****     pxItemToRemove->pxContainer = NULL;
 316              		.loc 1 205 0
 317 0034 7B68     		ldr	r3, [r7, #4]
 318 0036 0022     		movs	r2, #0
 319 0038 1A61     		str	r2, [r3, #16]
 206:..\FreeRTOS\Source/list.c ****     ( pxList->uxNumberOfItems )--;
 320              		.loc 1 206 0
 321 003a FB68     		ldr	r3, [r7, #12]
 322 003c 1B68     		ldr	r3, [r3]
 323 003e 5A1E     		subs	r2, r3, #1
 324 0040 FB68     		ldr	r3, [r7, #12]
 325 0042 1A60     		str	r2, [r3]
 207:..\FreeRTOS\Source/list.c **** 
 208:..\FreeRTOS\Source/list.c ****     return pxList->uxNumberOfItems;
 326              		.loc 1 208 0
 327 0044 FB68     		ldr	r3, [r7, #12]
 328 0046 1B68     		ldr	r3, [r3]
 209:..\FreeRTOS\Source/list.c **** }
 329              		.loc 1 209 0
 330 0048 1800     		movs	r0, r3
 331 004a BD46     		mov	sp, r7
 332 004c 04B0     		add	sp, sp, #16
 333              		@ sp needed
 334 004e 80BD     		pop	{r7, pc}
 335              		.cfi_endproc
 336              	.LFE4:
 337              		.size	uxListRemove, .-uxListRemove
 338              		.text
 339              	.Letext0:
 340              		.file 2 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 341              		.file 3 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 342              		.file 4 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM0/portmacro.h"
 343              		.file 5 "..\\FreeRTOS\\Source\\include/list.h"
 344              		.file 6 "./FreeRTOSConfig.h"
 345              		.section	.debug_info,"",%progbits
 346              	.Ldebug_info0:
 347 0000 D4020000 		.4byte	0x2d4
 348 0004 0400     		.2byte	0x4
 349 0006 00000000 		.4byte	.Ldebug_abbrev0
 350 000a 04       		.byte	0x4
 351 000b 01       		.uleb128 0x1
 352 000c ED000000 		.4byte	.LASF42
 353 0010 0C       		.byte	0xc
 354 0011 AC010000 		.4byte	.LASF43
 355 0015 41000000 		.4byte	.LASF44
 356 0019 00000000 		.4byte	.Ldebug_ranges0+0
 357 001d 00000000 		.4byte	0
 358 0021 00000000 		.4byte	.Ldebug_line0
 359 0025 02       		.uleb128 0x2
 360 0026 04       		.byte	0x4
 361 0027 07       		.byte	0x7
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 11


 362 0028 EC010000 		.4byte	.LASF0
 363 002c 03       		.uleb128 0x3
 364 002d 04       		.byte	0x4
 365 002e 05       		.byte	0x5
 366 002f 696E7400 		.ascii	"int\000"
 367 0033 02       		.uleb128 0x2
 368 0034 08       		.byte	0x8
 369 0035 05       		.byte	0x5
 370 0036 59020000 		.4byte	.LASF1
 371 003a 02       		.uleb128 0x2
 372 003b 08       		.byte	0x8
 373 003c 04       		.byte	0x4
 374 003d BB020000 		.4byte	.LASF2
 375 0041 02       		.uleb128 0x2
 376 0042 01       		.byte	0x1
 377 0043 06       		.byte	0x6
 378 0044 D7020000 		.4byte	.LASF3
 379 0048 02       		.uleb128 0x2
 380 0049 01       		.byte	0x1
 381 004a 08       		.byte	0x8
 382 004b AB000000 		.4byte	.LASF4
 383 004f 02       		.uleb128 0x2
 384 0050 02       		.byte	0x2
 385 0051 05       		.byte	0x5
 386 0052 83020000 		.4byte	.LASF5
 387 0056 04       		.uleb128 0x4
 388 0057 96010000 		.4byte	.LASF8
 389 005b 02       		.byte	0x2
 390 005c 2B       		.byte	0x2b
 391 005d 61000000 		.4byte	0x61
 392 0061 02       		.uleb128 0x2
 393 0062 02       		.byte	0x2
 394 0063 07       		.byte	0x7
 395 0064 DA000000 		.4byte	.LASF6
 396 0068 02       		.uleb128 0x2
 397 0069 04       		.byte	0x4
 398 006a 05       		.byte	0x5
 399 006b B2020000 		.4byte	.LASF7
 400 006f 04       		.uleb128 0x4
 401 0070 A1010000 		.4byte	.LASF9
 402 0074 02       		.byte	0x2
 403 0075 41       		.byte	0x41
 404 0076 7A000000 		.4byte	0x7a
 405 007a 02       		.uleb128 0x2
 406 007b 04       		.byte	0x4
 407 007c 07       		.byte	0x7
 408 007d B9000000 		.4byte	.LASF10
 409 0081 02       		.uleb128 0x2
 410 0082 08       		.byte	0x8
 411 0083 07       		.byte	0x7
 412 0084 1B020000 		.4byte	.LASF11
 413 0088 02       		.uleb128 0x2
 414 0089 04       		.byte	0x4
 415 008a 07       		.byte	0x7
 416 008b 50020000 		.4byte	.LASF12
 417 008f 05       		.uleb128 0x5
 418 0090 04       		.byte	0x4
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 12


 419 0091 02       		.uleb128 0x2
 420 0092 01       		.byte	0x1
 421 0093 08       		.byte	0x8
 422 0094 67020000 		.4byte	.LASF13
 423 0098 04       		.uleb128 0x4
 424 0099 95020000 		.4byte	.LASF14
 425 009d 03       		.byte	0x3
 426 009e 24       		.byte	0x24
 427 009f 56000000 		.4byte	0x56
 428 00a3 04       		.uleb128 0x4
 429 00a4 A9020000 		.4byte	.LASF15
 430 00a8 03       		.byte	0x3
 431 00a9 30       		.byte	0x30
 432 00aa 6F000000 		.4byte	0x6f
 433 00ae 04       		.uleb128 0x4
 434 00af 39020000 		.4byte	.LASF16
 435 00b3 04       		.byte	0x4
 436 00b4 39       		.byte	0x39
 437 00b5 7A000000 		.4byte	0x7a
 438 00b9 04       		.uleb128 0x4
 439 00ba 00000000 		.4byte	.LASF17
 440 00be 04       		.byte	0x4
 441 00bf 3F       		.byte	0x3f
 442 00c0 A3000000 		.4byte	0xa3
 443 00c4 06       		.uleb128 0x6
 444 00c5 36000000 		.4byte	.LASF23
 445 00c9 14       		.byte	0x14
 446 00ca 05       		.byte	0x5
 447 00cb 8E       		.byte	0x8e
 448 00cc 0D010000 		.4byte	0x10d
 449 00d0 07       		.uleb128 0x7
 450 00d1 1A000000 		.4byte	.LASF18
 451 00d5 05       		.byte	0x5
 452 00d6 91       		.byte	0x91
 453 00d7 B9000000 		.4byte	0xb9
 454 00db 00       		.byte	0
 455 00dc 07       		.uleb128 0x7
 456 00dd E5010000 		.4byte	.LASF19
 457 00e1 05       		.byte	0x5
 458 00e2 92       		.byte	0x92
 459 00e3 0D010000 		.4byte	0x10d
 460 00e7 04       		.byte	0x4
 461 00e8 07       		.uleb128 0x7
 462 00e9 9E020000 		.4byte	.LASF20
 463 00ed 05       		.byte	0x5
 464 00ee 93       		.byte	0x93
 465 00ef 0D010000 		.4byte	0x10d
 466 00f3 08       		.byte	0x8
 467 00f4 07       		.uleb128 0x7
 468 00f5 2E000000 		.4byte	.LASF21
 469 00f9 05       		.byte	0x5
 470 00fa 94       		.byte	0x94
 471 00fb 8F000000 		.4byte	0x8f
 472 00ff 0C       		.byte	0xc
 473 0100 07       		.uleb128 0x7
 474 0101 6C020000 		.4byte	.LASF22
 475 0105 05       		.byte	0x5
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 13


 476 0106 95       		.byte	0x95
 477 0107 44010000 		.4byte	0x144
 478 010b 10       		.byte	0x10
 479 010c 00       		.byte	0
 480 010d 08       		.uleb128 0x8
 481 010e 04       		.byte	0x4
 482 010f C4000000 		.4byte	0xc4
 483 0113 06       		.uleb128 0x6
 484 0114 EA020000 		.4byte	.LASF24
 485 0118 14       		.byte	0x14
 486 0119 05       		.byte	0x5
 487 011a A6       		.byte	0xa6
 488 011b 44010000 		.4byte	0x144
 489 011f 07       		.uleb128 0x7
 490 0120 C6010000 		.4byte	.LASF25
 491 0124 05       		.byte	0x5
 492 0125 A9       		.byte	0xa9
 493 0126 91010000 		.4byte	0x191
 494 012a 00       		.byte	0
 495 012b 07       		.uleb128 0x7
 496 012c 8D020000 		.4byte	.LASF26
 497 0130 05       		.byte	0x5
 498 0131 AA       		.byte	0xaa
 499 0132 96010000 		.4byte	0x196
 500 0136 04       		.byte	0x4
 501 0137 07       		.uleb128 0x7
 502 0138 25000000 		.4byte	.LASF27
 503 013c 05       		.byte	0x5
 504 013d AB       		.byte	0xab
 505 013e 86010000 		.4byte	0x186
 506 0142 08       		.byte	0x8
 507 0143 00       		.byte	0
 508 0144 08       		.uleb128 0x8
 509 0145 04       		.byte	0x4
 510 0146 13010000 		.4byte	0x113
 511 014a 04       		.uleb128 0x4
 512 014b 45020000 		.4byte	.LASF28
 513 014f 05       		.byte	0x5
 514 0150 98       		.byte	0x98
 515 0151 C4000000 		.4byte	0xc4
 516 0155 06       		.uleb128 0x6
 517 0156 C7020000 		.4byte	.LASF29
 518 015a 0C       		.byte	0xc
 519 015b 05       		.byte	0x5
 520 015c 9A       		.byte	0x9a
 521 015d 86010000 		.4byte	0x186
 522 0161 07       		.uleb128 0x7
 523 0162 1A000000 		.4byte	.LASF18
 524 0166 05       		.byte	0x5
 525 0167 9D       		.byte	0x9d
 526 0168 B9000000 		.4byte	0xb9
 527 016c 00       		.byte	0
 528 016d 07       		.uleb128 0x7
 529 016e E5010000 		.4byte	.LASF19
 530 0172 05       		.byte	0x5
 531 0173 9E       		.byte	0x9e
 532 0174 0D010000 		.4byte	0x10d
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 14


 533 0178 04       		.byte	0x4
 534 0179 07       		.uleb128 0x7
 535 017a 9E020000 		.4byte	.LASF20
 536 017e 05       		.byte	0x5
 537 017f 9F       		.byte	0x9f
 538 0180 0D010000 		.4byte	0x10d
 539 0184 08       		.byte	0x8
 540 0185 00       		.byte	0
 541 0186 04       		.uleb128 0x4
 542 0187 0B000000 		.4byte	.LASF30
 543 018b 05       		.byte	0x5
 544 018c A1       		.byte	0xa1
 545 018d 55010000 		.4byte	0x155
 546 0191 09       		.uleb128 0x9
 547 0192 AE000000 		.4byte	0xae
 548 0196 08       		.uleb128 0x8
 549 0197 04       		.byte	0x4
 550 0198 4A010000 		.4byte	0x14a
 551 019c 04       		.uleb128 0x4
 552 019d 8F010000 		.4byte	.LASF31
 553 01a1 05       		.byte	0x5
 554 01a2 AD       		.byte	0xad
 555 01a3 13010000 		.4byte	0x113
 556 01a7 0A       		.uleb128 0xa
 557 01a8 F9010000 		.4byte	.LASF32
 558 01ac 01       		.byte	0x1
 559 01ad 30       		.byte	0x30
 560 01ae 00000000 		.4byte	.LFB0
 561 01b2 3C000000 		.4byte	.LFE0-.LFB0
 562 01b6 01       		.uleb128 0x1
 563 01b7 9C       		.byte	0x9c
 564 01b8 CB010000 		.4byte	0x1cb
 565 01bc 0B       		.uleb128 0xb
 566 01bd E3020000 		.4byte	.LASF34
 567 01c1 01       		.byte	0x1
 568 01c2 30       		.byte	0x30
 569 01c3 D1010000 		.4byte	0x1d1
 570 01c7 02       		.uleb128 0x2
 571 01c8 91       		.byte	0x91
 572 01c9 74       		.sleb128 -12
 573 01ca 00       		.byte	0
 574 01cb 08       		.uleb128 0x8
 575 01cc 04       		.byte	0x4
 576 01cd 9C010000 		.4byte	0x19c
 577 01d1 0C       		.uleb128 0xc
 578 01d2 CB010000 		.4byte	0x1cb
 579 01d6 0A       		.uleb128 0xa
 580 01d7 7B010000 		.4byte	.LASF33
 581 01db 01       		.byte	0x1
 582 01dc 49       		.byte	0x49
 583 01dd 00000000 		.4byte	.LFB1
 584 01e1 16000000 		.4byte	.LFE1-.LFB1
 585 01e5 01       		.uleb128 0x1
 586 01e6 9C       		.byte	0x9c
 587 01e7 FA010000 		.4byte	0x1fa
 588 01eb 0B       		.uleb128 0xb
 589 01ec 32020000 		.4byte	.LASF35
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 15


 590 01f0 01       		.byte	0x1
 591 01f1 49       		.byte	0x49
 592 01f2 FA010000 		.4byte	0x1fa
 593 01f6 02       		.uleb128 0x2
 594 01f7 91       		.byte	0x91
 595 01f8 74       		.sleb128 -12
 596 01f9 00       		.byte	0
 597 01fa 0C       		.uleb128 0xc
 598 01fb 96010000 		.4byte	0x196
 599 01ff 0A       		.uleb128 0xa
 600 0200 D6010000 		.4byte	.LASF36
 601 0204 01       		.byte	0x1
 602 0205 55       		.byte	0x55
 603 0206 00000000 		.4byte	.LFB2
 604 020a 44000000 		.4byte	.LFE2-.LFB2
 605 020e 01       		.uleb128 0x1
 606 020f 9C       		.byte	0x9c
 607 0210 3F020000 		.4byte	0x23f
 608 0214 0B       		.uleb128 0xb
 609 0215 E3020000 		.4byte	.LASF34
 610 0219 01       		.byte	0x1
 611 021a 55       		.byte	0x55
 612 021b D1010000 		.4byte	0x1d1
 613 021f 02       		.uleb128 0x2
 614 0220 91       		.byte	0x91
 615 0221 6C       		.sleb128 -20
 616 0222 0B       		.uleb128 0xb
 617 0223 FD020000 		.4byte	.LASF37
 618 0227 01       		.byte	0x1
 619 0228 56       		.byte	0x56
 620 0229 FA010000 		.4byte	0x1fa
 621 022d 02       		.uleb128 0x2
 622 022e 91       		.byte	0x91
 623 022f 68       		.sleb128 -24
 624 0230 0D       		.uleb128 0xd
 625 0231 8D020000 		.4byte	.LASF26
 626 0235 01       		.byte	0x1
 627 0236 58       		.byte	0x58
 628 0237 FA010000 		.4byte	0x1fa
 629 023b 02       		.uleb128 0x2
 630 023c 91       		.byte	0x91
 631 023d 74       		.sleb128 -12
 632 023e 00       		.byte	0
 633 023f 0A       		.uleb128 0xa
 634 0240 0B030000 		.4byte	.LASF38
 635 0244 01       		.byte	0x1
 636 0245 73       		.byte	0x73
 637 0246 00000000 		.4byte	.LFB3
 638 024a 6C000000 		.4byte	.LFE3-.LFB3
 639 024e 01       		.uleb128 0x1
 640 024f 9C       		.byte	0x9c
 641 0250 8D020000 		.4byte	0x28d
 642 0254 0B       		.uleb128 0xb
 643 0255 E3020000 		.4byte	.LASF34
 644 0259 01       		.byte	0x1
 645 025a 73       		.byte	0x73
 646 025b D1010000 		.4byte	0x1d1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 16


 647 025f 02       		.uleb128 0x2
 648 0260 91       		.byte	0x91
 649 0261 6C       		.sleb128 -20
 650 0262 0B       		.uleb128 0xb
 651 0263 FD020000 		.4byte	.LASF37
 652 0267 01       		.byte	0x1
 653 0268 74       		.byte	0x74
 654 0269 FA010000 		.4byte	0x1fa
 655 026d 02       		.uleb128 0x2
 656 026e 91       		.byte	0x91
 657 026f 68       		.sleb128 -24
 658 0270 0D       		.uleb128 0xd
 659 0271 78020000 		.4byte	.LASF39
 660 0275 01       		.byte	0x1
 661 0276 76       		.byte	0x76
 662 0277 96010000 		.4byte	0x196
 663 027b 02       		.uleb128 0x2
 664 027c 91       		.byte	0x91
 665 027d 74       		.sleb128 -12
 666 027e 0D       		.uleb128 0xd
 667 027f 09020000 		.4byte	.LASF40
 668 0283 01       		.byte	0x1
 669 0284 77       		.byte	0x77
 670 0285 8D020000 		.4byte	0x28d
 671 0289 02       		.uleb128 0x2
 672 028a 91       		.byte	0x91
 673 028b 70       		.sleb128 -16
 674 028c 00       		.byte	0
 675 028d 0C       		.uleb128 0xc
 676 028e B9000000 		.4byte	0xb9
 677 0292 0E       		.uleb128 0xe
 678 0293 F0020000 		.4byte	.LASF45
 679 0297 01       		.byte	0x1
 680 0298 B7       		.byte	0xb7
 681 0299 AE000000 		.4byte	0xae
 682 029d 00000000 		.4byte	.LFB4
 683 02a1 50000000 		.4byte	.LFE4-.LFB4
 684 02a5 01       		.uleb128 0x1
 685 02a6 9C       		.byte	0x9c
 686 02a7 C8020000 		.4byte	0x2c8
 687 02ab 0B       		.uleb128 0xb
 688 02ac CB000000 		.4byte	.LASF41
 689 02b0 01       		.byte	0x1
 690 02b1 B7       		.byte	0xb7
 691 02b2 FA010000 		.4byte	0x1fa
 692 02b6 02       		.uleb128 0x2
 693 02b7 91       		.byte	0x91
 694 02b8 6C       		.sleb128 -20
 695 02b9 0D       		.uleb128 0xd
 696 02ba E3020000 		.4byte	.LASF34
 697 02be 01       		.byte	0x1
 698 02bf BB       		.byte	0xbb
 699 02c0 D1010000 		.4byte	0x1d1
 700 02c4 02       		.uleb128 0x2
 701 02c5 91       		.byte	0x91
 702 02c6 74       		.sleb128 -12
 703 02c7 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 17


 704 02c8 0F       		.uleb128 0xf
 705 02c9 7800     		.ascii	"x\000"
 706 02cb 06       		.byte	0x6
 707 02cc 04       		.byte	0x4
 708 02cd 98000000 		.4byte	0x98
 709 02d1 05       		.uleb128 0x5
 710 02d2 03       		.byte	0x3
 711 02d3 00000000 		.4byte	x
 712 02d7 00       		.byte	0
 713              		.section	.debug_abbrev,"",%progbits
 714              	.Ldebug_abbrev0:
 715 0000 01       		.uleb128 0x1
 716 0001 11       		.uleb128 0x11
 717 0002 01       		.byte	0x1
 718 0003 25       		.uleb128 0x25
 719 0004 0E       		.uleb128 0xe
 720 0005 13       		.uleb128 0x13
 721 0006 0B       		.uleb128 0xb
 722 0007 03       		.uleb128 0x3
 723 0008 0E       		.uleb128 0xe
 724 0009 1B       		.uleb128 0x1b
 725 000a 0E       		.uleb128 0xe
 726 000b 55       		.uleb128 0x55
 727 000c 17       		.uleb128 0x17
 728 000d 11       		.uleb128 0x11
 729 000e 01       		.uleb128 0x1
 730 000f 10       		.uleb128 0x10
 731 0010 17       		.uleb128 0x17
 732 0011 00       		.byte	0
 733 0012 00       		.byte	0
 734 0013 02       		.uleb128 0x2
 735 0014 24       		.uleb128 0x24
 736 0015 00       		.byte	0
 737 0016 0B       		.uleb128 0xb
 738 0017 0B       		.uleb128 0xb
 739 0018 3E       		.uleb128 0x3e
 740 0019 0B       		.uleb128 0xb
 741 001a 03       		.uleb128 0x3
 742 001b 0E       		.uleb128 0xe
 743 001c 00       		.byte	0
 744 001d 00       		.byte	0
 745 001e 03       		.uleb128 0x3
 746 001f 24       		.uleb128 0x24
 747 0020 00       		.byte	0
 748 0021 0B       		.uleb128 0xb
 749 0022 0B       		.uleb128 0xb
 750 0023 3E       		.uleb128 0x3e
 751 0024 0B       		.uleb128 0xb
 752 0025 03       		.uleb128 0x3
 753 0026 08       		.uleb128 0x8
 754 0027 00       		.byte	0
 755 0028 00       		.byte	0
 756 0029 04       		.uleb128 0x4
 757 002a 16       		.uleb128 0x16
 758 002b 00       		.byte	0
 759 002c 03       		.uleb128 0x3
 760 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 18


 761 002e 3A       		.uleb128 0x3a
 762 002f 0B       		.uleb128 0xb
 763 0030 3B       		.uleb128 0x3b
 764 0031 0B       		.uleb128 0xb
 765 0032 49       		.uleb128 0x49
 766 0033 13       		.uleb128 0x13
 767 0034 00       		.byte	0
 768 0035 00       		.byte	0
 769 0036 05       		.uleb128 0x5
 770 0037 0F       		.uleb128 0xf
 771 0038 00       		.byte	0
 772 0039 0B       		.uleb128 0xb
 773 003a 0B       		.uleb128 0xb
 774 003b 00       		.byte	0
 775 003c 00       		.byte	0
 776 003d 06       		.uleb128 0x6
 777 003e 13       		.uleb128 0x13
 778 003f 01       		.byte	0x1
 779 0040 03       		.uleb128 0x3
 780 0041 0E       		.uleb128 0xe
 781 0042 0B       		.uleb128 0xb
 782 0043 0B       		.uleb128 0xb
 783 0044 3A       		.uleb128 0x3a
 784 0045 0B       		.uleb128 0xb
 785 0046 3B       		.uleb128 0x3b
 786 0047 0B       		.uleb128 0xb
 787 0048 01       		.uleb128 0x1
 788 0049 13       		.uleb128 0x13
 789 004a 00       		.byte	0
 790 004b 00       		.byte	0
 791 004c 07       		.uleb128 0x7
 792 004d 0D       		.uleb128 0xd
 793 004e 00       		.byte	0
 794 004f 03       		.uleb128 0x3
 795 0050 0E       		.uleb128 0xe
 796 0051 3A       		.uleb128 0x3a
 797 0052 0B       		.uleb128 0xb
 798 0053 3B       		.uleb128 0x3b
 799 0054 0B       		.uleb128 0xb
 800 0055 49       		.uleb128 0x49
 801 0056 13       		.uleb128 0x13
 802 0057 38       		.uleb128 0x38
 803 0058 0B       		.uleb128 0xb
 804 0059 00       		.byte	0
 805 005a 00       		.byte	0
 806 005b 08       		.uleb128 0x8
 807 005c 0F       		.uleb128 0xf
 808 005d 00       		.byte	0
 809 005e 0B       		.uleb128 0xb
 810 005f 0B       		.uleb128 0xb
 811 0060 49       		.uleb128 0x49
 812 0061 13       		.uleb128 0x13
 813 0062 00       		.byte	0
 814 0063 00       		.byte	0
 815 0064 09       		.uleb128 0x9
 816 0065 35       		.uleb128 0x35
 817 0066 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 19


 818 0067 49       		.uleb128 0x49
 819 0068 13       		.uleb128 0x13
 820 0069 00       		.byte	0
 821 006a 00       		.byte	0
 822 006b 0A       		.uleb128 0xa
 823 006c 2E       		.uleb128 0x2e
 824 006d 01       		.byte	0x1
 825 006e 3F       		.uleb128 0x3f
 826 006f 19       		.uleb128 0x19
 827 0070 03       		.uleb128 0x3
 828 0071 0E       		.uleb128 0xe
 829 0072 3A       		.uleb128 0x3a
 830 0073 0B       		.uleb128 0xb
 831 0074 3B       		.uleb128 0x3b
 832 0075 0B       		.uleb128 0xb
 833 0076 27       		.uleb128 0x27
 834 0077 19       		.uleb128 0x19
 835 0078 11       		.uleb128 0x11
 836 0079 01       		.uleb128 0x1
 837 007a 12       		.uleb128 0x12
 838 007b 06       		.uleb128 0x6
 839 007c 40       		.uleb128 0x40
 840 007d 18       		.uleb128 0x18
 841 007e 9742     		.uleb128 0x2117
 842 0080 19       		.uleb128 0x19
 843 0081 01       		.uleb128 0x1
 844 0082 13       		.uleb128 0x13
 845 0083 00       		.byte	0
 846 0084 00       		.byte	0
 847 0085 0B       		.uleb128 0xb
 848 0086 05       		.uleb128 0x5
 849 0087 00       		.byte	0
 850 0088 03       		.uleb128 0x3
 851 0089 0E       		.uleb128 0xe
 852 008a 3A       		.uleb128 0x3a
 853 008b 0B       		.uleb128 0xb
 854 008c 3B       		.uleb128 0x3b
 855 008d 0B       		.uleb128 0xb
 856 008e 49       		.uleb128 0x49
 857 008f 13       		.uleb128 0x13
 858 0090 02       		.uleb128 0x2
 859 0091 18       		.uleb128 0x18
 860 0092 00       		.byte	0
 861 0093 00       		.byte	0
 862 0094 0C       		.uleb128 0xc
 863 0095 26       		.uleb128 0x26
 864 0096 00       		.byte	0
 865 0097 49       		.uleb128 0x49
 866 0098 13       		.uleb128 0x13
 867 0099 00       		.byte	0
 868 009a 00       		.byte	0
 869 009b 0D       		.uleb128 0xd
 870 009c 34       		.uleb128 0x34
 871 009d 00       		.byte	0
 872 009e 03       		.uleb128 0x3
 873 009f 0E       		.uleb128 0xe
 874 00a0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 20


 875 00a1 0B       		.uleb128 0xb
 876 00a2 3B       		.uleb128 0x3b
 877 00a3 0B       		.uleb128 0xb
 878 00a4 49       		.uleb128 0x49
 879 00a5 13       		.uleb128 0x13
 880 00a6 02       		.uleb128 0x2
 881 00a7 18       		.uleb128 0x18
 882 00a8 00       		.byte	0
 883 00a9 00       		.byte	0
 884 00aa 0E       		.uleb128 0xe
 885 00ab 2E       		.uleb128 0x2e
 886 00ac 01       		.byte	0x1
 887 00ad 3F       		.uleb128 0x3f
 888 00ae 19       		.uleb128 0x19
 889 00af 03       		.uleb128 0x3
 890 00b0 0E       		.uleb128 0xe
 891 00b1 3A       		.uleb128 0x3a
 892 00b2 0B       		.uleb128 0xb
 893 00b3 3B       		.uleb128 0x3b
 894 00b4 0B       		.uleb128 0xb
 895 00b5 27       		.uleb128 0x27
 896 00b6 19       		.uleb128 0x19
 897 00b7 49       		.uleb128 0x49
 898 00b8 13       		.uleb128 0x13
 899 00b9 11       		.uleb128 0x11
 900 00ba 01       		.uleb128 0x1
 901 00bb 12       		.uleb128 0x12
 902 00bc 06       		.uleb128 0x6
 903 00bd 40       		.uleb128 0x40
 904 00be 18       		.uleb128 0x18
 905 00bf 9742     		.uleb128 0x2117
 906 00c1 19       		.uleb128 0x19
 907 00c2 01       		.uleb128 0x1
 908 00c3 13       		.uleb128 0x13
 909 00c4 00       		.byte	0
 910 00c5 00       		.byte	0
 911 00c6 0F       		.uleb128 0xf
 912 00c7 34       		.uleb128 0x34
 913 00c8 00       		.byte	0
 914 00c9 03       		.uleb128 0x3
 915 00ca 08       		.uleb128 0x8
 916 00cb 3A       		.uleb128 0x3a
 917 00cc 0B       		.uleb128 0xb
 918 00cd 3B       		.uleb128 0x3b
 919 00ce 0B       		.uleb128 0xb
 920 00cf 49       		.uleb128 0x49
 921 00d0 13       		.uleb128 0x13
 922 00d1 3F       		.uleb128 0x3f
 923 00d2 19       		.uleb128 0x19
 924 00d3 02       		.uleb128 0x2
 925 00d4 18       		.uleb128 0x18
 926 00d5 00       		.byte	0
 927 00d6 00       		.byte	0
 928 00d7 00       		.byte	0
 929              		.section	.debug_aranges,"",%progbits
 930 0000 3C000000 		.4byte	0x3c
 931 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 21


 932 0006 00000000 		.4byte	.Ldebug_info0
 933 000a 04       		.byte	0x4
 934 000b 00       		.byte	0
 935 000c 0000     		.2byte	0
 936 000e 0000     		.2byte	0
 937 0010 00000000 		.4byte	.LFB0
 938 0014 3C000000 		.4byte	.LFE0-.LFB0
 939 0018 00000000 		.4byte	.LFB1
 940 001c 16000000 		.4byte	.LFE1-.LFB1
 941 0020 00000000 		.4byte	.LFB2
 942 0024 44000000 		.4byte	.LFE2-.LFB2
 943 0028 00000000 		.4byte	.LFB3
 944 002c 6C000000 		.4byte	.LFE3-.LFB3
 945 0030 00000000 		.4byte	.LFB4
 946 0034 50000000 		.4byte	.LFE4-.LFB4
 947 0038 00000000 		.4byte	0
 948 003c 00000000 		.4byte	0
 949              		.section	.debug_ranges,"",%progbits
 950              	.Ldebug_ranges0:
 951 0000 00000000 		.4byte	.LFB0
 952 0004 3C000000 		.4byte	.LFE0
 953 0008 00000000 		.4byte	.LFB1
 954 000c 16000000 		.4byte	.LFE1
 955 0010 00000000 		.4byte	.LFB2
 956 0014 44000000 		.4byte	.LFE2
 957 0018 00000000 		.4byte	.LFB3
 958 001c 6C000000 		.4byte	.LFE3
 959 0020 00000000 		.4byte	.LFB4
 960 0024 50000000 		.4byte	.LFE4
 961 0028 00000000 		.4byte	0
 962 002c 00000000 		.4byte	0
 963              		.section	.debug_line,"",%progbits
 964              	.Ldebug_line0:
 965 0000 2A020000 		.section	.debug_str,"MS",%progbits,1
 965      02009F01 
 965      00000201 
 965      FB0E0D00 
 965      01010101 
 966              	.LASF17:
 967 0000 5469636B 		.ascii	"TickType_t\000"
 967      54797065 
 967      5F7400
 968              	.LASF30:
 969 000b 4D696E69 		.ascii	"MiniListItem_t\000"
 969      4C697374 
 969      4974656D 
 969      5F7400
 970              	.LASF18:
 971 001a 78497465 		.ascii	"xItemValue\000"
 971      6D56616C 
 971      756500
 972              	.LASF27:
 973 0025 784C6973 		.ascii	"xListEnd\000"
 973      74456E64 
 973      00
 974              	.LASF21:
 975 002e 70764F77 		.ascii	"pvOwner\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 22


 975      6E657200 
 976              	.LASF23:
 977 0036 784C4953 		.ascii	"xLIST_ITEM\000"
 977      545F4954 
 977      454D00
 978              	.LASF44:
 979 0041 443A5C55 		.ascii	"D:\\Users\\Jason\\Documents\\Jason's Work\\Labs\\EC"
 979      73657273 
 979      5C4A6173 
 979      6F6E5C44 
 979      6F63756D 
 980 006e 45473732 		.ascii	"EG721Project\\PSoCProject\\PSoC_4_BLE_CapSense_Prox"
 980      3150726F 
 980      6A656374 
 980      5C50536F 
 980      4350726F 
 981 009f 696D6974 		.ascii	"imity.cydsn\000"
 981      792E6379 
 981      64736E00 
 982              	.LASF4:
 983 00ab 756E7369 		.ascii	"unsigned char\000"
 983      676E6564 
 983      20636861 
 983      7200
 984              	.LASF10:
 985 00b9 6C6F6E67 		.ascii	"long unsigned int\000"
 985      20756E73 
 985      69676E65 
 985      6420696E 
 985      7400
 986              	.LASF41:
 987 00cb 70784974 		.ascii	"pxItemToRemove\000"
 987      656D546F 
 987      52656D6F 
 987      766500
 988              	.LASF6:
 989 00da 73686F72 		.ascii	"short unsigned int\000"
 989      7420756E 
 989      7369676E 
 989      65642069 
 989      6E7400
 990              	.LASF42:
 991 00ed 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 991      43313120 
 991      352E342E 
 991      31203230 
 991      31363036 
 992 0120 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 992      20726576 
 992      6973696F 
 992      6E203233 
 992      37373135 
 993 0153 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 993      66756E63 
 993      74696F6E 
 993      2D736563 
 993      74696F6E 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 23


 994              	.LASF33:
 995 017b 764C6973 		.ascii	"vListInitialiseItem\000"
 995      74496E69 
 995      7469616C 
 995      69736549 
 995      74656D00 
 996              	.LASF31:
 997 018f 4C697374 		.ascii	"List_t\000"
 997      5F7400
 998              	.LASF8:
 999 0196 5F5F7569 		.ascii	"__uint16_t\000"
 999      6E743136 
 999      5F7400
 1000              	.LASF9:
 1001 01a1 5F5F7569 		.ascii	"__uint32_t\000"
 1001      6E743332 
 1001      5F7400
 1002              	.LASF43:
 1003 01ac 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\list.c\000"
 1003      72656552 
 1003      544F535C 
 1003      536F7572 
 1003      63655C6C 
 1004              	.LASF25:
 1005 01c6 75784E75 		.ascii	"uxNumberOfItems\000"
 1005      6D626572 
 1005      4F664974 
 1005      656D7300 
 1006              	.LASF36:
 1007 01d6 764C6973 		.ascii	"vListInsertEnd\000"
 1007      74496E73 
 1007      65727445 
 1007      6E6400
 1008              	.LASF19:
 1009 01e5 70784E65 		.ascii	"pxNext\000"
 1009      787400
 1010              	.LASF0:
 1011 01ec 756E7369 		.ascii	"unsigned int\000"
 1011      676E6564 
 1011      20696E74 
 1011      00
 1012              	.LASF32:
 1013 01f9 764C6973 		.ascii	"vListInitialise\000"
 1013      74496E69 
 1013      7469616C 
 1013      69736500 
 1014              	.LASF40:
 1015 0209 7856616C 		.ascii	"xValueOfInsertion\000"
 1015      75654F66 
 1015      496E7365 
 1015      7274696F 
 1015      6E00
 1016              	.LASF11:
 1017 021b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1017      206C6F6E 
 1017      6720756E 
 1017      7369676E 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 24


 1017      65642069 
 1018              	.LASF35:
 1019 0232 70784974 		.ascii	"pxItem\000"
 1019      656D00
 1020              	.LASF16:
 1021 0239 55426173 		.ascii	"UBaseType_t\000"
 1021      65547970 
 1021      655F7400 
 1022              	.LASF28:
 1023 0245 4C697374 		.ascii	"ListItem_t\000"
 1023      4974656D 
 1023      5F7400
 1024              	.LASF12:
 1025 0250 73697A65 		.ascii	"sizetype\000"
 1025      74797065 
 1025      00
 1026              	.LASF1:
 1027 0259 6C6F6E67 		.ascii	"long long int\000"
 1027      206C6F6E 
 1027      6720696E 
 1027      7400
 1028              	.LASF13:
 1029 0267 63686172 		.ascii	"char\000"
 1029      00
 1030              	.LASF22:
 1031 026c 7078436F 		.ascii	"pxContainer\000"
 1031      6E746169 
 1031      6E657200 
 1032              	.LASF39:
 1033 0278 70784974 		.ascii	"pxIterator\000"
 1033      65726174 
 1033      6F7200
 1034              	.LASF5:
 1035 0283 73686F72 		.ascii	"short int\000"
 1035      7420696E 
 1035      7400
 1036              	.LASF26:
 1037 028d 7078496E 		.ascii	"pxIndex\000"
 1037      64657800 
 1038              	.LASF14:
 1039 0295 75696E74 		.ascii	"uint16_t\000"
 1039      31365F74 
 1039      00
 1040              	.LASF20:
 1041 029e 70785072 		.ascii	"pxPrevious\000"
 1041      6576696F 
 1041      757300
 1042              	.LASF15:
 1043 02a9 75696E74 		.ascii	"uint32_t\000"
 1043      33325F74 
 1043      00
 1044              	.LASF7:
 1045 02b2 6C6F6E67 		.ascii	"long int\000"
 1045      20696E74 
 1045      00
 1046              	.LASF2:
 1047 02bb 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\Jason\AppData\Local\Temp\cc2s2zGK.s 			page 25


 1047      20646F75 
 1047      626C6500 
 1048              	.LASF29:
 1049 02c7 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 1049      495F4C49 
 1049      53545F49 
 1049      54454D00 
 1050              	.LASF3:
 1051 02d7 7369676E 		.ascii	"signed char\000"
 1051      65642063 
 1051      68617200 
 1052              	.LASF34:
 1053 02e3 70784C69 		.ascii	"pxList\000"
 1053      737400
 1054              	.LASF24:
 1055 02ea 784C4953 		.ascii	"xLIST\000"
 1055      5400
 1056              	.LASF45:
 1057 02f0 75784C69 		.ascii	"uxListRemove\000"
 1057      73745265 
 1057      6D6F7665 
 1057      00
 1058              	.LASF37:
 1059 02fd 70784E65 		.ascii	"pxNewListItem\000"
 1059      774C6973 
 1059      74497465 
 1059      6D00
 1060              	.LASF38:
 1061 030b 764C6973 		.ascii	"vListInsert\000"
 1061      74496E73 
 1061      65727400 
 1062              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
