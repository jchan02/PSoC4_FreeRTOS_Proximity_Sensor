ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"port.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	x,2,2
  20              		.data
  21              		.align	2
  22              		.type	uxCriticalNesting, %object
  23              		.size	uxCriticalNesting, 4
  24              	uxCriticalNesting:
  25 0000 AAAAAAAA 		.word	-1431655766
  26              		.section	.text.pxPortInitialiseStack,"ax",%progbits
  27              		.align	2
  28              		.global	pxPortInitialiseStack
  29              		.code	16
  30              		.thumb_func
  31              		.type	pxPortInitialiseStack, %function
  32              	pxPortInitialiseStack:
  33              	.LFB0:
  34              		.file 1 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM0\\port.c"
   1:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
   2:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * FreeRTOS Kernel V10.4.3
   3:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  *
   5:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * subject to the following conditions:
  11:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  *
  12:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * copies or substantial portions of the Software.
  14:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  *
  15:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  *
  22:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * https://www.FreeRTOS.org
  23:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * https://github.com/FreeRTOS
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 2


  24:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  *
  25:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
  26:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  27:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------
  28:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** * Implementation of functions defined in portable.h for the ARM CM0 port.
  29:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** *----------------------------------------------------------*/
  30:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  31:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* Scheduler includes. */
  32:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #include "FreeRTOS.h"
  33:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #include "task.h"
  34:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  35:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* Constants required to manipulate the NVIC. */
  36:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_CTRL_REG             ( *( ( volatile uint32_t * ) 0xe000e010 ) )
  37:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_LOAD_REG             ( *( ( volatile uint32_t * ) 0xe000e014 ) )
  38:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG    ( *( ( volatile uint32_t * ) 0xe000e018 ) )
  39:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_INT_CTRL_REG                 ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  40:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SHPR3_REG                    ( *( ( volatile uint32_t * ) 0xe000ed20 ) )
  41:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_CLK_BIT              ( 1UL << 2UL )
  42:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_INT_BIT              ( 1UL << 1UL )
  43:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT           ( 1UL << 0UL )
  44:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT       ( 1UL << 16UL )
  45:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_PENDSVSET_BIT                ( 1UL << 28UL )
  46:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portMIN_INTERRUPT_PRIORITY            ( 255UL )
  47:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_PENDSV_PRI                   ( portMIN_INTERRUPT_PRIORITY << 16UL )
  48:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portNVIC_SYSTICK_PRI                  ( portMIN_INTERRUPT_PRIORITY << 24UL )
  49:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  50:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* Constants required to set up the initial stack. */
  51:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portINITIAL_XPSR                      ( 0x01000000 )
  52:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  53:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* The systick is a 24-bit counter. */
  54:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #define portMAX_24_BIT_NUMBER                 ( 0xffffffUL )
  55:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  56:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  57:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * occurred while the SysTick counter is stopped during tickless idle
  58:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * calculations. */
  59:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #ifndef portMISSED_COUNTS_FACTOR
  60:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     #define portMISSED_COUNTS_FACTOR    ( 45UL )
  61:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #endif
  62:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  63:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
  64:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * prvTaskExitError() in case it messes up unwinding of the stack in the
  65:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * debugger. */
  66:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #ifdef configTASK_RETURN_ADDRESS
  67:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     #define portTASK_RETURN_ADDRESS    configTASK_RETURN_ADDRESS
  68:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #else
  69:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     #define portTASK_RETURN_ADDRESS    prvTaskExitError
  70:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #endif
  71:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  72:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
  73:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
  74:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * file is weak to allow application writers to change the timer used to
  75:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * generate the tick interrupt.
  76:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
  77:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortSetupTimerInterrupt( void );
  78:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  79:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
  80:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Exception handlers.
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 3


  81:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
  82:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void xPortPendSVHandler( void ) __attribute__( ( naked ) );
  83:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void xPortSysTickHandler( void );
  84:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortSVCHandler( void );
  85:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  86:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
  87:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Start first task is a separate function so it can be tested in isolation.
  88:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
  89:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** static void vPortStartFirstTask( void ) __attribute__( ( naked ) );
  90:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  91:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
  92:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
  93:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
  94:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** static void prvTaskExitError( void );
  95:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  96:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
  97:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
  98:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /* Each task maintains its own interrupt status in the critical nesting
  99:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * variable. */
 100:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 101:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 102:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 103:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 104:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
 105:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * The number of SysTick increments that make up one tick period.
 106:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
 107:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 108:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     static uint32_t ulTimerCountsForOneTick = 0;
 109:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 110:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 111:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
 112:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 113:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * 24 bit resolution of the SysTick timer.
 114:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
 115:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 116:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     static uint32_t xMaximumPossibleSuppressedTicks = 0;
 117:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 118:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 119:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
 120:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 121:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * power functionality only.
 122:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
 123:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 124:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     static uint32_t ulStoppedTimerCompensation = 0;
 125:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 126:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 127:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 128:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 129:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
 130:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * See header file for description.
 131:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
 132:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
 133:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****                                      TaskFunction_t pxCode,
 134:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****                                      void * pvParameters )
 135:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
  35              		.loc 1 135 0
  36              		.cfi_startproc
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 4


  37              		@ args = 0, pretend = 0, frame = 16
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 84B0     		sub	sp, sp, #16
  44              		.cfi_def_cfa_offset 24
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  47 0006 F860     		str	r0, [r7, #12]
  48 0008 B960     		str	r1, [r7, #8]
  49 000a 7A60     		str	r2, [r7, #4]
 136:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Simulate the stack frame as it would be created by a context switch
 137:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * interrupt. */
 138:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     pxTopOfStack--;                                          /* Offset added to account for the way
  50              		.loc 1 138 0
  51 000c FB68     		ldr	r3, [r7, #12]
  52 000e 043B     		subs	r3, r3, #4
  53 0010 FB60     		str	r3, [r7, #12]
 139:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     *pxTopOfStack = portINITIAL_XPSR;                        /* xPSR */
  54              		.loc 1 139 0
  55 0012 FB68     		ldr	r3, [r7, #12]
  56 0014 8022     		movs	r2, #128
  57 0016 5204     		lsls	r2, r2, #17
  58 0018 1A60     		str	r2, [r3]
 140:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     pxTopOfStack--;
  59              		.loc 1 140 0
  60 001a FB68     		ldr	r3, [r7, #12]
  61 001c 043B     		subs	r3, r3, #4
  62 001e FB60     		str	r3, [r7, #12]
 141:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     *pxTopOfStack = ( StackType_t ) pxCode;                  /* PC */
  63              		.loc 1 141 0
  64 0020 BA68     		ldr	r2, [r7, #8]
  65 0022 FB68     		ldr	r3, [r7, #12]
  66 0024 1A60     		str	r2, [r3]
 142:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     pxTopOfStack--;
  67              		.loc 1 142 0
  68 0026 FB68     		ldr	r3, [r7, #12]
  69 0028 043B     		subs	r3, r3, #4
  70 002a FB60     		str	r3, [r7, #12]
 143:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS; /* LR */
  71              		.loc 1 143 0
  72 002c 084A     		ldr	r2, .L3
  73 002e FB68     		ldr	r3, [r7, #12]
  74 0030 1A60     		str	r2, [r3]
 144:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     pxTopOfStack -= 5;                                       /* R12, R3, R2 and R1. */
  75              		.loc 1 144 0
  76 0032 FB68     		ldr	r3, [r7, #12]
  77 0034 143B     		subs	r3, r3, #20
  78 0036 FB60     		str	r3, [r7, #12]
 145:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     *pxTopOfStack = ( StackType_t ) pvParameters;            /* R0 */
  79              		.loc 1 145 0
  80 0038 7A68     		ldr	r2, [r7, #4]
  81 003a FB68     		ldr	r3, [r7, #12]
  82 003c 1A60     		str	r2, [r3]
 146:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     pxTopOfStack -= 8;                                       /* R11..R4. */
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 5


  83              		.loc 1 146 0
  84 003e FB68     		ldr	r3, [r7, #12]
  85 0040 203B     		subs	r3, r3, #32
  86 0042 FB60     		str	r3, [r7, #12]
 147:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 148:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     return pxTopOfStack;
  87              		.loc 1 148 0
  88 0044 FB68     		ldr	r3, [r7, #12]
 149:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
  89              		.loc 1 149 0
  90 0046 1800     		movs	r0, r3
  91 0048 BD46     		mov	sp, r7
  92 004a 04B0     		add	sp, sp, #16
  93              		@ sp needed
  94 004c 80BD     		pop	{r7, pc}
  95              	.L4:
  96 004e C046     		.align	2
  97              	.L3:
  98 0050 00000000 		.word	prvTaskExitError
  99              		.cfi_endproc
 100              	.LFE0:
 101              		.size	pxPortInitialiseStack, .-pxPortInitialiseStack
 102              		.section	.text.prvTaskExitError,"ax",%progbits
 103              		.align	2
 104              		.code	16
 105              		.thumb_func
 106              		.type	prvTaskExitError, %function
 107              	prvTaskExitError:
 108              	.LFB1:
 150:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 151:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 152:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** static void prvTaskExitError( void )
 153:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 109              		.loc 1 153 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 8
 112              		@ frame_needed = 1, uses_anonymous_args = 0
 113 0000 80B5     		push	{r7, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 7, -8
 116              		.cfi_offset 14, -4
 117 0002 82B0     		sub	sp, sp, #8
 118              		.cfi_def_cfa_offset 16
 119 0004 00AF     		add	r7, sp, #0
 120              		.cfi_def_cfa_register 7
 154:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     volatile uint32_t ulDummy = 0UL;
 121              		.loc 1 154 0
 122 0006 0023     		movs	r3, #0
 123 0008 7B60     		str	r3, [r7, #4]
 155:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 156:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* A function that implements a task must not exit or attempt to return to
 157:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * its caller as there is nothing to return to.  If a task wants to exit it
 158:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * should instead call vTaskDelete( NULL ).
 159:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      *
 160:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * Artificially force an assert() to be triggered if configASSERT() is
 161:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * defined, then stop here so application writers can catch the error. */
 162:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     configASSERT( uxCriticalNesting == ~0UL );
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 6


 124              		.loc 1 162 0
 125 000a 074B     		ldr	r3, .L9
 126 000c 1B88     		ldrh	r3, [r3]
 127 000e 002B     		cmp	r3, #0
 128 0010 01D1     		bne	.L6
 129              		.loc 1 162 0 is_stmt 0 discriminator 1
 130              		.syntax divided
 131              	@ 162 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 132 0012 72B6     		 cpsid i 
 133              	@ 0 "" 2
 134              		.thumb
 135              		.syntax unified
 136              	.L7:
 137 0014 FEE7     		b	.L7
 138              	.L6:
 163:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portDISABLE_INTERRUPTS();
 139              		.loc 1 163 0 is_stmt 1 discriminator 2
 140              		.syntax divided
 141              	@ 163 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 142 0016 72B6     		 cpsid i 
 143              	@ 0 "" 2
 164:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 165:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     while( ulDummy == 0 )
 144              		.loc 1 165 0 discriminator 2
 145              		.thumb
 146              		.syntax unified
 147 0018 C046     		nop
 148              	.L8:
 149              		.loc 1 165 0 is_stmt 0 discriminator 1
 150 001a 7B68     		ldr	r3, [r7, #4]
 151 001c 002B     		cmp	r3, #0
 152 001e FCD0     		beq	.L8
 166:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     {
 167:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         /* This file calls prvTaskExitError() after the scheduler has been
 168:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****          * started to remove a compiler warning about the function being defined
 169:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****          * but never called.  ulDummy is used purely to quieten other warnings
 170:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****          * about code appearing after this function is called - making ulDummy
 171:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****          * volatile makes the compiler think the function could return and
 172:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****          * therefore not output an 'unreachable code' warning for code that appears
 173:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****          * after it. */
 174:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     }
 175:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 153              		.loc 1 175 0 is_stmt 1
 154 0020 C046     		nop
 155 0022 BD46     		mov	sp, r7
 156 0024 02B0     		add	sp, sp, #8
 157              		@ sp needed
 158 0026 80BD     		pop	{r7, pc}
 159              	.L10:
 160              		.align	2
 161              	.L9:
 162 0028 00000000 		.word	x
 163              		.cfi_endproc
 164              	.LFE1:
 165              		.size	prvTaskExitError, .-prvTaskExitError
 166              		.section	.text.vPortSVCHandler,"ax",%progbits
 167              		.align	2
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 7


 168              		.global	vPortSVCHandler
 169              		.code	16
 170              		.thumb_func
 171              		.type	vPortSVCHandler, %function
 172              	vPortSVCHandler:
 173              	.LFB2:
 176:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 177:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 178:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortSVCHandler( void )
 179:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 174              		.loc 1 179 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 7, -8
 181              		.cfi_offset 14, -4
 182 0002 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 180:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* This function is no longer used, but retained for backward
 181:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * compatibility. */
 182:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 184              		.loc 1 182 0
 185 0004 C046     		nop
 186 0006 BD46     		mov	sp, r7
 187              		@ sp needed
 188 0008 80BD     		pop	{r7, pc}
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	vPortSVCHandler, .-vPortSVCHandler
 192              		.section	.text.vPortStartFirstTask,"ax",%progbits
 193              		.align	2
 194              		.code	16
 195              		.thumb_func
 196              		.type	vPortStartFirstTask, %function
 197              	vPortStartFirstTask:
 198              	.LFB3:
 183:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 184:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 185:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortStartFirstTask( void )
 186:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 199              		.loc 1 186 0
 200              		.cfi_startproc
 201              		@ Naked Function: prologue and epilogue provided by programmer.
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 187:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* The MSP stack is not reset as, unlike on M3/4 parts, there is no vector
 188:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * table offset register that can be used to locate the initial stack value.
 189:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * Not all M0 parts have the application vector table at address 0. */
 190:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile (
 204              		.loc 1 190 0
 205              		.syntax divided
 206              	@ 190 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 207              			.syntax unified				
 208 0000 0B4A     		ldr  r2, pxCurrentTCBConst2	
 209 0002 1368     		ldr  r3, [r2]				
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 8


 210 0004 1868     		ldr  r0, [r3]				
 211 0006 2030     		adds r0, #32					
 212 0008 80F30988 		msr  psp, r0					
 213 000c 0220     		movs r0, #2					
 214 000e 80F31488 		msr  CONTROL, r0				
 215 0012 BFF36F8F 		isb							
 216 0016 3FBC     		pop  {r0-r5}					
 217 0018 AE46     		mov  lr, r5					
 218 001a 08BC     		pop  {r3}					
 219 001c 04BC     		pop  {r2}					
 220 001e 62B6     		cpsie i						
 221 0020 1847     		bx   r3						
 222              									
 223 0022 C046C046 		.align 4					
 223      C046C046 
 223      C046C046 
 223      C046
 224 0030 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB	  
 225              	@ 0 "" 2
 191:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	.syntax unified				\n"
 192:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr  r2, pxCurrentTCBConst2	\n"/* Obtain location of pxCurrentTCB. */
 193:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr  r3, [r2]				\n"
 194:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr  r0, [r3]				\n"/* The first item in pxCurrentTCB is the task top of stack. */
 195:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	adds r0, #32					\n"/* Discard everything up to r0. */
 196:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	msr  psp, r0					\n"/* This is now the new top of stack to use in the task. */
 197:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	movs r0, #2					\n"/* Switch to the psp stack. */
 198:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	msr  CONTROL, r0				\n"
 199:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	isb							\n"
 200:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	pop  {r0-r5}					\n"/* Pop the registers that are saved automatically. */
 201:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	mov  lr, r5					\n"/* lr is now in r5. */
 202:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	pop  {r3}					\n"/* Return address is now in r3. */
 203:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	pop  {r2}					\n"/* Pop and discard XPSR. */
 204:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	cpsie i						\n"/* The first task has its context and interrupts can be enabled. */
 205:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	bx   r3						\n"/* Finally, jump to the user defined task code. */
 206:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "								\n"
 207:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	.align 4					\n"
 208:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "pxCurrentTCBConst2: .word pxCurrentTCB	  "
 209:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         );
 210:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 226              		.loc 1 210 0
 227              		.thumb
 228              		.syntax unified
 229 0034 C046     		nop
 230              		.cfi_endproc
 231              	.LFE3:
 232              		.size	vPortStartFirstTask, .-vPortStartFirstTask
 233 0036 C046     		.section	.text.xPortStartScheduler,"ax",%progbits
 234              		.align	2
 235              		.global	xPortStartScheduler
 236              		.code	16
 237              		.thumb_func
 238              		.type	xPortStartScheduler, %function
 239              	xPortStartScheduler:
 240              	.LFB4:
 211:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 212:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 213:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 9


 214:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * See header file for description.
 215:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
 216:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** BaseType_t xPortStartScheduler( void )
 217:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 241              		.loc 1 217 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 218:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Make PendSV, CallSV and SysTick the same priority as the kernel. */
 219:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 251              		.loc 1 219 0
 252 0004 0E4B     		ldr	r3, .L15
 253 0006 0E4A     		ldr	r2, .L15
 254 0008 1268     		ldr	r2, [r2]
 255 000a FF21     		movs	r1, #255
 256 000c 0904     		lsls	r1, r1, #16
 257 000e 0A43     		orrs	r2, r1
 258 0010 1A60     		str	r2, [r3]
 220:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 259              		.loc 1 220 0
 260 0012 0B4B     		ldr	r3, .L15
 261 0014 0A4A     		ldr	r2, .L15
 262 0016 1268     		ldr	r2, [r2]
 263 0018 FF21     		movs	r1, #255
 264 001a 0906     		lsls	r1, r1, #24
 265 001c 0A43     		orrs	r2, r1
 266 001e 1A60     		str	r2, [r3]
 221:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 222:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Start the timer that generates the tick ISR.  Interrupts are disabled
 223:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * here already. */
 224:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     vPortSetupTimerInterrupt();
 267              		.loc 1 224 0
 268 0020 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 225:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 226:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Initialise the critical nesting count ready for the first task. */
 227:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     uxCriticalNesting = 0;
 269              		.loc 1 227 0
 270 0024 074B     		ldr	r3, .L15+4
 271 0026 0022     		movs	r2, #0
 272 0028 1A60     		str	r2, [r3]
 228:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 229:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Start the first task. */
 230:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     vPortStartFirstTask();
 273              		.loc 1 230 0
 274 002a FFF7FEFF 		bl	vPortStartFirstTask
 231:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 232:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Should never get here as the tasks will now be executing!  Call the task
 233:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * exit error function to prevent compiler warnings about a static function
 234:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * not being called in the case that the application writer overrides this
 235:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * functionality by defining configTASK_RETURN_ADDRESS.  Call
 236:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * vTaskSwitchContext() so link time optimisation does not remove the
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 10


 237:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * symbol. */
 238:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     vTaskSwitchContext();
 275              		.loc 1 238 0
 276 002e FFF7FEFF 		bl	vTaskSwitchContext
 239:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     prvTaskExitError();
 277              		.loc 1 239 0
 278 0032 FFF7FEFF 		bl	prvTaskExitError
 240:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 241:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Should not get here! */
 242:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     return 0;
 279              		.loc 1 242 0
 280 0036 0023     		movs	r3, #0
 243:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 281              		.loc 1 243 0
 282 0038 1800     		movs	r0, r3
 283 003a BD46     		mov	sp, r7
 284              		@ sp needed
 285 003c 80BD     		pop	{r7, pc}
 286              	.L16:
 287 003e C046     		.align	2
 288              	.L15:
 289 0040 20ED00E0 		.word	-536810208
 290 0044 00000000 		.word	uxCriticalNesting
 291              		.cfi_endproc
 292              	.LFE4:
 293              		.size	xPortStartScheduler, .-xPortStartScheduler
 294              		.section	.text.vPortEndScheduler,"ax",%progbits
 295              		.align	2
 296              		.global	vPortEndScheduler
 297              		.code	16
 298              		.thumb_func
 299              		.type	vPortEndScheduler, %function
 300              	vPortEndScheduler:
 301              	.LFB5:
 244:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 245:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 246:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortEndScheduler( void )
 247:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 302              		.loc 1 247 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 00AF     		add	r7, sp, #0
 311              		.cfi_def_cfa_register 7
 248:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Not implemented in ports where there is nothing to return to.
 249:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * Artificially force an assert. */
 250:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     configASSERT( uxCriticalNesting == 1000UL );
 312              		.loc 1 250 0
 313 0004 044B     		ldr	r3, .L20
 314 0006 1B88     		ldrh	r3, [r3]
 315 0008 002B     		cmp	r3, #0
 316 000a 01D1     		bne	.L18
 317              		.loc 1 250 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 11


 318              		.syntax divided
 319              	@ 250 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 320 000c 72B6     		 cpsid i 
 321              	@ 0 "" 2
 322              		.thumb
 323              		.syntax unified
 324              	.L19:
 325 000e FEE7     		b	.L19
 326              	.L18:
 251:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 327              		.loc 1 251 0 is_stmt 1 discriminator 2
 328 0010 C046     		nop
 329 0012 BD46     		mov	sp, r7
 330              		@ sp needed
 331 0014 80BD     		pop	{r7, pc}
 332              	.L21:
 333 0016 C046     		.align	2
 334              	.L20:
 335 0018 00000000 		.word	x
 336              		.cfi_endproc
 337              	.LFE5:
 338              		.size	vPortEndScheduler, .-vPortEndScheduler
 339              		.section	.text.vPortYield,"ax",%progbits
 340              		.align	2
 341              		.global	vPortYield
 342              		.code	16
 343              		.thumb_func
 344              		.type	vPortYield, %function
 345              	vPortYield:
 346              	.LFB6:
 252:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 253:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 254:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortYield( void )
 255:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 347              		.loc 1 255 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 1, uses_anonymous_args = 0
 351 0000 80B5     		push	{r7, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 256:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Set a PendSV to request a context switch. */
 257:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 357              		.loc 1 257 0
 358 0004 054B     		ldr	r3, .L23
 359 0006 8022     		movs	r2, #128
 360 0008 5205     		lsls	r2, r2, #21
 361 000a 1A60     		str	r2, [r3]
 258:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 259:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Barriers are normally not required but do ensure the code is completely
 260:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****      * within the specified behaviour for the architecture. */
 261:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile ( "dsb" ::: "memory" );
 362              		.loc 1 261 0
 363              		.syntax divided
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 12


 364              	@ 261 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 365 000c BFF34F8F 		dsb
 366              	@ 0 "" 2
 262:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile ( "isb" );
 367              		.loc 1 262 0
 368              	@ 262 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 369 0010 BFF36F8F 		isb
 370              	@ 0 "" 2
 263:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 371              		.loc 1 263 0
 372              		.thumb
 373              		.syntax unified
 374 0014 C046     		nop
 375 0016 BD46     		mov	sp, r7
 376              		@ sp needed
 377 0018 80BD     		pop	{r7, pc}
 378              	.L24:
 379 001a C046     		.align	2
 380              	.L23:
 381 001c 04ED00E0 		.word	-536810236
 382              		.cfi_endproc
 383              	.LFE6:
 384              		.size	vPortYield, .-vPortYield
 385              		.section	.text.vPortEnterCritical,"ax",%progbits
 386              		.align	2
 387              		.global	vPortEnterCritical
 388              		.code	16
 389              		.thumb_func
 390              		.type	vPortEnterCritical, %function
 391              	vPortEnterCritical:
 392              	.LFB7:
 264:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 265:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 266:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortEnterCritical( void )
 267:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 393              		.loc 1 267 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 00AF     		add	r7, sp, #0
 402              		.cfi_def_cfa_register 7
 268:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portDISABLE_INTERRUPTS();
 403              		.loc 1 268 0
 404              		.syntax divided
 405              	@ 268 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 406 0004 72B6     		 cpsid i 
 407              	@ 0 "" 2
 269:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     uxCriticalNesting++;
 408              		.loc 1 269 0
 409              		.thumb
 410              		.syntax unified
 411 0006 064B     		ldr	r3, .L26
 412 0008 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 13


 413 000a 5A1C     		adds	r2, r3, #1
 414 000c 044B     		ldr	r3, .L26
 415 000e 1A60     		str	r2, [r3]
 270:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile ( "dsb" ::: "memory" );
 416              		.loc 1 270 0
 417              		.syntax divided
 418              	@ 270 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 419 0010 BFF34F8F 		dsb
 420              	@ 0 "" 2
 271:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile ( "isb" );
 421              		.loc 1 271 0
 422              	@ 271 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 423 0014 BFF36F8F 		isb
 424              	@ 0 "" 2
 272:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 425              		.loc 1 272 0
 426              		.thumb
 427              		.syntax unified
 428 0018 C046     		nop
 429 001a BD46     		mov	sp, r7
 430              		@ sp needed
 431 001c 80BD     		pop	{r7, pc}
 432              	.L27:
 433 001e C046     		.align	2
 434              	.L26:
 435 0020 00000000 		.word	uxCriticalNesting
 436              		.cfi_endproc
 437              	.LFE7:
 438              		.size	vPortEnterCritical, .-vPortEnterCritical
 439              		.section	.text.vPortExitCritical,"ax",%progbits
 440              		.align	2
 441              		.global	vPortExitCritical
 442              		.code	16
 443              		.thumb_func
 444              		.type	vPortExitCritical, %function
 445              	vPortExitCritical:
 446              	.LFB8:
 273:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 274:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 275:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vPortExitCritical( void )
 276:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 447              		.loc 1 276 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
 277:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     configASSERT( uxCriticalNesting );
 457              		.loc 1 277 0
 458 0004 094B     		ldr	r3, .L33
 459 0006 1B88     		ldrh	r3, [r3]
 460 0008 002B     		cmp	r3, #0
 461 000a 01D1     		bne	.L29
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 14


 462              		.loc 1 277 0 is_stmt 0 discriminator 1
 463              		.syntax divided
 464              	@ 277 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 465 000c 72B6     		 cpsid i 
 466              	@ 0 "" 2
 467              		.thumb
 468              		.syntax unified
 469              	.L30:
 470 000e FEE7     		b	.L30
 471              	.L29:
 278:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     uxCriticalNesting--;
 472              		.loc 1 278 0 is_stmt 1
 473 0010 074B     		ldr	r3, .L33+4
 474 0012 1B68     		ldr	r3, [r3]
 475 0014 5A1E     		subs	r2, r3, #1
 476 0016 064B     		ldr	r3, .L33+4
 477 0018 1A60     		str	r2, [r3]
 279:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 280:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     if( uxCriticalNesting == 0 )
 478              		.loc 1 280 0
 479 001a 054B     		ldr	r3, .L33+4
 480 001c 1B68     		ldr	r3, [r3]
 481 001e 002B     		cmp	r3, #0
 482 0020 00D1     		bne	.L32
 281:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     {
 282:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         portENABLE_INTERRUPTS();
 483              		.loc 1 282 0
 484              		.syntax divided
 485              	@ 282 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 486 0022 62B6     		 cpsie i 
 487              	@ 0 "" 2
 488              		.thumb
 489              		.syntax unified
 490              	.L32:
 283:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     }
 284:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 491              		.loc 1 284 0
 492 0024 C046     		nop
 493 0026 BD46     		mov	sp, r7
 494              		@ sp needed
 495 0028 80BD     		pop	{r7, pc}
 496              	.L34:
 497 002a C046     		.align	2
 498              	.L33:
 499 002c 00000000 		.word	x
 500 0030 00000000 		.word	uxCriticalNesting
 501              		.cfi_endproc
 502              	.LFE8:
 503              		.size	vPortExitCritical, .-vPortExitCritical
 504              		.section	.text.ulSetInterruptMaskFromISR,"ax",%progbits
 505              		.align	2
 506              		.global	ulSetInterruptMaskFromISR
 507              		.code	16
 508              		.thumb_func
 509              		.type	ulSetInterruptMaskFromISR, %function
 510              	ulSetInterruptMaskFromISR:
 511              	.LFB9:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 15


 285:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 286:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 287:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** uint32_t ulSetInterruptMaskFromISR( void )
 288:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 512              		.loc 1 288 0
 513              		.cfi_startproc
 514              		@ Naked Function: prologue and epilogue provided by programmer.
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 289:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile (
 517              		.loc 1 289 0
 518              		.syntax divided
 519              	@ 289 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 520 0000 EFF31080 		 mrs r0, PRIMASK	
 521 0004 72B6     	 cpsid i			
 522 0006 7047     	 bx lr				  
 523              	@ 0 "" 2
 290:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " mrs r0, PRIMASK	\n"
 291:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " cpsid i			\n"
 292:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " bx lr				  "
 293:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         ::: "memory"
 294:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         );
 295:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 524              		.loc 1 295 0
 525              		.thumb
 526              		.syntax unified
 527 0008 C046     		nop
 528 000a 1800     		movs	r0, r3
 529              		.cfi_endproc
 530              	.LFE9:
 531              		.size	ulSetInterruptMaskFromISR, .-ulSetInterruptMaskFromISR
 532              		.section	.text.vClearInterruptMaskFromISR,"ax",%progbits
 533              		.align	2
 534              		.global	vClearInterruptMaskFromISR
 535              		.code	16
 536              		.thumb_func
 537              		.type	vClearInterruptMaskFromISR, %function
 538              	vClearInterruptMaskFromISR:
 539              	.LFB10:
 296:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 297:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 298:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void vClearInterruptMaskFromISR( __attribute__( ( unused ) ) uint32_t ulMask )
 299:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 540              		.loc 1 299 0
 541              		.cfi_startproc
 542              		@ Naked Function: prologue and epilogue provided by programmer.
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 300:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile (
 545              		.loc 1 300 0
 546              		.syntax divided
 547              	@ 300 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 548 0000 80F31088 		 msr PRIMASK, r0	
 549 0004 7047     	 bx lr				  
 550              	@ 0 "" 2
 301:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " msr PRIMASK, r0	\n"
 302:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " bx lr				  "
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 16


 303:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         ::: "memory"
 304:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         );
 305:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 551              		.loc 1 305 0
 552              		.thumb
 553              		.syntax unified
 554 0006 C046     		nop
 555              		.cfi_endproc
 556              	.LFE10:
 557              		.size	vClearInterruptMaskFromISR, .-vClearInterruptMaskFromISR
 558              		.section	.text.xPortPendSVHandler,"ax",%progbits
 559              		.align	2
 560              		.global	xPortPendSVHandler
 561              		.code	16
 562              		.thumb_func
 563              		.type	xPortPendSVHandler, %function
 564              	xPortPendSVHandler:
 565              	.LFB11:
 306:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 307:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 308:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void xPortPendSVHandler( void )
 309:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 566              		.loc 1 309 0
 567              		.cfi_startproc
 568              		@ Naked Function: prologue and epilogue provided by programmer.
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 1, uses_anonymous_args = 0
 310:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* This is a naked function. */
 311:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 312:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     __asm volatile
 571              		.loc 1 312 0
 572              		.syntax divided
 573              	@ 312 "..\FreeRTOS\Source\portable\GCC\ARM_CM0\port.c" 1
 574              			.syntax unified						
 575 0000 EFF30980 		mrs r0, psp							
 576              											
 577 0004 0E4B     		ldr	r3, pxCurrentTCBConst			
 578 0006 1A68     		ldr	r2, [r3]						
 579              											
 580 0008 2038     		subs r0, r0, #32					
 581 000a 1060     		str r0, [r2]						
 582 000c F0C0     		stmia r0!, {r4-r7}					
 583 000e 4446     	 	mov r4, r8							
 584 0010 4D46     	 	mov r5, r9							
 585 0012 5646     	 	mov r6, r10							
 586 0014 5F46     	 	mov r7, r11							
 587 0016 F0C0     	 	stmia r0!, {r4-r7}					
 588              											
 589 0018 08B5     		push {r3, r14}						
 590 001a 72B6     		cpsid i								
 591 001c FFF7FEFF 		bl vTaskSwitchContext				
 592 0020 62B6     		cpsie i								
 593 0022 0CBC     		pop {r2, r3}						
 594              											
 595 0024 1168     		ldr r1, [r2]						
 596 0026 0868     		ldr r0, [r1]						
 597 0028 1030     		adds r0, r0, #16					
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 17


 598 002a F0C8     		ldmia r0!, {r4-r7}					
 599 002c A046     	 	mov r8, r4							
 600 002e A946     	 	mov r9, r5							
 601 0030 B246     	 	mov r10, r6							
 602 0032 BB46     	 	mov r11, r7							
 603              											
 604 0034 80F30988 		msr psp, r0							
 605              											
 606 0038 2038     		subs r0, r0, #32					
 607 003a F0C8     	 	ldmia r0!, {r4-r7}					
 608              											
 609 003c 1847     		bx r3								
 610              											
 611 003e C046     		.align 4							
 612 0040 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	  
 613              	@ 0 "" 2
 313:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     (
 314:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	.syntax unified						\n"
 315:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	mrs r0, psp							\n"
 316:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 317:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr	r3, pxCurrentTCBConst			\n"/* Get the location of the current TCB. */
 318:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr	r2, [r3]						\n"
 319:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 320:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	subs r0, r0, #32					\n"/* Make space for the remaining low registers. */
 321:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	str r0, [r2]						\n"/* Save the new top of stack. */
 322:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	stmia r0!, {r4-r7}					\n"/* Store the low registers that are not saved automatically. */
 323:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r4, r8							\n"/* Store the high registers. */
 324:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r5, r9							\n"
 325:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r6, r10							\n"
 326:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r7, r11							\n"
 327:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	stmia r0!, {r4-r7}					\n"
 328:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 329:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	push {r3, r14}						\n"
 330:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	cpsid i								\n"
 331:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	bl vTaskSwitchContext				\n"
 332:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	cpsie i								\n"
 333:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	pop {r2, r3}						\n"/* lr goes in r3. r2 now holds tcb pointer. */
 334:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 335:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr r1, [r2]						\n"
 336:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldr r0, [r1]						\n"/* The first item in pxCurrentTCB is the task top of stack. */
 337:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	adds r0, r0, #16					\n"/* Move to the high registers. */
 338:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	ldmia r0!, {r4-r7}					\n"/* Pop the high registers. */
 339:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r8, r4							\n"
 340:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r9, r5							\n"
 341:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r10, r6							\n"
 342:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	mov r11, r7							\n"
 343:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 344:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	msr psp, r0							\n"/* Remember the new top of stack for the task. */
 345:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 346:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	subs r0, r0, #32					\n"/* Go back for the low registers that are not automatically resto
 347:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         " 	ldmia r0!, {r4-r7}					\n"/* Pop low registers.  */
 348:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 349:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	bx r3								\n"
 350:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "										\n"
 351:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "	.align 4							\n"
 352:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         "pxCurrentTCBConst: .word pxCurrentTCB	  "
 353:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     );
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 18


 354:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 614              		.loc 1 354 0
 615              		.thumb
 616              		.syntax unified
 617 0044 C046     		nop
 618              		.cfi_endproc
 619              	.LFE11:
 620              		.size	xPortPendSVHandler, .-xPortPendSVHandler
 621 0046 C046     		.section	.text.xPortSysTickHandler,"ax",%progbits
 622              		.align	2
 623              		.global	xPortSysTickHandler
 624              		.code	16
 625              		.thumb_func
 626              		.type	xPortSysTickHandler, %function
 627              	xPortSysTickHandler:
 628              	.LFB12:
 355:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 356:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 357:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** void xPortSysTickHandler( void )
 358:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 629              		.loc 1 358 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 8
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 82B0     		sub	sp, sp, #8
 638              		.cfi_def_cfa_offset 16
 639 0004 00AF     		add	r7, sp, #0
 640              		.cfi_def_cfa_register 7
 359:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     uint32_t ulPreviousMask;
 360:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 361:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     ulPreviousMask = portSET_INTERRUPT_MASK_FROM_ISR();
 641              		.loc 1 361 0
 642 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 643 000a 0300     		movs	r3, r0
 644 000c 7B60     		str	r3, [r7, #4]
 362:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     {
 363:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         /* Increment the RTOS tick. */
 364:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         if( xTaskIncrementTick() != pdFALSE )
 645              		.loc 1 364 0
 646 000e FFF7FEFF 		bl	xTaskIncrementTick
 647 0012 031E     		subs	r3, r0, #0
 648 0014 03D0     		beq	.L39
 365:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         {
 366:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****             /* Pend a context switch. */
 367:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****             portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 649              		.loc 1 367 0
 650 0016 064B     		ldr	r3, .L40
 651 0018 8022     		movs	r2, #128
 652 001a 5205     		lsls	r2, r2, #21
 653 001c 1A60     		str	r2, [r3]
 654              	.L39:
 368:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         }
 369:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     }
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 19


 370:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR( ulPreviousMask );
 655              		.loc 1 370 0
 656 001e 7B68     		ldr	r3, [r7, #4]
 657 0020 1800     		movs	r0, r3
 658 0022 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 371:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 659              		.loc 1 371 0
 660 0026 C046     		nop
 661 0028 BD46     		mov	sp, r7
 662 002a 02B0     		add	sp, sp, #8
 663              		@ sp needed
 664 002c 80BD     		pop	{r7, pc}
 665              	.L41:
 666 002e C046     		.align	2
 667              	.L40:
 668 0030 04ED00E0 		.word	-536810236
 669              		.cfi_endproc
 670              	.LFE12:
 671              		.size	xPortSysTickHandler, .-xPortSysTickHandler
 672              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 673              		.align	2
 674              		.weak	vPortSetupTimerInterrupt
 675              		.code	16
 676              		.thumb_func
 677              		.type	vPortSetupTimerInterrupt, %function
 678              	vPortSetupTimerInterrupt:
 679              	.LFB13:
 372:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*-----------------------------------------------------------*/
 373:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 374:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** /*
 375:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 376:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  * frequency.
 377:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****  */
 378:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** __attribute__( ( weak ) ) void vPortSetupTimerInterrupt( void )
 379:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** {
 680              		.loc 1 379 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 0000 80B5     		push	{r7, lr}
 685              		.cfi_def_cfa_offset 8
 686              		.cfi_offset 7, -8
 687              		.cfi_offset 14, -4
 688 0002 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 380:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Calculate the constants required to configure the tick interrupt. */
 381:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     #if ( configUSE_TICKLESS_IDLE == 1 )
 382:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         {
 383:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****             ulTimerCountsForOneTick = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ );
 384:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****             xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 385:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****             ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR;
 386:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****         }
 387:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     #endif /* configUSE_TICKLESS_IDLE */
 388:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 389:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Stop and reset the SysTick. */
 390:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_SYSTICK_CTRL_REG = 0UL;
 690              		.loc 1 390 0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 20


 691 0004 074B     		ldr	r3, .L43
 692 0006 0022     		movs	r2, #0
 693 0008 1A60     		str	r2, [r3]
 391:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 694              		.loc 1 391 0
 695 000a 074B     		ldr	r3, .L43+4
 696 000c 0022     		movs	r2, #0
 697 000e 1A60     		str	r2, [r3]
 392:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** 
 393:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     /* Configure SysTick to interrupt at the requested rate. */
 394:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_SYSTICK_LOAD_REG = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 698              		.loc 1 394 0
 699 0010 064B     		ldr	r3, .L43+8
 700 0012 074A     		ldr	r2, .L43+12
 701 0014 1A60     		str	r2, [r3]
 395:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c ****     portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYST
 702              		.loc 1 395 0
 703 0016 034B     		ldr	r3, .L43
 704 0018 0722     		movs	r2, #7
 705 001a 1A60     		str	r2, [r3]
 396:..\FreeRTOS\Source\portable\GCC\ARM_CM0/port.c **** }
 706              		.loc 1 396 0
 707 001c C046     		nop
 708 001e BD46     		mov	sp, r7
 709              		@ sp needed
 710 0020 80BD     		pop	{r7, pc}
 711              	.L44:
 712 0022 C046     		.align	2
 713              	.L43:
 714 0024 10E000E0 		.word	-536813552
 715 0028 18E000E0 		.word	-536813544
 716 002c 14E000E0 		.word	-536813548
 717 0030 5FEA0000 		.word	59999
 718              		.cfi_endproc
 719              	.LFE13:
 720              		.size	vPortSetupTimerInterrupt, .-vPortSetupTimerInterrupt
 721              		.text
 722              	.Letext0:
 723              		.file 2 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 724              		.file 3 "d:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 725              		.file 4 "..\\FreeRTOS\\Source\\include/projdefs.h"
 726              		.file 5 "..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM0/portmacro.h"
 727              		.file 6 "./FreeRTOSConfig.h"
 728              		.section	.debug_info,"",%progbits
 729              	.Ldebug_info0:
 730 0000 7D020000 		.4byte	0x27d
 731 0004 0400     		.2byte	0x4
 732 0006 00000000 		.4byte	.Ldebug_abbrev0
 733 000a 04       		.byte	0x4
 734 000b 01       		.uleb128 0x1
 735 000c 51010000 		.4byte	.LASF38
 736 0010 0C       		.byte	0xc
 737 0011 D5020000 		.4byte	.LASF39
 738 0015 89000000 		.4byte	.LASF40
 739 0019 00000000 		.4byte	.Ldebug_ranges0+0
 740 001d 00000000 		.4byte	0
 741 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 21


 742 0025 02       		.uleb128 0x2
 743 0026 04       		.byte	0x4
 744 0027 05       		.byte	0x5
 745 0028 696E7400 		.ascii	"int\000"
 746 002c 03       		.uleb128 0x3
 747 002d 04       		.byte	0x4
 748 002e 07       		.byte	0x7
 749 002f 1F020000 		.4byte	.LASF0
 750 0033 03       		.uleb128 0x3
 751 0034 08       		.byte	0x8
 752 0035 05       		.byte	0x5
 753 0036 98020000 		.4byte	.LASF1
 754 003a 03       		.uleb128 0x3
 755 003b 08       		.byte	0x8
 756 003c 04       		.byte	0x4
 757 003d 43030000 		.4byte	.LASF2
 758 0041 03       		.uleb128 0x3
 759 0042 01       		.byte	0x1
 760 0043 06       		.byte	0x6
 761 0044 4F030000 		.4byte	.LASF3
 762 0048 03       		.uleb128 0x3
 763 0049 01       		.byte	0x1
 764 004a 08       		.byte	0x8
 765 004b 0F010000 		.4byte	.LASF4
 766 004f 03       		.uleb128 0x3
 767 0050 02       		.byte	0x2
 768 0051 05       		.byte	0x5
 769 0052 4C000000 		.4byte	.LASF5
 770 0056 04       		.uleb128 0x4
 771 0057 DF010000 		.4byte	.LASF8
 772 005b 02       		.byte	0x2
 773 005c 2B       		.byte	0x2b
 774 005d 61000000 		.4byte	0x61
 775 0061 03       		.uleb128 0x3
 776 0062 02       		.byte	0x2
 777 0063 07       		.byte	0x7
 778 0064 2F010000 		.4byte	.LASF6
 779 0068 03       		.uleb128 0x3
 780 0069 04       		.byte	0x4
 781 006a 05       		.byte	0x5
 782 006b 33030000 		.4byte	.LASF7
 783 006f 04       		.uleb128 0x4
 784 0070 EA010000 		.4byte	.LASF9
 785 0074 02       		.byte	0x2
 786 0075 41       		.byte	0x41
 787 0076 7A000000 		.4byte	0x7a
 788 007a 03       		.uleb128 0x3
 789 007b 04       		.byte	0x4
 790 007c 07       		.byte	0x7
 791 007d 1D010000 		.4byte	.LASF10
 792 0081 03       		.uleb128 0x3
 793 0082 08       		.byte	0x8
 794 0083 07       		.byte	0x7
 795 0084 2C020000 		.4byte	.LASF11
 796 0088 04       		.uleb128 0x4
 797 0089 04030000 		.4byte	.LASF12
 798 008d 03       		.byte	0x3
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 22


 799 008e 24       		.byte	0x24
 800 008f 56000000 		.4byte	0x56
 801 0093 04       		.uleb128 0x4
 802 0094 2A030000 		.4byte	.LASF13
 803 0098 03       		.byte	0x3
 804 0099 30       		.byte	0x30
 805 009a 6F000000 		.4byte	0x6f
 806 009e 04       		.uleb128 0x4
 807 009f 7A000000 		.4byte	.LASF14
 808 00a3 04       		.byte	0x4
 809 00a4 22       		.byte	0x22
 810 00a5 A9000000 		.4byte	0xa9
 811 00a9 05       		.uleb128 0x5
 812 00aa 04       		.byte	0x4
 813 00ab AF000000 		.4byte	0xaf
 814 00af 06       		.uleb128 0x6
 815 00b0 BA000000 		.4byte	0xba
 816 00b4 07       		.uleb128 0x7
 817 00b5 BA000000 		.4byte	0xba
 818 00b9 00       		.byte	0
 819 00ba 08       		.uleb128 0x8
 820 00bb 04       		.byte	0x4
 821 00bc 04       		.uleb128 0x4
 822 00bd 40000000 		.4byte	.LASF15
 823 00c1 05       		.byte	0x5
 824 00c2 37       		.byte	0x37
 825 00c3 93000000 		.4byte	0x93
 826 00c7 04       		.uleb128 0x4
 827 00c8 7B030000 		.4byte	.LASF16
 828 00cc 05       		.byte	0x5
 829 00cd 38       		.byte	0x38
 830 00ce 68000000 		.4byte	0x68
 831 00d2 04       		.uleb128 0x4
 832 00d3 6F030000 		.4byte	.LASF17
 833 00d7 05       		.byte	0x5
 834 00d8 39       		.byte	0x39
 835 00d9 7A000000 		.4byte	0x7a
 836 00dd 03       		.uleb128 0x3
 837 00de 04       		.byte	0x4
 838 00df 07       		.byte	0x7
 839 00e0 75020000 		.4byte	.LASF18
 840 00e4 03       		.uleb128 0x3
 841 00e5 01       		.byte	0x1
 842 00e6 08       		.byte	0x8
 843 00e7 A6020000 		.4byte	.LASF19
 844 00eb 05       		.uleb128 0x5
 845 00ec 04       		.byte	0x4
 846 00ed BC000000 		.4byte	0xbc
 847 00f1 09       		.uleb128 0x9
 848 00f2 F5010000 		.4byte	.LASF41
 849 00f6 01       		.byte	0x1
 850 00f7 84       		.byte	0x84
 851 00f8 EB000000 		.4byte	0xeb
 852 00fc 00000000 		.4byte	.LFB0
 853 0100 54000000 		.4byte	.LFE0-.LFB0
 854 0104 01       		.uleb128 0x1
 855 0105 9C       		.byte	0x9c
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 23


 856 0106 35010000 		.4byte	0x135
 857 010a 0A       		.uleb128 0xa
 858 010b C8020000 		.4byte	.LASF20
 859 010f 01       		.byte	0x1
 860 0110 84       		.byte	0x84
 861 0111 EB000000 		.4byte	0xeb
 862 0115 02       		.uleb128 0x2
 863 0116 91       		.byte	0x91
 864 0117 74       		.sleb128 -12
 865 0118 0A       		.uleb128 0xa
 866 0119 55020000 		.4byte	.LASF21
 867 011d 01       		.byte	0x1
 868 011e 85       		.byte	0x85
 869 011f 9E000000 		.4byte	0x9e
 870 0123 02       		.uleb128 0x2
 871 0124 91       		.byte	0x91
 872 0125 70       		.sleb128 -16
 873 0126 0A       		.uleb128 0xa
 874 0127 AB020000 		.4byte	.LASF22
 875 012b 01       		.byte	0x1
 876 012c 86       		.byte	0x86
 877 012d BA000000 		.4byte	0xba
 878 0131 02       		.uleb128 0x2
 879 0132 91       		.byte	0x91
 880 0133 6C       		.sleb128 -20
 881 0134 00       		.byte	0
 882 0135 0B       		.uleb128 0xb
 883 0136 69000000 		.4byte	.LASF42
 884 013a 01       		.byte	0x1
 885 013b 98       		.byte	0x98
 886 013c 00000000 		.4byte	.LFB1
 887 0140 2C000000 		.4byte	.LFE1-.LFB1
 888 0144 01       		.uleb128 0x1
 889 0145 9C       		.byte	0x9c
 890 0146 59010000 		.4byte	0x159
 891 014a 0C       		.uleb128 0xc
 892 014b 07010000 		.4byte	.LASF34
 893 014f 01       		.byte	0x1
 894 0150 9A       		.byte	0x9a
 895 0151 59010000 		.4byte	0x159
 896 0155 02       		.uleb128 0x2
 897 0156 91       		.byte	0x91
 898 0157 74       		.sleb128 -12
 899 0158 00       		.byte	0
 900 0159 0D       		.uleb128 0xd
 901 015a 93000000 		.4byte	0x93
 902 015e 0E       		.uleb128 0xe
 903 015f B8020000 		.4byte	.LASF23
 904 0163 01       		.byte	0x1
 905 0164 B2       		.byte	0xb2
 906 0165 00000000 		.4byte	.LFB2
 907 0169 0A000000 		.4byte	.LFE2-.LFB2
 908 016d 01       		.uleb128 0x1
 909 016e 9C       		.byte	0x9c
 910 016f 0F       		.uleb128 0xf
 911 0170 F3000000 		.4byte	.LASF43
 912 0174 01       		.byte	0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 24


 913 0175 B9       		.byte	0xb9
 914 0176 00000000 		.4byte	.LFB3
 915 017a 36000000 		.4byte	.LFE3-.LFB3
 916 017e 01       		.uleb128 0x1
 917 017f 9C       		.byte	0x9c
 918 0180 10       		.uleb128 0x10
 919 0181 5B030000 		.4byte	.LASF28
 920 0185 01       		.byte	0x1
 921 0186 D8       		.byte	0xd8
 922 0187 C7000000 		.4byte	0xc7
 923 018b 00000000 		.4byte	.LFB4
 924 018f 48000000 		.4byte	.LFE4-.LFB4
 925 0193 01       		.uleb128 0x1
 926 0194 9C       		.byte	0x9c
 927 0195 0E       		.uleb128 0xe
 928 0196 2E000000 		.4byte	.LASF24
 929 019a 01       		.byte	0x1
 930 019b F6       		.byte	0xf6
 931 019c 00000000 		.4byte	.LFB5
 932 01a0 1C000000 		.4byte	.LFE5-.LFB5
 933 01a4 01       		.uleb128 0x1
 934 01a5 9C       		.byte	0x9c
 935 01a6 0E       		.uleb128 0xe
 936 01a7 0D030000 		.4byte	.LASF25
 937 01ab 01       		.byte	0x1
 938 01ac FE       		.byte	0xfe
 939 01ad 00000000 		.4byte	.LFB6
 940 01b1 20000000 		.4byte	.LFE6-.LFB6
 941 01b5 01       		.uleb128 0x1
 942 01b6 9C       		.byte	0x9c
 943 01b7 11       		.uleb128 0x11
 944 01b8 1B000000 		.4byte	.LASF26
 945 01bc 01       		.byte	0x1
 946 01bd 0A01     		.2byte	0x10a
 947 01bf 00000000 		.4byte	.LFB7
 948 01c3 24000000 		.4byte	.LFE7-.LFB7
 949 01c7 01       		.uleb128 0x1
 950 01c8 9C       		.byte	0x9c
 951 01c9 11       		.uleb128 0x11
 952 01ca 18030000 		.4byte	.LASF27
 953 01ce 01       		.byte	0x1
 954 01cf 1301     		.2byte	0x113
 955 01d1 00000000 		.4byte	.LFB8
 956 01d5 34000000 		.4byte	.LFE8-.LFB8
 957 01d9 01       		.uleb128 0x1
 958 01da 9C       		.byte	0x9c
 959 01db 12       		.uleb128 0x12
 960 01dc 7E020000 		.4byte	.LASF29
 961 01e0 01       		.byte	0x1
 962 01e1 1F01     		.2byte	0x11f
 963 01e3 93000000 		.4byte	0x93
 964 01e7 00000000 		.4byte	.LFB9
 965 01eb 0C000000 		.4byte	.LFE9-.LFB9
 966 01ef 01       		.uleb128 0x1
 967 01f0 9C       		.byte	0x9c
 968 01f1 13       		.uleb128 0x13
 969 01f2 00000000 		.4byte	.LASF32
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 25


 970 01f6 01       		.byte	0x1
 971 01f7 2A01     		.2byte	0x12a
 972 01f9 00000000 		.4byte	.LFB10
 973 01fd 08000000 		.4byte	.LFE10-.LFB10
 974 0201 01       		.uleb128 0x1
 975 0202 9C       		.byte	0x9c
 976 0203 16020000 		.4byte	0x216
 977 0207 14       		.uleb128 0x14
 978 0208 3C030000 		.4byte	.LASF30
 979 020c 01       		.byte	0x1
 980 020d 2A01     		.2byte	0x12a
 981 020f 93000000 		.4byte	0x93
 982 0213 01       		.uleb128 0x1
 983 0214 50       		.byte	0x50
 984 0215 00       		.byte	0
 985 0216 11       		.uleb128 0x11
 986 0217 56000000 		.4byte	.LASF31
 987 021b 01       		.byte	0x1
 988 021c 3401     		.2byte	0x134
 989 021e 00000000 		.4byte	.LFB11
 990 0222 46000000 		.4byte	.LFE11-.LFB11
 991 0226 01       		.uleb128 0x1
 992 0227 9C       		.byte	0x9c
 993 0228 15       		.uleb128 0x15
 994 0229 0B020000 		.4byte	.LASF33
 995 022d 01       		.byte	0x1
 996 022e 6501     		.2byte	0x165
 997 0230 00000000 		.4byte	.LFB12
 998 0234 34000000 		.4byte	.LFE12-.LFB12
 999 0238 01       		.uleb128 0x1
 1000 0239 9C       		.byte	0x9c
 1001 023a 4E020000 		.4byte	0x24e
 1002 023e 16       		.uleb128 0x16
 1003 023f 42010000 		.4byte	.LASF35
 1004 0243 01       		.byte	0x1
 1005 0244 6701     		.2byte	0x167
 1006 0246 93000000 		.4byte	0x93
 1007 024a 02       		.uleb128 0x2
 1008 024b 91       		.byte	0x91
 1009 024c 74       		.sleb128 -12
 1010 024d 00       		.byte	0
 1011 024e 11       		.uleb128 0x11
 1012 024f 5C020000 		.4byte	.LASF36
 1013 0253 01       		.byte	0x1
 1014 0254 7A01     		.2byte	0x17a
 1015 0256 00000000 		.4byte	.LFB13
 1016 025a 34000000 		.4byte	.LFE13-.LFB13
 1017 025e 01       		.uleb128 0x1
 1018 025f 9C       		.byte	0x9c
 1019 0260 0C       		.uleb128 0xc
 1020 0261 43020000 		.4byte	.LASF37
 1021 0265 01       		.byte	0x1
 1022 0266 64       		.byte	0x64
 1023 0267 D2000000 		.4byte	0xd2
 1024 026b 05       		.uleb128 0x5
 1025 026c 03       		.byte	0x3
 1026 026d 00000000 		.4byte	uxCriticalNesting
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 26


 1027 0271 17       		.uleb128 0x17
 1028 0272 7800     		.ascii	"x\000"
 1029 0274 06       		.byte	0x6
 1030 0275 04       		.byte	0x4
 1031 0276 88000000 		.4byte	0x88
 1032 027a 05       		.uleb128 0x5
 1033 027b 03       		.byte	0x3
 1034 027c 00000000 		.4byte	x
 1035 0280 00       		.byte	0
 1036              		.section	.debug_abbrev,"",%progbits
 1037              	.Ldebug_abbrev0:
 1038 0000 01       		.uleb128 0x1
 1039 0001 11       		.uleb128 0x11
 1040 0002 01       		.byte	0x1
 1041 0003 25       		.uleb128 0x25
 1042 0004 0E       		.uleb128 0xe
 1043 0005 13       		.uleb128 0x13
 1044 0006 0B       		.uleb128 0xb
 1045 0007 03       		.uleb128 0x3
 1046 0008 0E       		.uleb128 0xe
 1047 0009 1B       		.uleb128 0x1b
 1048 000a 0E       		.uleb128 0xe
 1049 000b 55       		.uleb128 0x55
 1050 000c 17       		.uleb128 0x17
 1051 000d 11       		.uleb128 0x11
 1052 000e 01       		.uleb128 0x1
 1053 000f 10       		.uleb128 0x10
 1054 0010 17       		.uleb128 0x17
 1055 0011 00       		.byte	0
 1056 0012 00       		.byte	0
 1057 0013 02       		.uleb128 0x2
 1058 0014 24       		.uleb128 0x24
 1059 0015 00       		.byte	0
 1060 0016 0B       		.uleb128 0xb
 1061 0017 0B       		.uleb128 0xb
 1062 0018 3E       		.uleb128 0x3e
 1063 0019 0B       		.uleb128 0xb
 1064 001a 03       		.uleb128 0x3
 1065 001b 08       		.uleb128 0x8
 1066 001c 00       		.byte	0
 1067 001d 00       		.byte	0
 1068 001e 03       		.uleb128 0x3
 1069 001f 24       		.uleb128 0x24
 1070 0020 00       		.byte	0
 1071 0021 0B       		.uleb128 0xb
 1072 0022 0B       		.uleb128 0xb
 1073 0023 3E       		.uleb128 0x3e
 1074 0024 0B       		.uleb128 0xb
 1075 0025 03       		.uleb128 0x3
 1076 0026 0E       		.uleb128 0xe
 1077 0027 00       		.byte	0
 1078 0028 00       		.byte	0
 1079 0029 04       		.uleb128 0x4
 1080 002a 16       		.uleb128 0x16
 1081 002b 00       		.byte	0
 1082 002c 03       		.uleb128 0x3
 1083 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 27


 1084 002e 3A       		.uleb128 0x3a
 1085 002f 0B       		.uleb128 0xb
 1086 0030 3B       		.uleb128 0x3b
 1087 0031 0B       		.uleb128 0xb
 1088 0032 49       		.uleb128 0x49
 1089 0033 13       		.uleb128 0x13
 1090 0034 00       		.byte	0
 1091 0035 00       		.byte	0
 1092 0036 05       		.uleb128 0x5
 1093 0037 0F       		.uleb128 0xf
 1094 0038 00       		.byte	0
 1095 0039 0B       		.uleb128 0xb
 1096 003a 0B       		.uleb128 0xb
 1097 003b 49       		.uleb128 0x49
 1098 003c 13       		.uleb128 0x13
 1099 003d 00       		.byte	0
 1100 003e 00       		.byte	0
 1101 003f 06       		.uleb128 0x6
 1102 0040 15       		.uleb128 0x15
 1103 0041 01       		.byte	0x1
 1104 0042 27       		.uleb128 0x27
 1105 0043 19       		.uleb128 0x19
 1106 0044 01       		.uleb128 0x1
 1107 0045 13       		.uleb128 0x13
 1108 0046 00       		.byte	0
 1109 0047 00       		.byte	0
 1110 0048 07       		.uleb128 0x7
 1111 0049 05       		.uleb128 0x5
 1112 004a 00       		.byte	0
 1113 004b 49       		.uleb128 0x49
 1114 004c 13       		.uleb128 0x13
 1115 004d 00       		.byte	0
 1116 004e 00       		.byte	0
 1117 004f 08       		.uleb128 0x8
 1118 0050 0F       		.uleb128 0xf
 1119 0051 00       		.byte	0
 1120 0052 0B       		.uleb128 0xb
 1121 0053 0B       		.uleb128 0xb
 1122 0054 00       		.byte	0
 1123 0055 00       		.byte	0
 1124 0056 09       		.uleb128 0x9
 1125 0057 2E       		.uleb128 0x2e
 1126 0058 01       		.byte	0x1
 1127 0059 3F       		.uleb128 0x3f
 1128 005a 19       		.uleb128 0x19
 1129 005b 03       		.uleb128 0x3
 1130 005c 0E       		.uleb128 0xe
 1131 005d 3A       		.uleb128 0x3a
 1132 005e 0B       		.uleb128 0xb
 1133 005f 3B       		.uleb128 0x3b
 1134 0060 0B       		.uleb128 0xb
 1135 0061 27       		.uleb128 0x27
 1136 0062 19       		.uleb128 0x19
 1137 0063 49       		.uleb128 0x49
 1138 0064 13       		.uleb128 0x13
 1139 0065 11       		.uleb128 0x11
 1140 0066 01       		.uleb128 0x1
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 28


 1141 0067 12       		.uleb128 0x12
 1142 0068 06       		.uleb128 0x6
 1143 0069 40       		.uleb128 0x40
 1144 006a 18       		.uleb128 0x18
 1145 006b 9742     		.uleb128 0x2117
 1146 006d 19       		.uleb128 0x19
 1147 006e 01       		.uleb128 0x1
 1148 006f 13       		.uleb128 0x13
 1149 0070 00       		.byte	0
 1150 0071 00       		.byte	0
 1151 0072 0A       		.uleb128 0xa
 1152 0073 05       		.uleb128 0x5
 1153 0074 00       		.byte	0
 1154 0075 03       		.uleb128 0x3
 1155 0076 0E       		.uleb128 0xe
 1156 0077 3A       		.uleb128 0x3a
 1157 0078 0B       		.uleb128 0xb
 1158 0079 3B       		.uleb128 0x3b
 1159 007a 0B       		.uleb128 0xb
 1160 007b 49       		.uleb128 0x49
 1161 007c 13       		.uleb128 0x13
 1162 007d 02       		.uleb128 0x2
 1163 007e 18       		.uleb128 0x18
 1164 007f 00       		.byte	0
 1165 0080 00       		.byte	0
 1166 0081 0B       		.uleb128 0xb
 1167 0082 2E       		.uleb128 0x2e
 1168 0083 01       		.byte	0x1
 1169 0084 03       		.uleb128 0x3
 1170 0085 0E       		.uleb128 0xe
 1171 0086 3A       		.uleb128 0x3a
 1172 0087 0B       		.uleb128 0xb
 1173 0088 3B       		.uleb128 0x3b
 1174 0089 0B       		.uleb128 0xb
 1175 008a 27       		.uleb128 0x27
 1176 008b 19       		.uleb128 0x19
 1177 008c 11       		.uleb128 0x11
 1178 008d 01       		.uleb128 0x1
 1179 008e 12       		.uleb128 0x12
 1180 008f 06       		.uleb128 0x6
 1181 0090 40       		.uleb128 0x40
 1182 0091 18       		.uleb128 0x18
 1183 0092 9742     		.uleb128 0x2117
 1184 0094 19       		.uleb128 0x19
 1185 0095 01       		.uleb128 0x1
 1186 0096 13       		.uleb128 0x13
 1187 0097 00       		.byte	0
 1188 0098 00       		.byte	0
 1189 0099 0C       		.uleb128 0xc
 1190 009a 34       		.uleb128 0x34
 1191 009b 00       		.byte	0
 1192 009c 03       		.uleb128 0x3
 1193 009d 0E       		.uleb128 0xe
 1194 009e 3A       		.uleb128 0x3a
 1195 009f 0B       		.uleb128 0xb
 1196 00a0 3B       		.uleb128 0x3b
 1197 00a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 29


 1198 00a2 49       		.uleb128 0x49
 1199 00a3 13       		.uleb128 0x13
 1200 00a4 02       		.uleb128 0x2
 1201 00a5 18       		.uleb128 0x18
 1202 00a6 00       		.byte	0
 1203 00a7 00       		.byte	0
 1204 00a8 0D       		.uleb128 0xd
 1205 00a9 35       		.uleb128 0x35
 1206 00aa 00       		.byte	0
 1207 00ab 49       		.uleb128 0x49
 1208 00ac 13       		.uleb128 0x13
 1209 00ad 00       		.byte	0
 1210 00ae 00       		.byte	0
 1211 00af 0E       		.uleb128 0xe
 1212 00b0 2E       		.uleb128 0x2e
 1213 00b1 00       		.byte	0
 1214 00b2 3F       		.uleb128 0x3f
 1215 00b3 19       		.uleb128 0x19
 1216 00b4 03       		.uleb128 0x3
 1217 00b5 0E       		.uleb128 0xe
 1218 00b6 3A       		.uleb128 0x3a
 1219 00b7 0B       		.uleb128 0xb
 1220 00b8 3B       		.uleb128 0x3b
 1221 00b9 0B       		.uleb128 0xb
 1222 00ba 27       		.uleb128 0x27
 1223 00bb 19       		.uleb128 0x19
 1224 00bc 11       		.uleb128 0x11
 1225 00bd 01       		.uleb128 0x1
 1226 00be 12       		.uleb128 0x12
 1227 00bf 06       		.uleb128 0x6
 1228 00c0 40       		.uleb128 0x40
 1229 00c1 18       		.uleb128 0x18
 1230 00c2 9742     		.uleb128 0x2117
 1231 00c4 19       		.uleb128 0x19
 1232 00c5 00       		.byte	0
 1233 00c6 00       		.byte	0
 1234 00c7 0F       		.uleb128 0xf
 1235 00c8 2E       		.uleb128 0x2e
 1236 00c9 00       		.byte	0
 1237 00ca 03       		.uleb128 0x3
 1238 00cb 0E       		.uleb128 0xe
 1239 00cc 3A       		.uleb128 0x3a
 1240 00cd 0B       		.uleb128 0xb
 1241 00ce 3B       		.uleb128 0x3b
 1242 00cf 0B       		.uleb128 0xb
 1243 00d0 27       		.uleb128 0x27
 1244 00d1 19       		.uleb128 0x19
 1245 00d2 11       		.uleb128 0x11
 1246 00d3 01       		.uleb128 0x1
 1247 00d4 12       		.uleb128 0x12
 1248 00d5 06       		.uleb128 0x6
 1249 00d6 40       		.uleb128 0x40
 1250 00d7 18       		.uleb128 0x18
 1251 00d8 9742     		.uleb128 0x2117
 1252 00da 19       		.uleb128 0x19
 1253 00db 00       		.byte	0
 1254 00dc 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 30


 1255 00dd 10       		.uleb128 0x10
 1256 00de 2E       		.uleb128 0x2e
 1257 00df 00       		.byte	0
 1258 00e0 3F       		.uleb128 0x3f
 1259 00e1 19       		.uleb128 0x19
 1260 00e2 03       		.uleb128 0x3
 1261 00e3 0E       		.uleb128 0xe
 1262 00e4 3A       		.uleb128 0x3a
 1263 00e5 0B       		.uleb128 0xb
 1264 00e6 3B       		.uleb128 0x3b
 1265 00e7 0B       		.uleb128 0xb
 1266 00e8 27       		.uleb128 0x27
 1267 00e9 19       		.uleb128 0x19
 1268 00ea 49       		.uleb128 0x49
 1269 00eb 13       		.uleb128 0x13
 1270 00ec 11       		.uleb128 0x11
 1271 00ed 01       		.uleb128 0x1
 1272 00ee 12       		.uleb128 0x12
 1273 00ef 06       		.uleb128 0x6
 1274 00f0 40       		.uleb128 0x40
 1275 00f1 18       		.uleb128 0x18
 1276 00f2 9642     		.uleb128 0x2116
 1277 00f4 19       		.uleb128 0x19
 1278 00f5 00       		.byte	0
 1279 00f6 00       		.byte	0
 1280 00f7 11       		.uleb128 0x11
 1281 00f8 2E       		.uleb128 0x2e
 1282 00f9 00       		.byte	0
 1283 00fa 3F       		.uleb128 0x3f
 1284 00fb 19       		.uleb128 0x19
 1285 00fc 03       		.uleb128 0x3
 1286 00fd 0E       		.uleb128 0xe
 1287 00fe 3A       		.uleb128 0x3a
 1288 00ff 0B       		.uleb128 0xb
 1289 0100 3B       		.uleb128 0x3b
 1290 0101 05       		.uleb128 0x5
 1291 0102 27       		.uleb128 0x27
 1292 0103 19       		.uleb128 0x19
 1293 0104 11       		.uleb128 0x11
 1294 0105 01       		.uleb128 0x1
 1295 0106 12       		.uleb128 0x12
 1296 0107 06       		.uleb128 0x6
 1297 0108 40       		.uleb128 0x40
 1298 0109 18       		.uleb128 0x18
 1299 010a 9742     		.uleb128 0x2117
 1300 010c 19       		.uleb128 0x19
 1301 010d 00       		.byte	0
 1302 010e 00       		.byte	0
 1303 010f 12       		.uleb128 0x12
 1304 0110 2E       		.uleb128 0x2e
 1305 0111 00       		.byte	0
 1306 0112 3F       		.uleb128 0x3f
 1307 0113 19       		.uleb128 0x19
 1308 0114 03       		.uleb128 0x3
 1309 0115 0E       		.uleb128 0xe
 1310 0116 3A       		.uleb128 0x3a
 1311 0117 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 31


 1312 0118 3B       		.uleb128 0x3b
 1313 0119 05       		.uleb128 0x5
 1314 011a 27       		.uleb128 0x27
 1315 011b 19       		.uleb128 0x19
 1316 011c 49       		.uleb128 0x49
 1317 011d 13       		.uleb128 0x13
 1318 011e 11       		.uleb128 0x11
 1319 011f 01       		.uleb128 0x1
 1320 0120 12       		.uleb128 0x12
 1321 0121 06       		.uleb128 0x6
 1322 0122 40       		.uleb128 0x40
 1323 0123 18       		.uleb128 0x18
 1324 0124 9742     		.uleb128 0x2117
 1325 0126 19       		.uleb128 0x19
 1326 0127 00       		.byte	0
 1327 0128 00       		.byte	0
 1328 0129 13       		.uleb128 0x13
 1329 012a 2E       		.uleb128 0x2e
 1330 012b 01       		.byte	0x1
 1331 012c 3F       		.uleb128 0x3f
 1332 012d 19       		.uleb128 0x19
 1333 012e 03       		.uleb128 0x3
 1334 012f 0E       		.uleb128 0xe
 1335 0130 3A       		.uleb128 0x3a
 1336 0131 0B       		.uleb128 0xb
 1337 0132 3B       		.uleb128 0x3b
 1338 0133 05       		.uleb128 0x5
 1339 0134 27       		.uleb128 0x27
 1340 0135 19       		.uleb128 0x19
 1341 0136 11       		.uleb128 0x11
 1342 0137 01       		.uleb128 0x1
 1343 0138 12       		.uleb128 0x12
 1344 0139 06       		.uleb128 0x6
 1345 013a 40       		.uleb128 0x40
 1346 013b 18       		.uleb128 0x18
 1347 013c 9742     		.uleb128 0x2117
 1348 013e 19       		.uleb128 0x19
 1349 013f 01       		.uleb128 0x1
 1350 0140 13       		.uleb128 0x13
 1351 0141 00       		.byte	0
 1352 0142 00       		.byte	0
 1353 0143 14       		.uleb128 0x14
 1354 0144 05       		.uleb128 0x5
 1355 0145 00       		.byte	0
 1356 0146 03       		.uleb128 0x3
 1357 0147 0E       		.uleb128 0xe
 1358 0148 3A       		.uleb128 0x3a
 1359 0149 0B       		.uleb128 0xb
 1360 014a 3B       		.uleb128 0x3b
 1361 014b 05       		.uleb128 0x5
 1362 014c 49       		.uleb128 0x49
 1363 014d 13       		.uleb128 0x13
 1364 014e 02       		.uleb128 0x2
 1365 014f 18       		.uleb128 0x18
 1366 0150 00       		.byte	0
 1367 0151 00       		.byte	0
 1368 0152 15       		.uleb128 0x15
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 32


 1369 0153 2E       		.uleb128 0x2e
 1370 0154 01       		.byte	0x1
 1371 0155 3F       		.uleb128 0x3f
 1372 0156 19       		.uleb128 0x19
 1373 0157 03       		.uleb128 0x3
 1374 0158 0E       		.uleb128 0xe
 1375 0159 3A       		.uleb128 0x3a
 1376 015a 0B       		.uleb128 0xb
 1377 015b 3B       		.uleb128 0x3b
 1378 015c 05       		.uleb128 0x5
 1379 015d 27       		.uleb128 0x27
 1380 015e 19       		.uleb128 0x19
 1381 015f 11       		.uleb128 0x11
 1382 0160 01       		.uleb128 0x1
 1383 0161 12       		.uleb128 0x12
 1384 0162 06       		.uleb128 0x6
 1385 0163 40       		.uleb128 0x40
 1386 0164 18       		.uleb128 0x18
 1387 0165 9642     		.uleb128 0x2116
 1388 0167 19       		.uleb128 0x19
 1389 0168 01       		.uleb128 0x1
 1390 0169 13       		.uleb128 0x13
 1391 016a 00       		.byte	0
 1392 016b 00       		.byte	0
 1393 016c 16       		.uleb128 0x16
 1394 016d 34       		.uleb128 0x34
 1395 016e 00       		.byte	0
 1396 016f 03       		.uleb128 0x3
 1397 0170 0E       		.uleb128 0xe
 1398 0171 3A       		.uleb128 0x3a
 1399 0172 0B       		.uleb128 0xb
 1400 0173 3B       		.uleb128 0x3b
 1401 0174 05       		.uleb128 0x5
 1402 0175 49       		.uleb128 0x49
 1403 0176 13       		.uleb128 0x13
 1404 0177 02       		.uleb128 0x2
 1405 0178 18       		.uleb128 0x18
 1406 0179 00       		.byte	0
 1407 017a 00       		.byte	0
 1408 017b 17       		.uleb128 0x17
 1409 017c 34       		.uleb128 0x34
 1410 017d 00       		.byte	0
 1411 017e 03       		.uleb128 0x3
 1412 017f 08       		.uleb128 0x8
 1413 0180 3A       		.uleb128 0x3a
 1414 0181 0B       		.uleb128 0xb
 1415 0182 3B       		.uleb128 0x3b
 1416 0183 0B       		.uleb128 0xb
 1417 0184 49       		.uleb128 0x49
 1418 0185 13       		.uleb128 0x13
 1419 0186 3F       		.uleb128 0x3f
 1420 0187 19       		.uleb128 0x19
 1421 0188 02       		.uleb128 0x2
 1422 0189 18       		.uleb128 0x18
 1423 018a 00       		.byte	0
 1424 018b 00       		.byte	0
 1425 018c 00       		.byte	0
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 33


 1426              		.section	.debug_aranges,"",%progbits
 1427 0000 84000000 		.4byte	0x84
 1428 0004 0200     		.2byte	0x2
 1429 0006 00000000 		.4byte	.Ldebug_info0
 1430 000a 04       		.byte	0x4
 1431 000b 00       		.byte	0
 1432 000c 0000     		.2byte	0
 1433 000e 0000     		.2byte	0
 1434 0010 00000000 		.4byte	.LFB0
 1435 0014 54000000 		.4byte	.LFE0-.LFB0
 1436 0018 00000000 		.4byte	.LFB1
 1437 001c 2C000000 		.4byte	.LFE1-.LFB1
 1438 0020 00000000 		.4byte	.LFB2
 1439 0024 0A000000 		.4byte	.LFE2-.LFB2
 1440 0028 00000000 		.4byte	.LFB3
 1441 002c 36000000 		.4byte	.LFE3-.LFB3
 1442 0030 00000000 		.4byte	.LFB4
 1443 0034 48000000 		.4byte	.LFE4-.LFB4
 1444 0038 00000000 		.4byte	.LFB5
 1445 003c 1C000000 		.4byte	.LFE5-.LFB5
 1446 0040 00000000 		.4byte	.LFB6
 1447 0044 20000000 		.4byte	.LFE6-.LFB6
 1448 0048 00000000 		.4byte	.LFB7
 1449 004c 24000000 		.4byte	.LFE7-.LFB7
 1450 0050 00000000 		.4byte	.LFB8
 1451 0054 34000000 		.4byte	.LFE8-.LFB8
 1452 0058 00000000 		.4byte	.LFB9
 1453 005c 0C000000 		.4byte	.LFE9-.LFB9
 1454 0060 00000000 		.4byte	.LFB10
 1455 0064 08000000 		.4byte	.LFE10-.LFB10
 1456 0068 00000000 		.4byte	.LFB11
 1457 006c 46000000 		.4byte	.LFE11-.LFB11
 1458 0070 00000000 		.4byte	.LFB12
 1459 0074 34000000 		.4byte	.LFE12-.LFB12
 1460 0078 00000000 		.4byte	.LFB13
 1461 007c 34000000 		.4byte	.LFE13-.LFB13
 1462 0080 00000000 		.4byte	0
 1463 0084 00000000 		.4byte	0
 1464              		.section	.debug_ranges,"",%progbits
 1465              	.Ldebug_ranges0:
 1466 0000 00000000 		.4byte	.LFB0
 1467 0004 54000000 		.4byte	.LFE0
 1468 0008 00000000 		.4byte	.LFB1
 1469 000c 2C000000 		.4byte	.LFE1
 1470 0010 00000000 		.4byte	.LFB2
 1471 0014 0A000000 		.4byte	.LFE2
 1472 0018 00000000 		.4byte	.LFB3
 1473 001c 36000000 		.4byte	.LFE3
 1474 0020 00000000 		.4byte	.LFB4
 1475 0024 48000000 		.4byte	.LFE4
 1476 0028 00000000 		.4byte	.LFB5
 1477 002c 1C000000 		.4byte	.LFE5
 1478 0030 00000000 		.4byte	.LFB6
 1479 0034 20000000 		.4byte	.LFE6
 1480 0038 00000000 		.4byte	.LFB7
 1481 003c 24000000 		.4byte	.LFE7
 1482 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 34


 1483 0044 34000000 		.4byte	.LFE8
 1484 0048 00000000 		.4byte	.LFB9
 1485 004c 0C000000 		.4byte	.LFE9
 1486 0050 00000000 		.4byte	.LFB10
 1487 0054 08000000 		.4byte	.LFE10
 1488 0058 00000000 		.4byte	.LFB11
 1489 005c 46000000 		.4byte	.LFE11
 1490 0060 00000000 		.4byte	.LFB12
 1491 0064 34000000 		.4byte	.LFE12
 1492 0068 00000000 		.4byte	.LFB13
 1493 006c 34000000 		.4byte	.LFE13
 1494 0070 00000000 		.4byte	0
 1495 0074 00000000 		.4byte	0
 1496              		.section	.debug_line,"",%progbits
 1497              	.Ldebug_line0:
 1498 0000 E5020000 		.section	.debug_str,"MS",%progbits,1
 1498      02009001 
 1498      00000201 
 1498      FB0E0D00 
 1498      01010101 
 1499              	.LASF32:
 1500 0000 76436C65 		.ascii	"vClearInterruptMaskFromISR\000"
 1500      6172496E 
 1500      74657272 
 1500      7570744D 
 1500      61736B46 
 1501              	.LASF26:
 1502 001b 76506F72 		.ascii	"vPortEnterCritical\000"
 1502      74456E74 
 1502      65724372 
 1502      69746963 
 1502      616C00
 1503              	.LASF24:
 1504 002e 76506F72 		.ascii	"vPortEndScheduler\000"
 1504      74456E64 
 1504      53636865 
 1504      64756C65 
 1504      7200
 1505              	.LASF15:
 1506 0040 53746163 		.ascii	"StackType_t\000"
 1506      6B547970 
 1506      655F7400 
 1507              	.LASF5:
 1508 004c 73686F72 		.ascii	"short int\000"
 1508      7420696E 
 1508      7400
 1509              	.LASF31:
 1510 0056 78506F72 		.ascii	"xPortPendSVHandler\000"
 1510      7450656E 
 1510      64535648 
 1510      616E646C 
 1510      657200
 1511              	.LASF42:
 1512 0069 70727654 		.ascii	"prvTaskExitError\000"
 1512      61736B45 
 1512      78697445 
 1512      72726F72 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 35


 1512      00
 1513              	.LASF14:
 1514 007a 5461736B 		.ascii	"TaskFunction_t\000"
 1514      46756E63 
 1514      74696F6E 
 1514      5F7400
 1515              	.LASF40:
 1516 0089 443A5C55 		.ascii	"D:\\Users\\Jason\\Documents\\Jason's Work\\Labs\\EC"
 1516      73657273 
 1516      5C4A6173 
 1516      6F6E5C44 
 1516      6F63756D 
 1517 00b6 45473732 		.ascii	"EG721Project\\PSoCProject\\PSoC_4_BLE_CapSense_Prox"
 1517      3150726F 
 1517      6A656374 
 1517      5C50536F 
 1517      4350726F 
 1518 00e7 696D6974 		.ascii	"imity.cydsn\000"
 1518      792E6379 
 1518      64736E00 
 1519              	.LASF43:
 1520 00f3 76506F72 		.ascii	"vPortStartFirstTask\000"
 1520      74537461 
 1520      72744669 
 1520      72737454 
 1520      61736B00 
 1521              	.LASF34:
 1522 0107 756C4475 		.ascii	"ulDummy\000"
 1522      6D6D7900 
 1523              	.LASF4:
 1524 010f 756E7369 		.ascii	"unsigned char\000"
 1524      676E6564 
 1524      20636861 
 1524      7200
 1525              	.LASF10:
 1526 011d 6C6F6E67 		.ascii	"long unsigned int\000"
 1526      20756E73 
 1526      69676E65 
 1526      6420696E 
 1526      7400
 1527              	.LASF6:
 1528 012f 73686F72 		.ascii	"short unsigned int\000"
 1528      7420756E 
 1528      7369676E 
 1528      65642069 
 1528      6E7400
 1529              	.LASF35:
 1530 0142 756C5072 		.ascii	"ulPreviousMask\000"
 1530      6576696F 
 1530      75734D61 
 1530      736B00
 1531              	.LASF38:
 1532 0151 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1532      43313120 
 1532      352E342E 
 1532      31203230 
 1532      31363036 
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 36


 1533 0184 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1533      20726576 
 1533      6973696F 
 1533      6E203233 
 1533      37373135 
 1534 01b7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1534      66756E63 
 1534      74696F6E 
 1534      2D736563 
 1534      74696F6E 
 1535              	.LASF8:
 1536 01df 5F5F7569 		.ascii	"__uint16_t\000"
 1536      6E743136 
 1536      5F7400
 1537              	.LASF9:
 1538 01ea 5F5F7569 		.ascii	"__uint32_t\000"
 1538      6E743332 
 1538      5F7400
 1539              	.LASF41:
 1540 01f5 7078506F 		.ascii	"pxPortInitialiseStack\000"
 1540      7274496E 
 1540      69746961 
 1540      6C697365 
 1540      53746163 
 1541              	.LASF33:
 1542 020b 78506F72 		.ascii	"xPortSysTickHandler\000"
 1542      74537973 
 1542      5469636B 
 1542      48616E64 
 1542      6C657200 
 1543              	.LASF0:
 1544 021f 756E7369 		.ascii	"unsigned int\000"
 1544      676E6564 
 1544      20696E74 
 1544      00
 1545              	.LASF11:
 1546 022c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1546      206C6F6E 
 1546      6720756E 
 1546      7369676E 
 1546      65642069 
 1547              	.LASF37:
 1548 0243 75784372 		.ascii	"uxCriticalNesting\000"
 1548      69746963 
 1548      616C4E65 
 1548      7374696E 
 1548      6700
 1549              	.LASF21:
 1550 0255 7078436F 		.ascii	"pxCode\000"
 1550      646500
 1551              	.LASF36:
 1552 025c 76506F72 		.ascii	"vPortSetupTimerInterrupt\000"
 1552      74536574 
 1552      75705469 
 1552      6D657249 
 1552      6E746572 
 1553              	.LASF18:
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 37


 1554 0275 73697A65 		.ascii	"sizetype\000"
 1554      74797065 
 1554      00
 1555              	.LASF29:
 1556 027e 756C5365 		.ascii	"ulSetInterruptMaskFromISR\000"
 1556      74496E74 
 1556      65727275 
 1556      70744D61 
 1556      736B4672 
 1557              	.LASF1:
 1558 0298 6C6F6E67 		.ascii	"long long int\000"
 1558      206C6F6E 
 1558      6720696E 
 1558      7400
 1559              	.LASF19:
 1560 02a6 63686172 		.ascii	"char\000"
 1560      00
 1561              	.LASF22:
 1562 02ab 70765061 		.ascii	"pvParameters\000"
 1562      72616D65 
 1562      74657273 
 1562      00
 1563              	.LASF23:
 1564 02b8 76506F72 		.ascii	"vPortSVCHandler\000"
 1564      74535643 
 1564      48616E64 
 1564      6C657200 
 1565              	.LASF20:
 1566 02c8 7078546F 		.ascii	"pxTopOfStack\000"
 1566      704F6653 
 1566      7461636B 
 1566      00
 1567              	.LASF39:
 1568 02d5 2E2E5C46 		.ascii	"..\\FreeRTOS\\Source\\portable\\GCC\\ARM_CM0\\port."
 1568      72656552 
 1568      544F535C 
 1568      536F7572 
 1568      63655C70 
 1569 0302 6300     		.ascii	"c\000"
 1570              	.LASF12:
 1571 0304 75696E74 		.ascii	"uint16_t\000"
 1571      31365F74 
 1571      00
 1572              	.LASF25:
 1573 030d 76506F72 		.ascii	"vPortYield\000"
 1573      74596965 
 1573      6C6400
 1574              	.LASF27:
 1575 0318 76506F72 		.ascii	"vPortExitCritical\000"
 1575      74457869 
 1575      74437269 
 1575      74696361 
 1575      6C00
 1576              	.LASF13:
 1577 032a 75696E74 		.ascii	"uint32_t\000"
 1577      33325F74 
 1577      00
ARM GAS  C:\Users\Jason\AppData\Local\Temp\ccT8cuVa.s 			page 38


 1578              	.LASF7:
 1579 0333 6C6F6E67 		.ascii	"long int\000"
 1579      20696E74 
 1579      00
 1580              	.LASF30:
 1581 033c 756C4D61 		.ascii	"ulMask\000"
 1581      736B00
 1582              	.LASF2:
 1583 0343 6C6F6E67 		.ascii	"long double\000"
 1583      20646F75 
 1583      626C6500 
 1584              	.LASF3:
 1585 034f 7369676E 		.ascii	"signed char\000"
 1585      65642063 
 1585      68617200 
 1586              	.LASF28:
 1587 035b 78506F72 		.ascii	"xPortStartScheduler\000"
 1587      74537461 
 1587      72745363 
 1587      68656475 
 1587      6C657200 
 1588              	.LASF17:
 1589 036f 55426173 		.ascii	"UBaseType_t\000"
 1589      65547970 
 1589      655F7400 
 1590              	.LASF16:
 1591 037b 42617365 		.ascii	"BaseType_t\000"
 1591      54797065 
 1591      5F7400
 1592              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
